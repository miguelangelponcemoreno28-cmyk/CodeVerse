{
  "68f8082df0850f5968c09f4d": {
    "title": "Conceptos Básicos de HTML",
    "language": "html",
    "level": "principiante",
    "duration": "60 min",
    "description": "Aprende HTML desde cero: estructura, etiquetas, formularios y elementos sematicos para crear paginas web profesionales",
    "content": "<h2><i class='fas fa-globe'></i> Introducción a HTML</h2>\n<p>HTML (HyperText Markup Language) es el lenguaje de marcado estándar para crear páginas web. Es la estructura básica de todos los sitios web que ves en internet.</p>\n\n<h3><i class='fas fa-question-circle'></i> ¿Qué es HTML?</h3>\n<p>HTML no es un lenguaje de programación, es un lenguaje de <strong>marcado</strong> que usa etiquetas para definir la estructura y el contenido de una página web. Piensa en él como el esqueleto de tu sitio web.</p>\n\n<h2><i class='fas fa-file-code'></i> Estructura Básica de un Documento HTML</h2>\n<p>Todo documento HTML tiene una estructura básica que debes conocer:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Mi Primera Página&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;¡Hola Mundo!&lt;/h1&gt;\n  &lt;p&gt;Este es mi primer documento HTML&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <h1>¡Hola Mundo!</h1>\n      <p>Este es mi primer documento HTML</p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación de cada parte:</h3>\n<ul>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>&lt;!DOCTYPE html&gt;</code> - Declara que es un documento HTML5</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>&lt;html&gt;</code> - Elemento raíz que contiene todo el documento</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>&lt;head&gt;</code> - Contiene metadatos, título y enlaces a recursos</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>&lt;body&gt;</code> - Contiene el contenido visible de la página</li>\n</ul>\n\n<h2><i class='fas fa-heading'></i> Encabezados (Headings)</h2>\n<p>HTML tiene 6 niveles de encabezados, desde <code>&lt;h1&gt;</code> (más importante) hasta <code>&lt;h6&gt;</code> (menos importante):</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;h1&gt;Encabezado Principal&lt;/h1&gt;\n&lt;h2&gt;Encabezado Secundario&lt;/h2&gt;\n&lt;h3&gt;Encabezado de Tercer Nivel&lt;/h3&gt;\n&lt;h4&gt;Encabezado de Cuarto Nivel&lt;/h4&gt;\n&lt;h5&gt;Encabezado de Quinto Nivel&lt;/h5&gt;\n&lt;h6&gt;Encabezado de Sexto Nivel&lt;/h6&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <h1 style=\"font-size: 2em; margin: 0.67em 0;\">Encabezado Principal</h1>\n      <h2 style=\"font-size: 1.5em; margin: 0.75em 0;\">Encabezado Secundario</h2>\n      <h3 style=\"font-size: 1.17em; margin: 0.83em 0;\">Encabezado de Tercer Nivel</h3>\n      <h4 style=\"font-size: 1em; margin: 1.12em 0;\">Encabezado de Cuarto Nivel</h4>\n      <h5 style=\"font-size: 0.83em; margin: 1.5em 0;\">Encabezado de Quinto Nivel</h5>\n      <h6 style=\"font-size: 0.75em; margin: 1.67em 0;\">Encabezado de Sexto Nivel</h6>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-lightbulb'></i> Consejo:</h3>\n<p>Usa solo un <code>&lt;h1&gt;</code> por página (normalmente el título principal). Los demás encabezados ayudan a organizar el contenido jerárquicamente.</p>\n\n<h2><i class='fas fa-paragraph'></i> Párrafos y Texto</h2>\n<p>Los párrafos se crean con la etiqueta <code>&lt;p&gt;</code>:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;p&gt;Este es un párrafo de texto. Puede contener varias líneas\ny el navegador lo mostrará correctamente.&lt;/p&gt;\n\n&lt;p&gt;Este es otro párrafo separado.&lt;/p&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p>Este es un párrafo de texto. Puede contener varias líneas y el navegador lo mostrará correctamente.</p>\n      <p>Este es otro párrafo separado.</p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-bold'></i> Formato de Texto</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;strong&gt;Texto en negrita&lt;/strong&gt;\n&lt;em&gt;Texto en cursiva&lt;/em&gt;\n&lt;mark&gt;Texto resaltado&lt;/mark&gt;\n&lt;del&gt;Texto tachado&lt;/del&gt;\n&lt;sub&gt;Subíndice&lt;/sub&gt; y &lt;sup&gt;Superíndice&lt;/sup&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p><strong>Texto en negrita</strong></p>\n      <p><em>Texto en cursiva</em></p>\n      <p><mark>Texto resaltado</mark></p>\n      <p><del>Texto tachado</del></p>\n      <p>H<sub>2</sub>O y x<sup>2</sup></p>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-link'></i> Enlaces (Links)</h2>\n<p>Los enlaces se crean con la etiqueta <code>&lt;a&gt;</code> y el atributo <code>href</code>:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;a href=\"https://www.google.com\"&gt;Ir a Google&lt;/a&gt;\n&lt;a href=\"https://www.google.com\" target=\"_blank\"&gt;Nueva pestaña&lt;/a&gt;\n&lt;a href=\"mailto:correo@ejemplo.com\"&gt;Enviar Email&lt;/a&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p><a href=\"https://www.google.com\" style=\"color: #3b82f6; text-decoration: underline;\">Ir a Google</a></p>\n      <p><a href=\"https://www.google.com\" target=\"_blank\" style=\"color: #3b82f6; text-decoration: underline;\">Nueva pestaña</a></p>\n      <p><a href=\"mailto:correo@ejemplo.com\" style=\"color: #3b82f6; text-decoration: underline;\">Enviar Email</a></p>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-list'></i> Listas</h2>\n\n<h3><i class='fas fa-list-ul'></i> Listas No Ordenadas</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;ul&gt;\n  &lt;li&gt;Primer elemento&lt;/li&gt;\n  &lt;li&gt;Segundo elemento&lt;/li&gt;\n  &lt;li&gt;Tercer elemento&lt;/li&gt;\n&lt;/ul&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <ul>\n        <li>Primer elemento</li>\n        <li>Segundo elemento</li>\n        <li>Tercer elemento</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-list-ol'></i> Listas Ordenadas</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;ol&gt;\n  &lt;li&gt;Primer paso&lt;/li&gt;\n  &lt;li&gt;Segundo paso&lt;/li&gt;\n  &lt;li&gt;Tercer paso&lt;/li&gt;\n&lt;/ol&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <ol>\n        <li>Primer paso</li>\n        <li>Segundo paso</li>\n        <li>Tercer paso</li>\n      </ol>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-table'></i> Tablas</h2>\n<p>Las tablas se usan para mostrar datos estructurados:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Nombre&lt;/th&gt;\n      &lt;th&gt;Edad&lt;/th&gt;\n      &lt;th&gt;Ciudad&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Juan&lt;/td&gt;\n      &lt;td&gt;25&lt;/td&gt;\n      &lt;td&gt;Madrid&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;María&lt;/td&gt;\n      &lt;td&gt;30&lt;/td&gt;\n      &lt;td&gt;Barcelona&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <table style=\"border-collapse: collapse; width: 100%;\">\n        <thead>\n          <tr style=\"background: #1e293b;\">\n            <th style=\"border: 1px solid #475569; padding: 10px; text-align: left;\">Nombre</th>\n            <th style=\"border: 1px solid #475569; padding: 10px; text-align: left;\">Edad</th>\n            <th style=\"border: 1px solid #475569; padding: 10px; text-align: left;\">Ciudad</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td style=\"border: 1px solid #475569; padding: 10px;\">Juan</td>\n            <td style=\"border: 1px solid #475569; padding: 10px;\">25</td>\n            <td style=\"border: 1px solid #475569; padding: 10px;\">Madrid</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid #475569; padding: 10px;\">María</td>\n            <td style=\"border: 1px solid #475569; padding: 10px;\">30</td>\n            <td style=\"border: 1px solid #475569; padding: 10px;\">Barcelona</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-wpforms'></i> Formularios</h2>\n<p>Los formularios permiten recoger información del usuario:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;form&gt;\n  &lt;label for=\"nombre\"&gt;Nombre:&lt;/label&gt;\n  &lt;input type=\"text\" id=\"nombre\" placeholder=\"Tu nombre\"&gt;\n\n  &lt;label for=\"email\"&gt;Email:&lt;/label&gt;\n  &lt;input type=\"email\" id=\"email\" required&gt;\n\n  &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <form style=\"display: flex; flex-direction: column; gap: 12px; max-width: 400px;\">\n        <label for=\"nombre\">Nombre:</label>\n        <input type=\"text\" id=\"nombre\" placeholder=\"Tu nombre\" style=\"padding: 10px; border: 1px solid #475569; border-radius: 6px; background: #1e293b; color: #cbd5e1;\">\n        \n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" required style=\"padding: 10px; border: 1px solid #475569; border-radius: 6px; background: #1e293b; color: #cbd5e1;\">\n        \n        <button type=\"submit\" style=\"padding: 12px; background: linear-gradient(135deg, #3b82f6, #2563eb); color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; margin-top: 8px;\">Enviar</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-box'></i> Contenedores</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;div class=\"contenedor\"&gt;\n  &lt;h2&gt;Título de la sección&lt;/h2&gt;\n  &lt;p&gt;Contenido de la sección&lt;/p&gt;\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"border: 2px dashed #475569; padding: 20px; border-radius: 8px; background: rgba(30, 41, 59, 0.3);\">\n        <h2 style=\"margin: 0 0 12px 0; font-size: 1.3em;\">Título de la sección</h2>\n        <p style=\"margin: 0;\">Contenido de la sección</p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-th-large'></i> Elementos Semánticos HTML5</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-html\">&lt;header&gt;\n  &lt;h1&gt;Mi Sitio Web&lt;/h1&gt;\n  &lt;nav&gt;\n    &lt;a href=\"#inicio\"&gt;Inicio&lt;/a&gt;\n    &lt;a href=\"#sobre\"&gt;Sobre&lt;/a&gt;\n  &lt;/nav&gt;\n&lt;/header&gt;\n\n&lt;main&gt;\n  &lt;article&gt;\n    &lt;h2&gt;Artículo&lt;/h2&gt;\n    &lt;p&gt;Contenido...&lt;/p&gt;\n  &lt;/article&gt;\n&lt;/main&gt;\n\n&lt;footer&gt;\n  &lt;p&gt;© 2025 Mi Sitio&lt;/p&gt;\n&lt;/footer&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <header style=\"background: linear-gradient(135deg, #1e293b, #334155); padding: 20px; border-radius: 10px 10px 0 0; border-bottom: 3px solid #3b82f6;\">\n        <h1 style=\"margin: 0 0 12px 0; font-size: 1.6em;\">Mi Sitio Web</h1>\n        <nav style=\"display: flex; gap: 20px;\">\n          <a href=\"#inicio\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Inicio</a>\n          <a href=\"#sobre\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Sobre</a>\n        </nav>\n      </header>\n      <main style=\"background: #0f172a; padding: 20px;\">\n        <article>\n          <h2 style=\"margin: 0 0 10px 0; color: #22d3ee;\">Artículo</h2>\n          <p style=\"margin: 0;\">Contenido del artículo...</p>\n        </article>\n      </main>\n      <footer style=\"background: linear-gradient(135deg, #334155, #1e293b); padding: 20px; border-radius: 0 0 10px 10px; border-top: 3px solid #3b82f6; text-align: center;\">\n        <p style=\"margin: 0; font-size: 0.9em;\">© 2025 Mi Sitio</p>\n      </footer>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-check-circle'></i> Buenas Prácticas</h2>\n<ul>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa siempre <code>&lt;!DOCTYPE html&gt;</code> al inicio</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Cierra todas las etiquetas correctamente</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa indentación para hacer el código más legible</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa etiquetas semánticas en lugar de solo <code>&lt;div&gt;</code></li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Incluye siempre el atributo <code>alt</code> en las imágenes</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes a Evitar</h2>\n<ul>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No cerrar las etiquetas</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Anidar etiquetas incorrectamente</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Usar IDs duplicados (deben ser únicos)</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Olvidar el atributo <code>alt</code> en imágenes</li>\n</ul>\n\n<h2><i class='fas fa-graduation-cap'></i> Ejercicios para Practicar</h2>\n<ul>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea una página \"Sobre Mí\" con tu información personal</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Construye un menú de navegación con 4-5 enlaces</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Diseña un formulario de registro con validación</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Haz una tabla con información de tus películas favoritas</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Construye la estructura de un blog simple con 3 artículos</li>\n</ul>\n\n<h2><i class='fas fa-road'></i> Próximos Pasos</h2>\n<p>Ahora que conoces HTML, el siguiente paso natural es aprender <strong>CSS</strong> para dar estilo a tus páginas, y después <strong>JavaScript</strong> para hacerlas interactivas.</p>\n\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; text-align: center; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-trophy'></i> ¡Felicidades!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has completado el tutorial de conceptos básicos de HTML. ¡Sigue practicando y creando proyectos!</p>\n</div>",
    "lastUpdated": "2025-10-22T22:45:44.594235"
  },
  "68f8087ff0850f5968c09f4e": {
    "title": "Conceptos Básicos de JavaScript",
    "language": "javascript",
    "level": "principiante",
    "duration": "75 min",
    "description": "Domina JavaScript desde cero: variables, funciones, DOM, eventos y manipulación de arrays para crear páginas web interactivas",
    "content": "<h2><i class='fas fa-code'></i> Introducción a JavaScript</h2>\n<p>JavaScript es el lenguaje de programación de la web. Es lo que hace que las páginas web sean interactivas y dinámicas. Mientras HTML es la estructura y CSS el diseño, JavaScript es la <strong>funcionalidad</strong>.</p>\n\n<h3><i class='fas fa-question-circle'></i> ¿Qué puedes hacer con JavaScript?</h3>\n<ul>\n  <li><i class='fas fa-check' style='color: #10b981;'></i> Responder a eventos del usuario (clicks, teclas, movimientos)</li>\n  <li><i class='fas fa-check' style='color: #10b981;'></i> Modificar el contenido HTML dinámicamente</li>\n  <li><i class='fas fa-check' style='color: #10b981;'></i> Validar formularios antes de enviarlos</li>\n  <li><i class='fas fa-check' style='color: #10b981;'></i> Crear animaciones y efectos visuales</li>\n  <li><i class='fas fa-check' style='color: #10b981;'></i> Comunicarse con servidores (APIs)</li>\n  <li><i class='fas fa-check' style='color: #10b981;'></i> Almacenar datos en el navegador</li>\n</ul>\n\n<h2><i class='fas fa-play-circle'></i> Cómo usar JavaScript</h2>\n\n<h3><i class='fas fa-file-code'></i> 1. JavaScript Interno</h3>\n<p>Dentro de etiquetas <code>&lt;script&gt;</code> en tu HTML:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">&lt;script&gt;\n  console.log(\"¡Hola Mundo!\");\n&lt;/script&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">¡Hola Mundo!</div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-external-link-alt'></i> 2. JavaScript Externo (Recomendado)</h3>\n<p>En un archivo separado <code>script.js</code>:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;script src=\"script.js\"&gt;&lt;/script&gt;</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-lightbulb'></i> Consejo:</h3>\n<p>Coloca el <code>&lt;script&gt;</code> al final del <code>&lt;body&gt;</code> para que el HTML cargue primero.</p>\n\n<h2><i class='fas fa-terminal'></i> Console.log - Tu Primera Herramienta</h2>\n<p>El <code>console.log()</code> imprime mensajes en la consola del navegador (F12):</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">console.log(\"Hola Mundo\");\nconsole.log(123);\nconsole.log(true);\n\n// También puedes imprimir múltiples valores\nconsole.log(\"Nombre:\", \"Juan\", \"Edad:\", 25);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Hola Mundo</div>\n      <div class=\"console-line console-number\">123</div>\n      <div class=\"console-line console-boolean\">true</div>\n      <div class=\"console-line\">Nombre: Juan Edad: 25</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-box'></i> Variables - Guardar Información</h2>\n<p>Las variables guardan datos que puedes usar después. Hay 3 formas de declararlas:</p>\n\n<h3><i class='fas fa-lock'></i> const (Constante - No cambia)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const nombre = \"Juan\";\nconst PI = 3.14159;\nconst edad = 25;\n\nconsole.log(nombre);\nconsole.log(\"Valor de PI:\", PI);\n\n// ❌ Esto daría error:\n// nombre = \"Pedro\"; // No se puede reasignar</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">Juan</div>\n      <div class=\"console-line\">Valor de PI: <span class=\"console-number\">3.14159</span></div>\n      <div class=\"console-line console-comment\">// const no permite reasignación</div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-unlock'></i> let (Variable - Puede cambiar)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let contador = 0;\nconsole.log(\"Inicial:\", contador);\n\ncontador = 1;  // ✅ Funciona\nconsole.log(\"Después:\", contador);\n\ncontador = contador + 1;  // ✅ Funciona\nconsole.log(\"Final:\", contador);\n\nlet mensaje = \"Hola\";\nmensaje = \"Adiós\";  // ✅ Se puede cambiar\nconsole.log(mensaje);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Inicial: <span class=\"console-number\">0</span></div>\n      <div class=\"console-line\">Después: <span class=\"console-number\">1</span></div>\n      <div class=\"console-line\">Final: <span class=\"console-number\">2</span></div>\n      <div class=\"console-line console-string\">Adiós</div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Regla de oro:</h3>\n<p>Usa <code>const</code> por defecto. Solo usa <code>let</code> si necesitas cambiar el valor.</p>\n\n<h2><i class='fas fa-database'></i> Tipos de Datos</h2>\n\n<h3><i class='fas fa-font'></i> Strings (Texto)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const nombre = \"Juan\";\nconst apellido = 'Pérez';\nconst saludo = `Hola, ${nombre}`;  // Template literal\n\n// Concatenación\nconst nombreCompleto = nombre + \" \" + apellido;\nconsole.log(nombreCompleto);  // \"Juan Pérez\"\n\n// Propiedades y métodos\nconsole.log(nombre.length);  // 4\nconsole.log(nombre.toUpperCase());  // \"JUAN\"\nconsole.log(nombre.toLowerCase());  // \"juan\"</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">Juan Pérez</div>\n      <div class=\"console-line console-number\">4</div>\n      <div class=\"console-line console-string\">JUAN</div>\n      <div class=\"console-line console-string\">juan</div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-calculator'></i> Numbers (Números)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const entero = 42;\nconst decimal = 3.14;\nconst negativo = -10;\n\n// Operaciones matemáticas\nconst suma = 5 + 3;        // 8\nconst resta = 10 - 4;      // 6\nconst multiplicacion = 6 * 7;  // 42\nconst division = 20 / 4;   // 5\nconst modulo = 10 % 3;     // 1 (residuo)\nconst potencia = 2 ** 3;   // 8 (2 elevado a 3)\n\nconsole.log(\"Suma:\", suma);\nconsole.log(\"Multiplicación:\", multiplicacion);\nconsole.log(\"Potencia:\", potencia);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Suma: <span class=\"console-number\">8</span></div>\n      <div class=\"console-line\">Multiplicación: <span class=\"console-number\">42</span></div>\n      <div class=\"console-line\">Potencia: <span class=\"console-number\">8</span></div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-toggle-on'></i> Booleans (Verdadero/Falso)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const esVerdadero = true;\nconst esFalso = false;\n\nconst esMayorDeEdad = 18 >= 18;  // true\nconst tienePermiso = false;\n\nconsole.log(\"Es verdadero:\", esVerdadero);\nconsole.log(\"Es mayor de edad:\", esMayorDeEdad);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Es verdadero: <span class=\"console-boolean\">true</span></div>\n      <div class=\"console-line\">Es mayor de edad: <span class=\"console-boolean\">true</span></div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-th-list'></i> Arrays (Listas)</h2>\n<p>Los arrays guardan múltiples valores en una sola variable:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Crear arrays\nconst frutas = [\"manzana\", \"banana\", \"naranja\"];\nconst numeros = [1, 2, 3, 4, 5];\n\n// Acceder a elementos (índice empieza en 0)\nconsole.log(frutas[0]);  // \"manzana\"\nconsole.log(frutas[1]);  // \"banana\"\n\n// Propiedades\nconsole.log(\"Cantidad:\", frutas.length);  // 3\n\n// Agregar elemento\nfrutas.push(\"uva\");\nconsole.log(\"Después de push:\", frutas);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">manzana</div>\n      <div class=\"console-line console-string\">banana</div>\n      <div class=\"console-line\">Cantidad: <span class=\"console-number\">3</span></div>\n      <div class=\"console-line\">Después de push: <span class=\"console-array\">['manzana', 'banana', 'naranja', 'uva']</span></div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-cube'></i> Objetos</h2>\n<p>Los objetos guardan datos relacionados en pares clave-valor:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Crear objeto\nconst persona = {\n  nombre: \"Juan\",\n  edad: 25,\n  ciudad: \"Madrid\",\n  estudiante: true\n};\n\n// Acceder a propiedades\nconsole.log(persona.nombre);     // \"Juan\"\nconsole.log(persona[\"edad\"]);    // 25\n\n// Modificar propiedades\npersona.edad = 26;\nconsole.log(\"Nueva edad:\", persona.edad);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">Juan</div>\n      <div class=\"console-line console-number\">25</div>\n      <div class=\"console-line\">Nueva edad: <span class=\"console-number\">26</span></div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-random'></i> Condicionales (if/else)</h2>\n<p>Ejecuta código según condiciones:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// if-else\nconst edad = 20;\nif (edad >= 18) {\n  console.log(\"Eres mayor de edad\");\n} else {\n  console.log(\"Eres menor de edad\");\n}\n\n// if-else if-else\nconst nota = 85;\nif (nota >= 90) {\n  console.log(\"Excelente\");\n} else if (nota >= 70) {\n  console.log(\"Aprobado\");\n} else {\n  console.log(\"Reprobado\");\n}\n\n// Operador ternario\nconst mensaje = edad >= 18 ? \"Mayor\" : \"Menor\";\nconsole.log(\"Clasificación:\", mensaje);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">Eres mayor de edad</div>\n      <div class=\"console-line console-string\">Aprobado</div>\n      <div class=\"console-line\">Clasificación: <span class=\"console-string\">Mayor</span></div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-sync'></i> Bucles (Loops)</h2>\n\n<h3><i class='fas fa-redo'></i> for - Número específico de veces</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Estructura: for (inicio; condición; incremento)\nfor (let i = 0; i < 5; i++) {\n  console.log(\"Número:\", i);\n}\n\n// Recorrer array\nconst frutas = [\"manzana\", \"banana\", \"naranja\"];\nfor (let i = 0; i < frutas.length; i++) {\n  console.log(frutas[i]);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Número: <span class=\"console-number\">0</span></div>\n      <div class=\"console-line\">Número: <span class=\"console-number\">1</span></div>\n      <div class=\"console-line\">Número: <span class=\"console-number\">2</span></div>\n      <div class=\"console-line\">Número: <span class=\"console-number\">3</span></div>\n      <div class=\"console-line\">Número: <span class=\"console-number\">4</span></div>\n      <div class=\"console-line console-string\">manzana</div>\n      <div class=\"console-line console-string\">banana</div>\n      <div class=\"console-line console-string\">naranja</div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-list'></i> for...of - Para arrays</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const colores = [\"rojo\", \"verde\", \"azul\"];\n\nfor (const color of colores) {\n  console.log(color);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">rojo</div>\n      <div class=\"console-line console-string\">verde</div>\n      <div class=\"console-line console-string\">azul</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-function'></i> Funciones</h2>\n<p>Las funciones son bloques de código reutilizable:</p>\n\n<h3><i class='fas fa-cog'></i> Declaración de función</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function saludar() {\n  console.log(\"¡Hola!\");\n}\n\nsaludar();  // Llamar la función\n\n// Con parámetros\nfunction saludarPersona(nombre) {\n  console.log(\"¡Hola, \" + nombre + \"!\");\n}\n\nsaludarPersona(\"Juan\");\n\n// Con retorno\nfunction sumar(a, b) {\n  return a + b;\n}\n\nconst resultado = sumar(5, 3);\nconsole.log(\"Resultado:\", resultado);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-string\">¡Hola!</div>\n      <div class=\"console-line console-string\">¡Hola, Juan!</div>\n      <div class=\"console-line\">Resultado: <span class=\"console-number\">8</span></div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-arrow-right'></i> Arrow Functions (Moderna)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Arrow function tradicional\nconst multiplicar = (a, b) => {\n  return a * b;\n};\n\n// Arrow function corta (retorno implícito)\nconst multiplicarCorta = (a, b) => a * b;\n\n// Con un solo parámetro (sin paréntesis)\nconst cuadrado = x => x * x;\n\nconsole.log(multiplicar(5, 3));\nconsole.log(multiplicarCorta(4, 2));\nconsole.log(cuadrado(5));</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-number\">15</div>\n      <div class=\"console-line console-number\">8</div>\n      <div class=\"console-line console-number\">25</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-filter'></i> Métodos de Array Importantes</h2>\n\n<h3><i class='fas fa-map-marked'></i> map() - Transformar elementos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const numeros = [1, 2, 3, 4, 5];\nconst dobles = numeros.map(num => num * 2);\nconsole.log(\"Original:\", numeros);\nconsole.log(\"Dobles:\", dobles);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Original: <span class=\"console-array\">[1, 2, 3, 4, 5]</span></div>\n      <div class=\"console-line\">Dobles: <span class=\"console-array\">[2, 4, 6, 8, 10]</span></div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-filter'></i> filter() - Filtrar elementos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const numeros = [1, 2, 3, 4, 5, 6];\nconst pares = numeros.filter(num => num % 2 === 0);\nconsole.log(\"Todos:\", numeros);\nconsole.log(\"Pares:\", pares);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line\">Todos: <span class=\"console-array\">[1, 2, 3, 4, 5, 6]</span></div>\n      <div class=\"console-line\">Pares: <span class=\"console-array\">[2, 4, 6]</span></div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-mouse-pointer'></i> DOM - Interactuar con HTML</h2>\n<p>El DOM (Document Object Model) permite modificar el HTML con JavaScript:</p>\n\n<h3><i class='fas fa-search'></i> Seleccionar elementos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Por ID\nconst titulo = document.getElementById(\"titulo\");\n\n// Por clase\nconst botones = document.getElementsByClassName(\"btn\");\n\n// Por etiqueta\nconst parrafos = document.getElementsByTagName(\"p\");\n\n// Query selector (recomendado)\nconst elemento = document.querySelector(\".mi-clase\");\nconst todos = document.querySelectorAll(\".mi-clase\");</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-edit'></i> Modificar contenido</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">const titulo = document.querySelector(\"h1\");\n\n// Cambiar texto\ntitulo.textContent = \"Nuevo título\";\ntitulo.innerHTML = \"&lt;strong&gt;Título en negrita&lt;/strong&gt;\";\n\n// Cambiar estilos\ntitulo.style.color = \"blue\";\ntitulo.style.fontSize = \"32px\";\n\n// Agregar/quitar clases\ntitulo.classList.add(\"destacado\");\ntitulo.classList.remove(\"oculto\");\ntitulo.classList.toggle(\"activo\");</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-plus-circle'></i> Crear elementos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Crear elemento\nconst nuevoParrafo = document.createElement(\"p\");\nnuevoParrafo.textContent = \"Este es un nuevo párrafo\";\n\n// Agregar al DOM\ndocument.body.appendChild(nuevoParrafo);\n\n// Crear con innerHTML\nconst contenedor = document.querySelector(\".contenedor\");\ncontenedor.innerHTML += \"&lt;p&gt;Otro párrafo&lt;/p&gt;\";</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-hand-pointer'></i> Eventos</h2>\n<p>Los eventos permiten reaccionar a acciones del usuario:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Click en botón\nconst boton = document.querySelector(\"#miBoton\");\nboton.addEventListener(\"click\", function() {\n  console.log(\"¡Botón clickeado!\");\n});\n\n// Con arrow function\nboton.addEventListener(\"click\", () => {\n  alert(\"¡Hola!\");\n});\n\n// Pasar evento\nboton.addEventListener(\"click\", (evento) => {\n  console.log(evento.target);  // El elemento clickeado\n});\n\n// Eventos comunes:\n// - click: al hacer clic\n// - dblclick: doble clic\n// - mouseover: pasar mouse encima\n// - mouseout: sacar mouse\n// - keydown: presionar tecla\n// - keyup: soltar tecla\n// - submit: enviar formulario\n// - change: cambiar valor input</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-keyboard'></i> Ejemplo de Formulario</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// HTML necesario:\n// &lt;form id=\"miForm\"&gt;\n//   &lt;input type=\"text\" id=\"nombre\"&gt;\n//   &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n// &lt;/form&gt;\n\nconst formulario = document.querySelector(\"#miForm\");\n\nformulario.addEventListener(\"submit\", (e) => {\n  e.preventDefault();  // Evita recargar página\n  \n  const nombre = document.querySelector(\"#nombre\").value;\n  console.log(\"Nombre ingresado:\", nombre);\n  \n  // Limpiar formulario\n  formulario.reset();\n});</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-comment\">// Usuario escribe \"Juan\" y envía</div>\n      <div class=\"console-line\">Nombre ingresado: <span class=\"console-string\">Juan</span></div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Proyecto Práctico: Contador</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// HTML necesario:\n// &lt;h1 id=\"contador\"&gt;0&lt;/h1&gt;\n// &lt;button id=\"aumentar\"&gt;+&lt;/button&gt;\n// &lt;button id=\"disminuir\"&gt;-&lt;/button&gt;\n// &lt;button id=\"resetear\"&gt;Reset&lt;/button&gt;\n\nlet cuenta = 0;\nconst contadorElemento = document.querySelector(\"#contador\");\nconst btnAumentar = document.querySelector(\"#aumentar\");\nconst btnDisminuir = document.querySelector(\"#disminuir\");\nconst btnResetear = document.querySelector(\"#resetear\");\n\nfunction actualizarContador() {\n  contadorElemento.textContent = cuenta;\n  \n  // Cambiar color según valor\n  if (cuenta > 0) {\n    contadorElemento.style.color = \"green\";\n  } else if (cuenta < 0) {\n    contadorElemento.style.color = \"red\";\n  } else {\n    contadorElemento.style.color = \"black\";\n  }\n}\n\nbtnAumentar.addEventListener(\"click\", () => {\n  cuenta++;\n  actualizarContador();\n});\n\nbtnDisminuir.addEventListener(\"click\", () => {\n  cuenta--;\n  actualizarContador();\n});\n\nbtnResetear.addEventListener(\"click\", () => {\n  cuenta = 0;\n  actualizarContador();\n});</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-clock'></i> Temporizadores</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// setTimeout - Ejecuta una vez después de X milisegundos\nsetTimeout(() => {\n  console.log(\"Esto aparece después de 2 segundos\");\n}, 2000);\n\n// setInterval - Ejecuta repetidamente cada X milisegundos\nconst intervalo = setInterval(() => {\n  console.log(\"Esto se repite cada segundo\");\n}, 1000);\n\n// Detener intervalo\nclearInterval(intervalo);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-comment\">// Después de 2 segundos:</div>\n      <div class=\"console-line console-string\">Esto aparece después de 2 segundos</div>\n      <div class=\"console-line console-comment\">// Cada segundo:</div>\n      <div class=\"console-line console-string\">Esto se repite cada segundo</div>\n      <div class=\"console-line console-string\">Esto se repite cada segundo</div>\n      <div class=\"console-line console-string\">Esto se repite cada segundo</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-bug'></i> Manejo de Errores</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// try-catch para manejar errores\ntry {\n  // Código que puede fallar\n  const resultado = JSON.parse('{ invalido }');\n} catch (error) {\n  console.log(\"Error:\", error.message);\n} finally {\n  // Se ejecuta siempre\n  console.log(\"Proceso terminado\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper console-output\">\n      <div class=\"console-line console-error\">Error: Unexpected token i in JSON at position 2</div>\n      <div class=\"console-line console-string\">Proceso terminado</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-check-double'></i> Buenas Prácticas</h2>\n<ul>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa <code>const</code> por defecto, <code>let</code> solo si necesitas reasignar</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Nombres descriptivos: <code>getUserName()</code> mejor que <code>f1()</code></li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa <code>===</code> en lugar de <code>==</code></li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Comenta código complejo</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Funciones pequeñas que hagan una cosa</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Evita variables globales</li>\n  <li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa arrow functions para funciones cortas</li>\n</ul>\n\n<h2><i class='fas fa-graduation-cap'></i> Ejercicios para Practicar</h2>\n<ul>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea una calculadora simple con +, -, *, /</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Haz una lista de tareas (agregar, eliminar, marcar)</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Construye un generador de contraseñas aleatorias</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea un cronómetro con start, pause y reset</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Haz un validador de formularios</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Construye un juego de adivinar números</li>\n</ul>\n\n<h2><i class='fas fa-route'></i> Próximos Pasos</h2>\n<p>Ahora que conoces JavaScript básico, puedes aprender:</p>\n<ul>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Async/Await</strong> - Para programación asíncrona</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Fetch API</strong> - Para hacer peticiones HTTP</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>LocalStorage</strong> - Para guardar datos en el navegador</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>ES6+</strong> - Características modernas de JavaScript</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Frameworks</strong> - React, Vue, Angular</li>\n</ul>\n\n<div style=\"background: linear-gradient(135deg, #f59e0b 0%, #f97316 100%); border-radius: 16px; padding: 30px; margin-top: 30px; text-align: center; box-shadow: 0 10px 30px rgba(245, 158, 11, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-trophy'></i> ¡Excelente Trabajo!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has completado el tutorial de JavaScript básico. ¡Ahora a practicar mucho para dominar el lenguaje!</p>\n</div>",
    "lastUpdated": "2025-10-22T22:53:29.680724"
  },
  "68f808b8f0850f5968c09f4f": {
    "title": "Conceptos Básicos de CSS",
    "language": "css",
    "level": "principiante",
    "duration": "45 min",
    "description": "Aprende los fundamentos de CSS para dar estilo a tus páginas web",
    "content": "<h2><i class='fas fa-paint-brush'></i> Introducción a CSS</h2>\n<p>CSS (Cascading Style Sheets) es el lenguaje que usamos para dar estilo y diseño a nuestras páginas web. Mientras HTML define la estructura, CSS define cómo se ve.</p>\n\n<h3><i class='fas fa-question-circle'></i> ¿Cómo agregar CSS a tu HTML?</h3>\n<p>Existen tres formas principales de agregar CSS. Cada una tiene su uso específico:</p>\n\n<div class=\"bg-gradient-to-r from-blue-500/10 to-cyan-500/10 border-l-4 border-blue-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-info-circle text-blue-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-blue-300 text-lg\">Importante:</strong>\n      <p class=\"text-slate-300 mt-2\">Para proyectos reales, siempre usa CSS externo. Esto mantiene tu código organizado y permite reutilizar estilos en múltiples páginas.</p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-code'></i> 1. CSS Inline (en línea)</h3>\n<p>Se escribe directamente en el atributo <code>style</code> del elemento HTML:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;p style=\"color: blue; font-size: 18px;\"&gt;Texto azul de 18px&lt;/p&gt;\n&lt;h1 style=\"background-color: yellow; padding: 10px;\"&gt;Título con fondo amarillo&lt;/h1&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p style=\"color: blue; font-size: 18px;\">Texto azul de 18px</p>\n      <h1 style=\"background-color: yellow; padding: 10px; color: #000;\">Título con fondo amarillo</h1>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-file-code'></i> 2. CSS Interno</h3>\n<p>Se coloca dentro de la etiqueta <code>&lt;style&gt;</code> en el <code>&lt;head&gt;</code> del documento:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;head&gt;\n  &lt;style&gt;\n    p {\n      color: blue;\n      font-size: 18px;\n    }\n    h1 {\n      background-color: yellow;\n      padding: 10px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-external-link-alt'></i> 3. CSS Externo (Recomendado)</h3>\n<p>Se crea un archivo separado <code>estilos.css</code> y se vincula al HTML:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> HTML\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'code2')\">\n      <i class=\"fas fa-file-code\"></i> CSS\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- index.html --&gt;\n&lt;head&gt;\n  &lt;link rel=\"stylesheet\" href=\"estilos.css\"&gt;\n&lt;/head&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content code2-tab\">\n    <pre><code class=\"language-css\">/* estilos.css */\np {\n  color: blue;\n  font-size: 18px;\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-crosshairs'></i> Selectores Básicos</h2>\n<p>Los selectores indican qué elementos HTML queremos estilizar. Son la base de CSS y debes entenderlos bien.</p>\n\n<h3><i class='fas fa-tag'></i> Selector de Etiqueta</h3>\n<p>Selecciona <strong>TODOS</strong> los elementos de ese tipo en la página:</p>\n\n<div class=\"bg-gradient-to-r from-cyan-500/10 to-blue-500/10 border-l-4 border-cyan-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-lightbulb text-cyan-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-cyan-300 text-lg\">Ejemplo:</strong>\n      <p class=\"text-slate-300 mt-2\">Si escribes <code style=\"background: rgba(34, 211, 238, 0.1); padding: 2px 8px; border-radius: 4px; color: #22d3ee;\">p { color: red; }</code>, TODOS los párrafos de la página serán rojos.</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  p {\n    color: green;\n    font-size: 16px;\n  }\n  h1 {\n    font-size: 32px;\n    color: #3b82f6;\n  }\n&lt;/style&gt;\n\n&lt;h1&gt;Título Principal&lt;/h1&gt;\n&lt;p&gt;Este es un párrafo con estilo.&lt;/p&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <h1 style=\"font-size: 32px; color: #3b82f6; margin: 0 0 15px 0;\">Título Principal</h1>\n      <p style=\"color: green; font-size: 16px; margin: 0;\">Este es un párrafo con estilo.</p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-dot-circle'></i> Selector de Clase</h3>\n<p>Selecciona elementos con una clase específica (se usa con <code>.</code>). Las clases son reutilizables:</p>\n\n<div class=\"bg-gradient-to-r from-emerald-500/10 to-green-500/10 border-l-4 border-emerald-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-code text-emerald-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-emerald-300 text-lg\">Sintaxis:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-2\">\n        <li><code style=\"background: rgba(34, 197, 94, 0.1); padding: 2px 8px; border-radius: 4px; color: #22c55e;\">.nombreClase { }</code> → En CSS (nota el punto inicial)</li>\n        <li><code style=\"background: rgba(34, 197, 94, 0.1); padding: 2px 8px; border-radius: 4px; color: #22c55e;\">class=\"nombreClase\"</code> → En HTML (sin punto)</li>\n        <li>✅ Puedes usar la misma clase en múltiples elementos</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .destacado {\n    background-color: #fef08a;\n    color: #000;\n    font-weight: bold;\n    padding: 8px 12px;\n    border-radius: 5px;\n  }\n&lt;/style&gt;\n\n&lt;p&gt;Texto normal&lt;/p&gt;\n&lt;p class=\"destacado\"&gt;Texto importante destacado&lt;/p&gt;\n&lt;p&gt;Más texto normal&lt;/p&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p style=\"margin-bottom: 10px;\">Texto normal</p>\n      <p style=\"background-color: #fef08a; color: #000; font-weight: bold; padding: 8px 12px; border-radius: 5px; margin-bottom: 10px;\">Texto importante destacado</p>\n      <p style=\"margin: 0;\">Más texto normal</p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-id-card'></i> Selector de ID</h3>\n<p>Selecciona un elemento único con un ID específico (se usa con <code>#</code>). Los IDs deben ser únicos en la página:</p>\n\n<div class=\"bg-gradient-to-r from-orange-500/10 to-red-500/10 border-l-4 border-orange-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-exclamation-triangle text-orange-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-orange-300 text-lg\">Regla importante:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-2\">\n        <li><code style=\"background: rgba(249, 115, 22, 0.1); padding: 2px 8px; border-radius: 4px; color: #f97316;\">#nombreID { }</code> → En CSS (nota el numeral #)</li>\n        <li><code style=\"background: rgba(249, 115, 22, 0.1); padding: 2px 8px; border-radius: 4px; color: #f97316;\">id=\"nombreID\"</code> → En HTML (sin #)</li>\n        <li>⚠️ Solo puede haber UN elemento con ese ID en toda la página</li>\n        <li>💡 Preferir clases sobre IDs para estilos</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  #encabezado {\n    background: linear-gradient(135deg, #1e3a8a, #3b82f6);\n    color: white;\n    padding: 20px;\n    text-align: center;\n    border-radius: 8px;\n  }\n&lt;/style&gt;\n\n&lt;div id=\"encabezado\"&gt;\n  &lt;h2&gt;Mi Encabezado Único&lt;/h2&gt;\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"background: linear-gradient(135deg, #1e3a8a, #3b82f6); color: white; padding: 20px; text-align: center; border-radius: 8px;\">\n        <h2 style=\"margin: 0; font-size: 1.5em;\">Mi Encabezado Único</h2>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-font'></i> Propiedades de Texto</h2>\n<p>Controla cómo se ve el texto en tu página.</p>\n\n<h3><i class='fas fa-palette'></i> Color y Tamaño</h3>\n\n<div class=\"bg-gradient-to-r from-purple-500/10 to-pink-500/10 border-l-4 border-purple-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-info-circle text-purple-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-purple-300 text-lg\">Propiedades principales:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• <code>color</code> - Color del texto</li>\n        <li>• <code>font-size</code> - Tamaño de la letra (px, rem, em)</li>\n        <li>• <code>font-family</code> - Tipo de fuente</li>\n        <li>• <code>font-weight</code> - Grosor (normal, bold, 100-900)</li>\n        <li>• <code>font-style</code> - Estilo (normal, italic)</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .texto-estilizado {\n    color: #2563eb;\n    font-size: 18px;\n    font-family: Arial, sans-serif;\n    font-weight: bold;\n    font-style: italic;\n  }\n&lt;/style&gt;\n\n&lt;p class=\"texto-estilizado\"&gt;\n  Texto con múltiples estilos aplicados\n&lt;/p&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p style=\"color: #2563eb; font-size: 18px; font-family: Arial, sans-serif; font-weight: bold; font-style: italic; margin: 0;\">\n        Texto con múltiples estilos aplicados\n      </p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-align-center'></i> Alineación y Decoración</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .centrado {\n    text-align: center;\n    text-decoration: underline;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    line-height: 1.8;\n  }\n&lt;/style&gt;\n\n&lt;h1 class=\"centrado\"&gt;Título con estilos&lt;/h1&gt;\n&lt;p class=\"centrado\"&gt;Texto centrado y espaciado&lt;/p&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <h1 style=\"text-align: center; text-decoration: underline; text-transform: uppercase; letter-spacing: 2px; line-height: 1.8; margin: 0 0 15px 0; font-size: 1.8em;\">Título con estilos</h1>\n      <p style=\"text-align: center; text-decoration: underline; text-transform: uppercase; letter-spacing: 2px; line-height: 1.8; margin: 0;\">Texto centrado y espaciado</p>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-fill-drip'></i> Colores en CSS</h2>\n<p>Hay varias formas de definir colores:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .color-nombre { color: red; }\n  .color-hex { color: #00ff00; }\n  .color-rgb { color: rgb(255, 0, 255); }\n  .color-rgba { \n    color: rgba(59, 130, 246, 0.8);\n    background: rgba(59, 130, 246, 0.1);\n    padding: 5px 10px;\n    border-radius: 5px;\n  }\n&lt;/style&gt;\n\n&lt;p class=\"color-nombre\"&gt;Color por nombre: red&lt;/p&gt;\n&lt;p class=\"color-hex\"&gt;Color hexadecimal: #00ff00&lt;/p&gt;\n&lt;p class=\"color-rgb\"&gt;Color RGB: rgb(255, 0, 255)&lt;/p&gt;\n&lt;p class=\"color-rgba\"&gt;Color RGBA con transparencia&lt;/p&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <p style=\"color: red; margin-bottom: 10px;\">Color por nombre: red</p>\n      <p style=\"color: #00ff00; margin-bottom: 10px;\">Color hexadecimal: #00ff00</p>\n      <p style=\"color: rgb(255, 0, 255); margin-bottom: 10px;\">Color RGB: rgb(255, 0, 255)</p>\n      <p style=\"color: rgba(59, 130, 246, 0.8); background: rgba(59, 130, 246, 0.1); padding: 5px 10px; border-radius: 5px; margin: 0;\">Color RGBA con transparencia</p>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-box'></i> Modelo de Caja (Box Model)</h2>\n<p>Cada elemento HTML es una caja rectangular con estas propiedades. Entender esto es FUNDAMENTAL en CSS:</p>\n\n<div class=\"bg-gradient-to-r from-blue-500/10 to-indigo-500/10 border-l-4 border-blue-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-box text-blue-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-blue-300 text-lg\">El Box Model tiene 4 partes:</strong>\n      <ol class=\"text-slate-300 mt-2 space-y-2 ml-4\">\n        <li><strong>1. Content</strong> - El contenido real (texto, imagen, etc.)</li>\n        <li><strong>2. Padding</strong> - Espacio DENTRO, entre contenido y borde</li>\n        <li><strong>3. Border</strong> - El borde del elemento</li>\n        <li><strong>4. Margin</strong> - Espacio FUERA, separa de otros elementos</li>\n      </ol>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-compress-arrows-alt'></i> Padding (Relleno interno)</h3>\n<p>Espacio entre el contenido y el borde:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .caja-padding {\n    background-color: #3b82f6;\n    color: white;\n    padding: 30px;\n    border-radius: 8px;\n    display: inline-block;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"caja-padding\"&gt;\n  Contenido con padding de 30px\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"background-color: #3b82f6; color: white; padding: 30px; border-radius: 8px; display: inline-block;\">\n        Contenido con padding de 30px\n      </div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-border-style'></i> Border (Borde)</h3>\n<p>Línea alrededor del elemento:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .caja-solida {\n    border: 3px solid #3b82f6;\n    padding: 20px;\n    border-radius: 10px;\n    margin-bottom: 15px;\n  }\n  .caja-punteada {\n    border: 3px dashed #22c55e;\n    padding: 20px;\n    border-radius: 10px;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"caja-solida\"&gt;Borde sólido azul&lt;/div&gt;\n&lt;div class=\"caja-punteada\"&gt;Borde punteado verde&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"border: 3px solid #3b82f6; padding: 20px; border-radius: 10px; margin-bottom: 15px;\">Borde sólido azul</div>\n      <div style=\"border: 3px dashed #22c55e; padding: 20px; border-radius: 10px;\">Borde punteado verde</div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-expand-arrows-alt'></i> Margin (Margen externo)</h3>\n<p>Espacio fuera del elemento, separándolo de otros:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .caja-margen {\n    background-color: #8b5cf6;\n    color: white;\n    padding: 15px;\n    margin: 30px auto;\n    max-width: 300px;\n    text-align: center;\n    border-radius: 8px;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"caja-margen\"&gt;Caja centrada con margin: 30px auto&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"background-color: #8b5cf6; color: white; padding: 15px; margin: 30px auto; max-width: 300px; text-align: center; border-radius: 8px;\">\n        Caja centrada con margin: 30px auto\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-image'></i> Colores de Fondo</h2>\n<p>Cambia el color o imagen de fondo de los elementos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .fondo-color {\n    background-color: #bfdbfe;\n    padding: 20px;\n    border-radius: 8px;\n    margin-bottom: 15px;\n  }\n  .fondo-gradiente {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"fondo-color\"&gt;Fondo con color sólido&lt;/div&gt;\n&lt;div class=\"fondo-gradiente\"&gt;Fondo con gradiente&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"background-color: #bfdbfe; padding: 20px; border-radius: 8px; margin-bottom: 15px; color: #000;\">Fondo con color sólido</div>\n      <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px;\">Fondo con gradiente</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-ruler-combined'></i> Dimensiones</h2>\n<p>Controla el tamaño de los elementos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .caja-fija {\n    width: 200px;\n    height: 100px;\n    background-color: #f59e0b;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n    margin-bottom: 15px;\n  }\n  .caja-porcentaje {\n    width: 50%;\n    height: 80px;\n    background-color: #10b981;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"caja-fija\"&gt;200px × 100px&lt;/div&gt;\n&lt;div class=\"caja-porcentaje\"&gt;50% de ancho&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"width: 200px; height: 100px; background-color: #f59e0b; color: white; display: flex; align-items: center; justify-content: center; border-radius: 8px; margin-bottom: 15px;\">200px × 100px</div>\n      <div style=\"width: 50%; height: 80px; background-color: #10b981; color: white; display: flex; align-items: center; justify-content: center; border-radius: 8px;\">50% de ancho</div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-eye'></i> Display</h2>\n<p>Controla cómo se comporta un elemento en el flujo del documento:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .block {\n    display: block;\n    background-color: #3b82f6;\n    color: white;\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n  }\n  .inline {\n    display: inline;\n    background-color: #22c55e;\n    color: white;\n    padding: 5px 10px;\n    border-radius: 5px;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"block\"&gt;Elemento BLOCK (ocupa toda la línea)&lt;/div&gt;\n&lt;span class=\"inline\"&gt;Inline 1&lt;/span&gt;\n&lt;span class=\"inline\"&gt;Inline 2&lt;/span&gt;\n&lt;span class=\"inline\"&gt;Inline 3&lt;/span&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"display: block; background-color: #3b82f6; color: white; padding: 10px; margin-bottom: 10px; border-radius: 5px;\">Elemento BLOCK (ocupa toda la línea)</div>\n      <span style=\"display: inline; background-color: #22c55e; color: white; padding: 5px 10px; border-radius: 5px; margin-right: 5px;\">Inline 1</span>\n      <span style=\"display: inline; background-color: #22c55e; color: white; padding: 5px 10px; border-radius: 5px; margin-right: 5px;\">Inline 2</span>\n      <span style=\"display: inline; background-color: #22c55e; color: white; padding: 5px 10px; border-radius: 5px;\">Inline 3</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-grip-horizontal'></i> Flexbox Básico</h2>\n<p>Sistema moderno para alinear elementos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .contenedor-flex {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    gap: 20px;\n    background-color: #1e293b;\n    padding: 20px;\n    border-radius: 10px;\n  }\n  .item-flex {\n    background-color: #3b82f6;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    min-width: 100px;\n    text-align: center;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"contenedor-flex\"&gt;\n  &lt;div class=\"item-flex\"&gt;Item 1&lt;/div&gt;\n  &lt;div class=\"item-flex\"&gt;Item 2&lt;/div&gt;\n  &lt;div class=\"item-flex\"&gt;Item 3&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"display: flex; justify-content: space-around; align-items: center; gap: 20px; background-color: #1e293b; padding: 20px; border-radius: 10px;\">\n        <div style=\"background-color: #3b82f6; color: white; padding: 20px; border-radius: 8px; min-width: 100px; text-align: center;\">Item 1</div>\n        <div style=\"background-color: #3b82f6; color: white; padding: 20px; border-radius: 8px; min-width: 100px; text-align: center;\">Item 2</div>\n        <div style=\"background-color: #3b82f6; color: white; padding: 20px; border-radius: 8px; min-width: 100px; text-align: center;\">Item 3</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-magic'></i> Pseudo-clases Comunes</h2>\n<p>Estilos que se aplican en estados específicos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .boton-hover {\n    background-color: #3b82f6;\n    color: white;\n    padding: 12px 24px;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: all 0.3s;\n  }\n  .boton-hover:hover {\n    background-color: #1d4ed8;\n    transform: scale(1.05);\n  }\n  .enlace:visited {\n    color: purple;\n  }\n&lt;/style&gt;\n\n&lt;button class=\"boton-hover\"&gt;Pasa el mouse aquí&lt;/button&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;a href=\"#\" class=\"enlace\"&gt;Enlace que cambia al visitarse&lt;/a&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <button style=\"background-color: #3b82f6; color: white; padding: 12px 24px; border: none; border-radius: 8px; cursor: pointer; font-weight: bold; transition: all 0.3s;\" onmouseover=\"this.style.backgroundColor='#1d4ed8'; this.style.transform='scale(1.05)'\" onmouseout=\"this.style.backgroundColor='#3b82f6'; this.style.transform='scale(1)'\">Pasa el mouse aquí</button>\n      <br><br>\n      <a href=\"#\" style=\"color: #3b82f6; text-decoration: underline;\">Enlace que cambia al visitarse</a>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Ejemplo Práctico Completo</h2>\n<p>Aquí está un ejemplo que combina varios conceptos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .tarjeta {\n    max-width: 400px;\n    margin: 20px auto;\n    padding: 30px;\n    background-color: white;\n    border-radius: 15px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n  .tarjeta h2 {\n    color: #2563eb;\n    margin-bottom: 15px;\n    text-align: center;\n  }\n  .tarjeta p {\n    color: #64748b;\n    line-height: 1.6;\n    margin-bottom: 20px;\n  }\n  .boton {\n    display: block;\n    width: 100%;\n    padding: 12px 24px;\n    background-color: #2563eb;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    font-size: 16px;\n    font-weight: bold;\n    cursor: pointer;\n    transition: background-color 0.3s;\n  }\n  .boton:hover {\n    background-color: #1d4ed8;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"tarjeta\"&gt;\n  &lt;h2&gt;Mi Tarjeta&lt;/h2&gt;\n  &lt;p&gt;Esta es una tarjeta con estilos CSS profesionales&lt;/p&gt;\n  &lt;button class=\"boton\"&gt;Click aquí&lt;/button&gt;\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"max-width: 400px; margin: 20px auto; padding: 30px; background-color: white; border-radius: 15px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\n        <h2 style=\"color: #2563eb; margin-bottom: 15px; text-align: center; font-size: 1.5em;\">Mi Tarjeta</h2>\n        <p style=\"color: #64748b; line-height: 1.6; margin-bottom: 20px;\">Esta es una tarjeta con estilos CSS profesionales</p>\n        <button style=\"display: block; width: 100%; padding: 12px 24px; background-color: #2563eb; color: white; border: none; border-radius: 8px; font-size: 16px; font-weight: bold; cursor: pointer; transition: background-color 0.3s;\" onmouseover=\"this.style.backgroundColor='#1d4ed8'\" onmouseout=\"this.style.backgroundColor='#2563eb'\">Click aquí</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-map-marker-alt'></i> Posicionamiento Básico</h2>\n<p>Controla dónde aparece un elemento:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .contenedor-pos {\n    position: relative;\n    background-color: #1e293b;\n    height: 200px;\n    border-radius: 10px;\n    padding: 20px;\n  }\n  .caja-relativa {\n    position: relative;\n    background-color: #3b82f6;\n    color: white;\n    padding: 15px;\n    border-radius: 8px;\n    top: 20px;\n    left: 20px;\n    display: inline-block;\n  }\n  .caja-absoluta {\n    position: absolute;\n    background-color: #22c55e;\n    color: white;\n    padding: 15px;\n    border-radius: 8px;\n    top: 20px;\n    right: 20px;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"contenedor-pos\"&gt;\n  &lt;div class=\"caja-relativa\"&gt;Posición Relativa&lt;/div&gt;\n  &lt;div class=\"caja-absoluta\"&gt;Posición Absoluta&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"position: relative; background-color: #1e293b; height: 200px; border-radius: 10px; padding: 20px;\">\n        <div style=\"position: relative; background-color: #3b82f6; color: white; padding: 15px; border-radius: 8px; top: 20px; left: 20px; display: inline-block;\">Posición Relativa</div>\n        <div style=\"position: absolute; background-color: #22c55e; color: white; padding: 15px; border-radius: 8px; top: 20px; right: 20px;\">Posición Absoluta</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-layer-group'></i> Sombras y Efectos</h2>\n<p>Agrega profundidad y dimensión a tus elementos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .caja-sombra {\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n    margin-bottom: 20px;\n    color: #000;\n  }\n  .texto-sombra {\n    font-size: 24px;\n    font-weight: bold;\n    color: #3b82f6;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  }\n&lt;/style&gt;\n\n&lt;div class=\"caja-sombra\"&gt;\n  &lt;p class=\"texto-sombra\"&gt;Texto con sombra&lt;/p&gt;\n  &lt;p&gt;Caja con box-shadow profesional&lt;/p&gt;\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2); margin-bottom: 20px; color: #000;\">\n        <p style=\"font-size: 24px; font-weight: bold; color: #3b82f6; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3); margin-bottom: 10px;\">Texto con sombra</p>\n        <p style=\"margin: 0;\">Caja con box-shadow profesional</p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-play-circle'></i> Transiciones y Animaciones</h2>\n<p>Dale vida a tus elementos con movimiento suave:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;style&gt;\n  .caja-transicion {\n    background-color: #3b82f6;\n    color: white;\n    padding: 20px;\n    border-radius: 10px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n    text-align: center;\n    font-weight: bold;\n  }\n  .caja-transicion:hover {\n    background-color: #8b5cf6;\n    transform: translateY(-5px) scale(1.05);\n    box-shadow: 0 10px 20px rgba(139, 92, 246, 0.4);\n  }\n&lt;/style&gt;\n\n&lt;div class=\"caja-transicion\"&gt;\n  ¡Pasa el mouse sobre mí!\n&lt;/div&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"background-color: #3b82f6; color: white; padding: 20px; border-radius: 10px; transition: all 0.3s ease; cursor: pointer; text-align: center; font-weight: bold;\" onmouseover=\"this.style.backgroundColor='#8b5cf6'; this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 10px 20px rgba(139, 92, 246, 0.4)'\" onmouseout=\"this.style.backgroundColor='#3b82f6'; this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none'\">\n        ¡Pasa el mouse sobre mí!\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-mobile-alt'></i> Diseño Responsivo Básico</h2>\n<p>Adapta tu diseño a diferentes tamaños de pantalla:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n  \n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-css\">/* Estilos base (móvil primero) */\n.contenedor {\n  padding: 10px;\n  font-size: 14px;\n}\n\n/* Tablet (768px en adelante) */\n@media (min-width: 768px) {\n  .contenedor {\n    padding: 20px;\n    font-size: 16px;\n  }\n}\n\n/* Desktop (1024px en adelante) */\n@media (min-width: 1024px) {\n  .contenedor {\n    padding: 30px;\n    font-size: 18px;\n  }\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos y Buenas Prácticas</h2>\n<ul>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Usa nombres de clases descriptivos en minúsculas (ej: <code>.boton-principal</code>)</li>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Agrupa selectores relacionados para evitar repetición de código</li>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Comenta tu código CSS para explicar secciones complejas</li>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Usa unidades relativas (<code>rem</code>, <code>em</code>, <code>%</code>) cuando sea posible</li>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Mantén tu CSS organizado por secciones (reset, layout, componentes, utilidades)</li>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Prueba tu diseño en diferentes navegadores y dispositivos</li>\n  <li><i class='fas fa-check-circle' style='color: #10b981;'></i> Usa variables CSS para colores y valores repetidos</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes a Evitar</h2>\n<ul>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No usar <code>!important</code> (dificulta el mantenimiento)</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Olvidar el punto (<code>.</code>) para clases o el numeral (<code>#</code>) para IDs</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Usar demasiados IDs en lugar de clases reutilizables</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No considerar la especificidad de los selectores</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Abusar de los estilos inline (dificulta el mantenimiento)</li>\n  <li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No probar en diferentes navegadores</li>\n</ul>\n\n<h2><i class='fas fa-dumbbell'></i> Ejercicios para Practicar</h2>\n<p>Ahora que conoces los básicos de CSS, practica con estos ejercicios:</p>\n\n<ul>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea una tarjeta de perfil con foto, nombre y descripción estilizada</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Diseña un botón que cambie de color y tamaño al pasar el mouse</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea un menú de navegación horizontal con hover effects</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Diseña una galería de imágenes con Grid o Flexbox</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Experimenta con diferentes combinaciones de colores y gradientes</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea un formulario de contacto con estilos profesionales</li>\n  <li><i class='fas fa-star' style='color: #f59e0b;'></i> Diseña una landing page simple pero atractiva</li>\n</ul>\n\n<h2><i class='fas fa-road'></i> Próximos Pasos</h2>\n<p>Ahora que dominas CSS básico, puedes avanzar a:</p>\n\n<ul>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>CSS Grid</strong> - Sistema avanzado de layouts bidimensionales</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>CSS Flexbox Avanzado</strong> - Dominio completo de layouts flexibles</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Animaciones CSS</strong> - Keyframes y animaciones complejas</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Preprocesadores</strong> - SASS, LESS para CSS más poderoso</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Frameworks CSS</strong> - Bootstrap, Tailwind CSS</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>JavaScript</strong> - Para hacer tus páginas interactivas</li>\n</ul>\n\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; text-align: center; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-trophy'></i> ¡Felicidades!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has completado el tutorial de CSS básico. ¡Ahora puedes crear diseños hermosos y profesionales para tus páginas web!</p>\n</div>",
    "lastUpdated": "2025-10-23T18:58:02.473084"
  },
  "68f80b93f0850f5968c09f50": {
    "title": "Conceptos Básicos de Java",
    "language": "java",
    "level": "principiante",
    "duration": "2h",
    "description": "Aprende los fundamentos de Java desde cero. Este tutorial cubre variables, tipos de datos, estructuras de control, bucles, arrays, métodos, programación orientada a objetos y manejo de excepciones. Incluye ejemplos prácticos y un proyecto completo de sistema de biblioteca.",
    "content": "<h2><i class='fab fa-java'></i> Introducción a Java</h2>\n<p>Java es un lenguaje de programación orientado a objetos, desarrollado por Sun Microsystems en 1995. Es uno de los lenguajes más populares y utilizados en el mundo, conocido por su filosofía \"Write Once, Run Anywhere\" (Escribe una vez, ejecuta en cualquier lugar).</p>\n\n<h3><i class='fas fa-question-circle'></i> ¿Qué es Java?</h3>\n<p>Java es un lenguaje de programación de <strong>propósito general</strong>, orientado a objetos y diseñado para tener la menor cantidad de dependencias de implementación posible. Su bytecode puede ejecutarse en cualquier máquina virtual Java (JVM) sin importar el sistema operativo.</p>\n\n<div class=\"bg-gradient-to-r from-orange-500/10 to-red-500/10 border-l-4 border-orange-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-info-circle text-orange-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-orange-300 text-lg\">¿Sabías que?</strong>\n      <p class=\"text-slate-300 mt-2\">Java es usado por más de 3 mil millones de dispositivos en todo el mundo, desde teléfonos móviles hasta sistemas empresariales.</p>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-cogs'></i> Características Principales de Java</h2>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Orientado a Objetos:</strong> Todo en Java es un objeto</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Independiente de Plataforma:</strong> El código compilado se ejecuta en cualquier JVM</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Seguro:</strong> Proporciona un entorno de ejecución seguro</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Robusto:</strong> Manejo de errores y gestión automática de memoria</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Multihilo:</strong> Permite la ejecución concurrente de múltiples hilos</li>\n</ul>\n\n<h2><i class='fas fa-file-code'></i> Estructura Básica de un Programa Java</h2>\n<p>Todo programa Java debe tener al menos una clase y un método main:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">public class HolaMundo {\n    public static void main(String[] args) {\n        System.out.println(\"¡Hola Mundo!\");\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">¡Hola Mundo!</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación de cada parte:</h3>\n<ul>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>public class HolaMundo</code> - Define una clase pública llamada HolaMundo</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>public static void main(String[] args)</code> - Método principal donde inicia la ejecución</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <code>System.out.println()</code> - Imprime texto en la consola</li>\n</ul>\n\n<h2><i class='fas fa-database'></i> Variables y Tipos de Datos</h2>\n\n<h3><i class='fas fa-list-alt'></i> Tipos de Datos Primitivos</h3>\n\n<div class=\"bg-gradient-to-r from-blue-500/10 to-cyan-500/10 border-l-4 border-blue-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-database text-blue-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-blue-300 text-lg\">Tipos Primitivos en Java:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• <strong>byte</strong> - 8 bits (-128 a 127)</li>\n        <li>• <strong>short</strong> - 16 bits (-32,768 a 32,767)</li>\n        <li>• <strong>int</strong> - 32 bits (más usado para enteros)</li>\n        <li>• <strong>long</strong> - 64 bits (números muy grandes)</li>\n        <li>• <strong>float</strong> - 32 bits (decimales simples)</li>\n        <li>• <strong>double</strong> - 64 bits (decimales precisos)</li>\n        <li>• <strong>char</strong> - 16 bits (un carácter Unicode)</li>\n        <li>• <strong>boolean</strong> - true o false</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">// Números enteros\nbyte edad = 25;           // 8 bits (-128 a 127)\nshort year = 2025;        // 16 bits (-32,768 a 32,767)\nint poblacion = 1000000;  // 32 bits\nlong distancia = 9876543210L; // 64 bits (nota la 'L' al final)\n\n// Números decimales\nfloat precio = 19.99f;    // 32 bits (nota la 'f' al final)\ndouble pi = 3.14159265359; // 64 bits\n\n// Carácter\nchar letra = 'A';         // 16 bits Unicode\n\n// Booleano\nboolean esVerdad = true;  // true o false\n\nSystem.out.println(\"Edad: \" + edad);\nSystem.out.println(\"Precio: \" + precio);\nSystem.out.println(\"Es verdad: \" + esVerdad);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Edad: 25</span>\n      <span class=\"console-line\">Precio: 19.99</span>\n      <span class=\"console-line\">Es verdad: true</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-text-width'></i> Cadenas de Texto (String)</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">String nombre = \"Juan\";\nString apellido = \"Pérez\";\nString nombreCompleto = nombre + \" \" + apellido; // Concatenación\n\n// Métodos útiles de String\nint longitud = nombre.length();        // 4\nString mayusculas = nombre.toUpperCase(); // \"JUAN\"\nString minusculas = nombre.toLowerCase(); // \"juan\"\nboolean contiene = nombre.contains(\"Ju\"); // true\n\nSystem.out.println(\"Nombre completo: \" + nombreCompleto);\nSystem.out.println(\"Longitud: \" + longitud);\nSystem.out.println(\"Mayúsculas: \" + mayusculas);\nSystem.out.println(\"Contiene 'Ju': \" + contiene);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Nombre completo: Juan Pérez</span>\n      <span class=\"console-line\">Longitud: 4</span>\n      <span class=\"console-line\">Mayúsculas: JUAN</span>\n      <span class=\"console-line\">Contiene 'Ju': true</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-calculator'></i> Operadores</h2>\n\n<h3><i class='fas fa-plus'></i> Operadores Aritméticos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">int a = 10;\nint b = 3;\n\nint suma = a + b;        // 13\nint resta = a - b;       // 7\nint multiplicacion = a * b; // 30\nint division = a / b;    // 3 (división entera)\nint modulo = a % b;      // 1 (residuo)\n\nSystem.out.println(\"Suma: \" + suma);\nSystem.out.println(\"Resta: \" + resta);\nSystem.out.println(\"Multiplicación: \" + multiplicacion);\nSystem.out.println(\"División: \" + division);\nSystem.out.println(\"Módulo: \" + modulo);\n\n// Incremento y decremento\na++;  // a = 11\nb--;  // b = 2\nSystem.out.println(\"a después de ++: \" + a);\nSystem.out.println(\"b después de --: \" + b);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Suma: 13</span>\n      <span class=\"console-line\">Resta: 7</span>\n      <span class=\"console-line\">Multiplicación: 30</span>\n      <span class=\"console-line\">División: 3</span>\n      <span class=\"console-line\">Módulo: 1</span>\n      <span class=\"console-line\">a después de ++: 11</span>\n      <span class=\"console-line\">b después de --: 2</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-balance-scale'></i> Operadores de Comparación</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">int x = 5;\nint y = 10;\n\nboolean igual = (x == y);        // false\nboolean diferente = (x != y);    // true\nboolean mayor = (x > y);         // false\nboolean menor = (x < y);         // true\nboolean mayorIgual = (x >= 5);   // true\nboolean menorIgual = (y <= 10);  // true\n\nSystem.out.println(\"¿x es igual a y? \" + igual);\nSystem.out.println(\"¿x es diferente de y? \" + diferente);\nSystem.out.println(\"¿x es menor que y? \" + menor);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">¿x es igual a y? false</span>\n      <span class=\"console-line\">¿x es diferente de y? true</span>\n      <span class=\"console-line\">¿x es menor que y? true</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-code-branch'></i> Operadores Lógicos</h3>\n\n<div class=\"bg-gradient-to-r from-purple-500/10 to-pink-500/10 border-l-4 border-purple-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-code-branch text-purple-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-purple-300 text-lg\">Operadores Lógicos:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• <code>&&</code> (AND) - Verdadero si ambas condiciones son verdaderas</li>\n        <li>• <code>||</code> (OR) - Verdadero si al menos una condición es verdadera</li>\n        <li>• <code>!</code> (NOT) - Invierte el valor booleano</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">boolean a = true;\nboolean b = false;\n\nboolean and = a && b;  // false (AND - ambos verdaderos)\nboolean or = a || b;   // true (OR - al menos uno verdadero)\nboolean not = !a;      // false (NOT - invierte el valor)\n\nSystem.out.println(\"a AND b: \" + and);\nSystem.out.println(\"a OR b: \" + or);\nSystem.out.println(\"NOT a: \" + not);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">a AND b: false</span>\n      <span class=\"console-line\">a OR b: true</span>\n      <span class=\"console-line\">NOT a: false</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-random'></i> Estructuras de Control</h2>\n\n<h3><i class='fas fa-question'></i> Condicional IF-ELSE</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">int edad = 18;\n\nif (edad >= 18) {\n    System.out.println(\"Eres mayor de edad\");\n} else if (edad >= 13) {\n    System.out.println(\"Eres adolescente\");\n} else {\n    System.out.println(\"Eres menor de edad\");\n}\n\n// Operador ternario (forma corta)\nString resultado = (edad >= 18) ? \"Mayor\" : \"Menor\";\nSystem.out.println(\"Resultado: \" + resultado);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Eres mayor de edad</span>\n      <span class=\"console-line\">Resultado: Mayor</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-list-ol'></i> Switch</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">int dia = 3;\nString nombreDia;\n\nswitch (dia) {\n    case 1:\n        nombreDia = \"Lunes\";\n        break;\n    case 2:\n        nombreDia = \"Martes\";\n        break;\n    case 3:\n        nombreDia = \"Miércoles\";\n        break;\n    case 4:\n        nombreDia = \"Jueves\";\n        break;\n    case 5:\n        nombreDia = \"Viernes\";\n        break;\n    case 6:\n    case 7:\n        nombreDia = \"Fin de semana\";\n        break;\n    default:\n        nombreDia = \"Día inválido\";\n        break;\n}\n\nSystem.out.println(\"Día: \" + nombreDia);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Día: Miércoles</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-sync-alt'></i> Bucles (Loops)</h2>\n\n<h3><i class='fas fa-redo'></i> Bucle FOR</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">// For tradicional\nfor (int i = 0; i < 5; i++) {\n    System.out.println(\"Iteración: \" + i);\n}\n\nSystem.out.println(\"---\");\n\n// For mejorado (para arrays)\nString[] frutas = {\"Manzana\", \"Banana\", \"Naranja\"};\nfor (String fruta : frutas) {\n    System.out.println(\"Fruta: \" + fruta);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Iteración: 0</span>\n      <span class=\"console-line\">Iteración: 1</span>\n      <span class=\"console-line\">Iteración: 2</span>\n      <span class=\"console-line\">Iteración: 3</span>\n      <span class=\"console-line\">Iteración: 4</span>\n      <span class=\"console-line\">---</span>\n      <span class=\"console-line\">Fruta: Manzana</span>\n      <span class=\"console-line\">Fruta: Banana</span>\n      <span class=\"console-line\">Fruta: Naranja</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-circle-notch'></i> Bucle WHILE</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">int contador = 0;\n\nwhile (contador < 3) {\n    System.out.println(\"Contador: \" + contador);\n    contador++;\n}\n\nSystem.out.println(\"---\");\n\n// Do-While (se ejecuta al menos una vez)\nint numero = 0;\ndo {\n    System.out.println(\"Número: \" + numero);\n    numero++;\n} while (numero < 3);</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Contador: 0</span>\n      <span class=\"console-line\">Contador: 1</span>\n      <span class=\"console-line\">Contador: 2</span>\n      <span class=\"console-line\">---</span>\n      <span class=\"console-line\">Número: 0</span>\n      <span class=\"console-line\">Número: 1</span>\n      <span class=\"console-line\">Número: 2</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-layer-group'></i> Arrays (Arreglos)</h2>\n\n<h3><i class='fas fa-list'></i> Declaración y Uso</h3>\n\n<div class=\"bg-gradient-to-r from-emerald-500/10 to-green-500/10 border-l-4 border-emerald-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-layer-group text-emerald-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-emerald-300 text-lg\">Arrays en Java:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• Los arrays tienen <strong>tamaño fijo</strong> (no cambia después de crear)</li>\n        <li>• Los índices empiezan en <strong>0</strong></li>\n        <li>• Usa <code>.length</code> para obtener el tamaño</li>\n        <li>• Todos los elementos deben ser del mismo tipo</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">// Declaración e inicialización\nint[] numeros = {1, 2, 3, 4, 5};\nString[] nombres = new String[3];\n\n// Asignar valores\nnombres[0] = \"Ana\";\nnombres[1] = \"Luis\";\nnombres[2] = \"María\";\n\n// Acceder a elementos\nint primerNumero = numeros[0]; // 1\nString segundoNombre = nombres[1]; // \"Luis\"\n\nSystem.out.println(\"Primer número: \" + primerNumero);\nSystem.out.println(\"Segundo nombre: \" + segundoNombre);\n\n// Longitud del array\nSystem.out.println(\"Longitud de numeros: \" + numeros.length);\n\n// Recorrer un array\nSystem.out.println(\"Números:\");\nfor (int i = 0; i < numeros.length; i++) {\n    System.out.println(\"  \" + numeros[i]);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Primer número: 1</span>\n      <span class=\"console-line\">Segundo nombre: Luis</span>\n      <span class=\"console-line\">Longitud de numeros: 5</span>\n      <span class=\"console-line\">Números:</span>\n      <span class=\"console-line\">  1</span>\n      <span class=\"console-line\">  2</span>\n      <span class=\"console-line\">  3</span>\n      <span class=\"console-line\">  4</span>\n      <span class=\"console-line\">  5</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-th'></i> Arrays Multidimensionales</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">// Array bidimensional (matriz)\nint[][] matriz = {\n    {1, 2, 3},\n    {4, 5, 6},\n    {7, 8, 9}\n};\n\n// Acceder a elementos\nint elemento = matriz[1][2]; // 6 (fila 1, columna 2)\nSystem.out.println(\"Elemento [1][2]: \" + elemento);\n\n// Recorrer matriz\nSystem.out.println(\"Matriz:\");\nfor (int i = 0; i < matriz.length; i++) {\n    for (int j = 0; j < matriz[i].length; j++) {\n        System.out.print(matriz[i][j] + \" \");\n    }\n    System.out.println();\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Elemento [1][2]: 6</span>\n      <span class=\"console-line\">Matriz:</span>\n      <span class=\"console-line\">1 2 3 </span>\n      <span class=\"console-line\">4 5 6 </span>\n      <span class=\"console-line\">7 8 9 </span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-cube'></i> Métodos (Funciones)</h2>\n\n<h3><i class='fas fa-code'></i> Definición y Uso</h3>\n\n<div class=\"bg-gradient-to-r from-cyan-500/10 to-blue-500/10 border-l-4 border-cyan-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-cube text-cyan-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-cyan-300 text-lg\">Estructura de un Método:</strong>\n      <p class=\"text-slate-300 mt-2\"><code>modificador tipoRetorno nombreMetodo(parámetros) { ... }</code></p>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• <strong>public/private</strong> - Visibilidad del método</li>\n        <li>• <strong>static</strong> - Se puede llamar sin crear objeto</li>\n        <li>• <strong>void</strong> - No retorna nada</li>\n        <li>• <strong>return</strong> - Devuelve un valor</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">public class Calculadora {\n    \n    // Método sin retorno (void)\n    public static void saludar(String nombre) {\n        System.out.println(\"Hola, \" + nombre);\n    }\n    \n    // Método con retorno\n    public static int sumar(int a, int b) {\n        return a + b;\n    }\n    \n    // Método con múltiples parámetros\n    public static double calcularPromedio(double[] numeros) {\n        double suma = 0;\n        for (double num : numeros) {\n            suma += num;\n        }\n        return suma / numeros.length;\n    }\n    \n    public static void main(String[] args) {\n        saludar(\"Juan\");\n        \n        int resultado = sumar(5, 3);\n        System.out.println(\"Suma: \" + resultado);\n        \n        double[] notas = {8.5, 9.0, 7.5};\n        double promedio = calcularPromedio(notas);\n        System.out.println(\"Promedio: \" + promedio);\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Hola, Juan</span>\n      <span class=\"console-line\">Suma: 8</span>\n      <span class=\"console-line\">Promedio: 8.333333333333334</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-object-group'></i> Programación Orientada a Objetos</h2>\n\n<h3><i class='fas fa-cube'></i> Clases y Objetos</h3>\n\n<div class=\"bg-gradient-to-r from-purple-500/10 to-pink-500/10 border-l-4 border-purple-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-object-group text-purple-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-purple-300 text-lg\">POO en Java:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• <strong>Clase</strong> - Plantilla o molde para crear objetos</li>\n        <li>• <strong>Objeto</strong> - Instancia de una clase</li>\n        <li>• <strong>Atributos</strong> - Variables que describen el objeto</li>\n        <li>• <strong>Métodos</strong> - Acciones que puede realizar el objeto</li>\n        <li>• <strong>Encapsulamiento</strong> - Atributos privados con getters/setters</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">// Definición de una clase\npublic class Persona {\n    // Atributos (variables de instancia)\n    private String nombre;\n    private int edad;\n    \n    // Constructor\n    public Persona(String nombre, int edad) {\n        this.nombre = nombre;\n        this.edad = edad;\n    }\n    \n    // Métodos getter y setter\n    public String getNombre() {\n        return nombre;\n    }\n    \n    public void setNombre(String nombre) {\n        this.nombre = nombre;\n    }\n    \n    public int getEdad() {\n        return edad;\n    }\n    \n    public void setEdad(int edad) {\n        this.edad = edad;\n    }\n    \n    // Método personalizado\n    public void presentarse() {\n        System.out.println(\"Hola, soy \" + nombre + \" y tengo \" + edad + \" años\");\n    }\n}\n\n// Uso de la clase\npublic class Main {\n    public static void main(String[] args) {\n        // Crear objetos\n        Persona persona1 = new Persona(\"Ana\", 25);\n        Persona persona2 = new Persona(\"Carlos\", 30);\n        \n        // Usar métodos\n        persona1.presentarse();\n        persona2.presentarse();\n        \n        // Modificar atributos\n        persona1.setEdad(26);\n        System.out.println(persona1.getNombre() + \" ahora tiene \" + persona1.getEdad() + \" años\");\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Hola, soy Ana y tengo 25 años</span>\n      <span class=\"console-line\">Hola, soy Carlos y tengo 30 años</span>\n      <span class=\"console-line\">Ana ahora tiene 26 años</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-sitemap'></i> Herencia</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">// Clase padre\npublic class Animal {\n    protected String nombre;\n    \n    public Animal(String nombre) {\n        this.nombre = nombre;\n    }\n    \n    public void hacerSonido() {\n        System.out.println(\"El animal hace un sonido\");\n    }\n}\n\n// Clase hija\npublic class Perro extends Animal {\n    private String raza;\n    \n    public Perro(String nombre, String raza) {\n        super(nombre); // Llama al constructor del padre\n        this.raza = raza;\n    }\n    \n    @Override\n    public void hacerSonido() {\n        System.out.println(nombre + \" ladra: ¡Guau guau!\");\n    }\n    \n    public void mostrarInfo() {\n        System.out.println(\"Nombre: \" + nombre + \", Raza: \" + raza);\n    }\n}\n\n// Uso\npublic class Main {\n    public static void main(String[] args) {\n        Perro miPerro = new Perro(\"Max\", \"Labrador\");\n        miPerro.hacerSonido();\n        miPerro.mostrarInfo();\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Max ladra: ¡Guau guau!</span>\n      <span class=\"console-line\">Nombre: Max, Raza: Labrador</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-keyboard'></i> Entrada de Datos</h2>\n\n<h3><i class='fas fa-terminal'></i> Scanner (Consola)</h3>\n\n<div class=\"bg-gradient-to-r from-blue-500/10 to-indigo-500/10 border-l-4 border-blue-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-keyboard text-blue-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-blue-300 text-lg\">Métodos de Scanner:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>• <code>nextLine()</code> - Lee una línea completa (String)</li>\n        <li>• <code>next()</code> - Lee una palabra (String)</li>\n        <li>• <code>nextInt()</code> - Lee un número entero</li>\n        <li>• <code>nextDouble()</code> - Lee un número decimal</li>\n        <li>• <code>nextBoolean()</code> - Lee true o false</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">import java.util.Scanner;\n\npublic class EntradaDatos {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        // Leer String\n        System.out.print(\"Ingresa tu nombre: \");\n        String nombre = scanner.nextLine();\n        \n        // Leer int\n        System.out.print(\"Ingresa tu edad: \");\n        int edad = scanner.nextInt();\n        \n        // Leer double\n        System.out.print(\"Ingresa tu altura (m): \");\n        double altura = scanner.nextDouble();\n        \n        System.out.println(\"\\nDatos ingresados:\");\n        System.out.println(\"Nombre: \" + nombre);\n        System.out.println(\"Edad: \" + edad);\n        System.out.println(\"Altura: \" + altura);\n        \n        scanner.close(); // IMPORTANTE: Cerrar el scanner\n    }\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Manejo de Excepciones</h2>\n\n<h3><i class='fas fa-shield-alt'></i> Try-Catch</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">public class ManejoExcepciones {\n    public static void main(String[] args) {\n        try {\n            int[] numeros = {1, 2, 3};\n            System.out.println(numeros[5]); // Error: índice fuera de rango\n            \n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"Error: Índice fuera de rango\");\n        } catch (Exception e) {\n            System.out.println(\"Error general: \" + e.getMessage());\n        } finally {\n            System.out.println(\"Este bloque siempre se ejecuta\");\n        }\n        \n        // Ejemplo con división por cero\n        try {\n            int resultado = 10 / 0;\n        } catch (ArithmeticException e) {\n            System.out.println(\"Error: No se puede dividir por cero\");\n        }\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line console-error\">Error: Índice fuera de rango</span>\n      <span class=\"console-line\">Este bloque siempre se ejecuta</span>\n      <span class=\"console-line console-error\">Error: No se puede dividir por cero</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-box-open'></i> Colecciones Básicas</h2>\n\n<h3><i class='fas fa-list-ul'></i> ArrayList</h3>\n\n<div class=\"bg-gradient-to-r from-emerald-500/10 to-green-500/10 border-l-4 border-emerald-400 rounded-lg p-6 mb-6 backdrop-blur\">\n  <div class=\"flex items-start gap-3\">\n    <i class=\"fas fa-list-ul text-emerald-400 text-xl mt-1\"></i>\n    <div>\n      <strong class=\"text-emerald-300 text-lg\">ArrayList vs Array:</strong>\n      <ul class=\"text-slate-300 mt-2 space-y-1\">\n        <li>✅ <strong>ArrayList</strong> - Tamaño dinámico (crece automáticamente)</li>\n        <li>❌ <strong>Array</strong> - Tamaño fijo (no puede cambiar)</li>\n        <li>💡 Usa ArrayList cuando no sepas cuántos elementos tendrás</li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'console')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">import java.util.ArrayList;\n\npublic class EjemploArrayList {\n    public static void main(String[] args) {\n        // Crear ArrayList\n        ArrayList<String> frutas = new ArrayList<>();\n        \n        // Agregar elementos\n        frutas.add(\"Manzana\");\n        frutas.add(\"Banana\");\n        frutas.add(\"Naranja\");\n        System.out.println(\"Frutas: \" + frutas);\n        \n        // Acceder a elementos\n        String primeraFruta = frutas.get(0);\n        System.out.println(\"Primera fruta: \" + primeraFruta);\n        \n        // Tamaño\n        System.out.println(\"Cantidad: \" + frutas.size());\n        \n        // Modificar elemento\n        frutas.set(1, \"Fresa\");\n        System.out.println(\"Después de modificar: \" + frutas);\n        \n        // Verificar si contiene\n        boolean tieneManzana = frutas.contains(\"Manzana\");\n        System.out.println(\"¿Tiene Manzana? \" + tieneManzana);\n        \n        // Eliminar elemento\n        frutas.remove(2);\n        System.out.println(\"Después de eliminar: \" + frutas);\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content console-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Frutas: [Manzana, Banana, Naranja]</span>\n      <span class=\"console-line\">Primera fruta: Manzana</span>\n      <span class=\"console-line\">Cantidad: 3</span>\n      <span class=\"console-line\">Después de modificar: [Manzana, Fresa, Naranja]</span>\n      <span class=\"console-line\">¿Tiene Manzana? true</span>\n      <span class=\"console-line\">Después de eliminar: [Manzana, Fresa]</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Ejemplo Completo: Sistema de Biblioteca</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-java\">import java.util.ArrayList;\nimport java.util.Scanner;\n\n// Clase Libro\nclass Libro {\n    private String titulo;\n    private String autor;\n    private boolean disponible;\n    \n    public Libro(String titulo, String autor) {\n        this.titulo = titulo;\n        this.autor = autor;\n        this.disponible = true;\n    }\n    \n    public String getTitulo() {\n        return titulo;\n    }\n    \n    public boolean isDisponible() {\n        return disponible;\n    }\n    \n    public void prestar() {\n        if (disponible) {\n            disponible = false;\n            System.out.println(\"✓ Libro prestado: \" + titulo);\n        } else {\n            System.out.println(\"✗ El libro no está disponible\");\n        }\n    }\n    \n    public void devolver() {\n        disponible = true;\n        System.out.println(\"✓ Libro devuelto: \" + titulo);\n    }\n    \n    public void mostrarInfo() {\n        String estado = disponible ? \"Disponible\" : \"Prestado\";\n        System.out.println(\"📖 \" + titulo + \" | ✍️ \" + autor + \" | \" + estado);\n    }\n}\n\n// Clase Biblioteca\nclass Biblioteca {\n    private ArrayList<Libro> libros;\n    \n    public Biblioteca() {\n        libros = new ArrayList<>();\n    }\n    \n    public void agregarLibro(String titulo, String autor) {\n        Libro libro = new Libro(titulo, autor);\n        libros.add(libro);\n        System.out.println(\"✓ Libro agregado: \" + titulo);\n    }\n    \n    public void mostrarLibros() {\n        if (libros.isEmpty()) {\n            System.out.println(\"No hay libros en la biblioteca\");\n        } else {\n            System.out.println(\"\\n═══ LIBROS EN LA BIBLIOTECA ═══\");\n            for (int i = 0; i < libros.size(); i++) {\n                System.out.print((i + 1) + \". \");\n                libros.get(i).mostrarInfo();\n            }\n        }\n    }\n    \n    public void prestarLibro(int indice) {\n        if (indice >= 0 && indice < libros.size()) {\n            libros.get(indice).prestar();\n        } else {\n            System.out.println(\"✗ Índice inválido\");\n        }\n    }\n    \n    public void devolverLibro(int indice) {\n        if (indice >= 0 && indice < libros.size()) {\n            libros.get(indice).devolver();\n        } else {\n            System.out.println(\"✗ Índice inválido\");\n        }\n    }\n}\n\n// Clase Principal\npublic class SistemaBiblioteca {\n    public static void main(String[] args) {\n        Biblioteca biblioteca = new Biblioteca();\n        Scanner scanner = new Scanner(System.in);\n        \n        // Agregar libros de ejemplo\n        biblioteca.agregarLibro(\"Cien años de soledad\", \"Gabriel García Márquez\");\n        biblioteca.agregarLibro(\"Don Quijote\", \"Miguel de Cervantes\");\n        biblioteca.agregarLibro(\"1984\", \"George Orwell\");\n        \n        boolean continuar = true;\n        \n        while (continuar) {\n            System.out.println(\"\\n═══ MENÚ BIBLIOTECA ═══\");\n            System.out.println(\"1. Mostrar libros\");\n            System.out.println(\"2. Agregar libro\");\n            System.out.println(\"3. Prestar libro\");\n            System.out.println(\"4. Devolver libro\");\n            System.out.println(\"5. Salir\");\n            System.out.print(\"Selecciona opción: \");\n            \n            int opcion = scanner.nextInt();\n            scanner.nextLine(); // Limpiar buffer\n            \n            switch (opcion) {\n                case 1:\n                    biblioteca.mostrarLibros();\n                    break;\n                case 2:\n                    System.out.print(\"Título: \");\n                    String titulo = scanner.nextLine();\n                    System.out.print(\"Autor: \");\n                    String autor = scanner.nextLine();\n                    biblioteca.agregarLibro(titulo, autor);\n                    break;\n                case 3:\n                    biblioteca.mostrarLibros();\n                    System.out.print(\"Número de libro: \");\n                    int prestar = scanner.nextInt() - 1;\n                    biblioteca.prestarLibro(prestar);\n                    break;\n                case 4:\n                    biblioteca.mostrarLibros();\n                    System.out.print(\"Número de libro: \");\n                    int devolver = scanner.nextInt() - 1;\n                    biblioteca.devolverLibro(devolver);\n                    break;\n                case 5:\n                    continuar = false;\n                    System.out.println(\"¡Hasta luego! 👋\");\n                    break;\n                default:\n                    System.out.println(\"Opción inválida\");\n            }\n        }\n        \n        scanner.close();\n    }\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-check-circle'></i> Buenas Prácticas en Java</h2>\n<ul>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa nombres descriptivos para variables y métodos (camelCase)</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Los nombres de clases empiezan con mayúscula (PascalCase)</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Las constantes se escriben en MAYÚSCULAS_CON_GUIONES</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa indentación consistente (4 espacios o 1 tab)</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Siempre cierra los recursos (Scanner, archivos, etc.)</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Maneja las excepciones apropiadamente</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Comenta tu código cuando sea necesario</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes a Evitar</h2>\n<ul>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No cerrar el Scanner u otros recursos</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Olvidar el punto y coma (;) al final de las sentencias</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Confundir = (asignación) con == (comparación)</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Acceder a índices fuera del rango de arrays</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No manejar las excepciones</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Modificar arrays dentro de for-each</li>\n</ul>\n\n<h2><i class='fas fa-graduation-cap'></i> Ejercicios para Practicar</h2>\n<ul>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea una calculadora básica con las 4 operaciones</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Programa que determine si un número es primo</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Sistema de gestión de estudiantes con notas</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Juego de adivinar un número aleatorio</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Conversor de temperaturas (Celsius, Fahrenheit, Kelvin)</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Sistema de inventario para una tienda</li>\n</ul>\n\n<h2><i class='fas fa-road'></i> Próximos Pasos</h2>\n<p>Ahora que conoces los conceptos básicos de Java, puedes continuar aprendiendo sobre:</p>\n\n<ul>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Colecciones avanzadas</strong> - HashMap, HashSet, LinkedList</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Programación funcional</strong> - Streams, Lambda expressions</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Manejo de archivos</strong> - Lectura y escritura de archivos</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Bases de datos</strong> - JDBC, JPA, Hibernate</li>\n  <li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Frameworks</strong> - Spring Boot, JavaFX</li>\n</ul>\n\n<div style=\"background: linear-gradient(135deg, #f59e0b 0%, #ef4444 100%); border-radius: 16px; padding: 30px; margin-top: 30px; text-align: center; box-shadow: 0 10px 30px rgba(245, 158, 11, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-trophy'></i> ¡Excelente Trabajo!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has completado el tutorial de conceptos básicos de Java. ¡Continúa practicando y construyendo proyectos!</p>\n</div>",
    "lastUpdated": "2025-10-23T23:07:26.232769"
  },
  "68f80bc4f0850f5968c09f51": {
    "title": "Conceptos Básicos de Python",
    "language": "python",
    "level": "principiante",
    "duration": "2h",
    "description": "Aprende Python desde cero. Este tutorial cubre variables, tipos de datos, estructuras de control, bucles, listas, diccionarios, funciones, POO, manejo de errores y archivos. Incluye un proyecto completo de gestor de tareas.",
    "content": "<h2><i class='fab fa-python'></i> Introducción a Python</h2>\n<p>Python es un lenguaje de programación de alto nivel, interpretado y de propósito general. Creado por Guido van Rossum en 1991, es conocido por su sintaxis clara y legible, lo que lo convierte en uno de los mejores lenguajes para principiantes.</p>\n\n<h3><i class='fas fa-question-circle'></i> ¿Por qué Python?</h3>\n<p>Python es un lenguaje <strong>versátil y poderoso</strong> utilizado en desarrollo web, ciencia de datos, inteligencia artificial, automatización, y mucho más. Su filosofía enfatiza la legibilidad del código y la productividad del programador.</p>\n\n<h2><i class='fas fa-star'></i> Características Principales de Python</h2>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Fácil de aprender:</strong> Sintaxis simple y clara</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Interpretado:</strong> No necesita compilación</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Multiplataforma:</strong> Funciona en Windows, Mac, Linux</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Tipado dinámico:</strong> No necesitas declarar tipos de variables</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Gran comunidad:</strong> Miles de librerías disponibles</li>\n</ul>\n\n<h2><i class='fas fa-rocket'></i> Tu Primer Programa en Python</h2>\n<p>Python es extremadamente sencillo. Para imprimir \"Hola Mundo\" solo necesitas:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\">print(\"¡Hola Mundo!\")\n\n# Esto es un comentario en Python\n# Los comentarios empiezan con #\n\n\"\"\"\nEsto es un comentario\nde múltiples líneas\n\"\"\"</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">¡Hola Mundo!</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-database'></i> Variables y Tipos de Datos</h2>\n\n<h3><i class='fas fa-tag'></i> Variables</h3>\n<p>En Python no necesitas declarar el tipo de variable, se asigna automáticamente:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Variables de diferentes tipos\nnombre = \"Juan\"           # String (cadena)\nedad = 25                 # Integer (entero)\naltura = 1.75             # Float (decimal)\nes_estudiante = True      # Boolean (booleano)\n\n# Python es sensible a mayúsculas\nNombre = \"María\"  # Esta es una variable diferente a 'nombre'\n\n# Múltiples asignaciones\nx, y, z = 1, 2, 3\na = b = c = 0\n\n# Conocer el tipo de una variable\nprint(type(edad))  # <class 'int'></code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">&lt;class 'int'&gt;</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-list-alt'></i> Tipos de Datos Básicos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Números\nentero = 42\ndecimal = 3.14159\ncomplejo = 3 + 4j\n\n# Cadenas (Strings)\ntexto1 = \"Hola\"\ntexto2 = 'Mundo'\ntexto_largo = \"\"\"Este es un\ntexto de múltiples\nlíneas\"\"\"\n\n# Booleanos\nverdadero = True\nfalso = False\n\n# None (equivalente a null en otros lenguajes)\nvacio = None\n\n# Imprimir ejemplos\nprint(f\"Entero: {entero}\")\nprint(f\"Decimal: {decimal}\")\nprint(f\"Texto: {texto1} {texto2}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Entero: <span class=\"console-number\">42</span></span>\n      <span class=\"console-line\">Decimal: <span class=\"console-number\">3.14159</span></span>\n      <span class=\"console-line\">Texto: <span class=\"console-string\">Hola Mundo</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-text-width'></i> Operaciones con Strings</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\">nombre = \"Python\"\napellido = \"Programming\"\n\n# Concatenación\nnombre_completo = nombre + \" \" + apellido\nprint(nombre_completo)\n\n# F-strings (formato moderno)\nmensaje = f\"Hola, me gusta {nombre}\"\nprint(mensaje)\n\n# Métodos útiles\ntexto = \"hola mundo\"\nprint(texto.upper())        # \"HOLA MUNDO\"\nprint(texto.capitalize())   # \"Hola mundo\"\nprint(texto.title())        # \"Hola Mundo\"\n\n# Longitud\nlongitud = len(texto)\nprint(f\"Longitud: {longitud}\")\n\n# Slicing (cortar)\nprimeras_4 = texto[0:4]\nprint(f\"Primeras 4: {primeras_4}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Python Programming</span>\n      <span class=\"console-line\">Hola, me gusta Python</span>\n      <span class=\"console-line\">HOLA MUNDO</span>\n      <span class=\"console-line\">Hola mundo</span>\n      <span class=\"console-line\">Hola Mundo</span>\n      <span class=\"console-line\">Longitud: <span class=\"console-number\">10</span></span>\n      <span class=\"console-line\">Primeras 4: <span class=\"console-string\">hola</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-calculator'></i> Operadores</h2>\n\n<h3><i class='fas fa-plus'></i> Operadores Aritméticos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\">a = 10\nb = 3\n\nsuma = a + b\nresta = a - b\nmultiplicacion = a * b\ndivision = a / b\ndivision_entera = a // b\nmodulo = a % b\npotencia = a ** b\n\nprint(f\"Suma: {suma}\")\nprint(f\"Resta: {resta}\")\nprint(f\"Multiplicación: {multiplicacion}\")\nprint(f\"División: {division}\")\nprint(f\"División entera: {division_entera}\")\nprint(f\"Módulo: {modulo}\")\nprint(f\"Potencia: {potencia}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Suma: <span class=\"console-number\">13</span></span>\n      <span class=\"console-line\">Resta: <span class=\"console-number\">7</span></span>\n      <span class=\"console-line\">Multiplicación: <span class=\"console-number\">30</span></span>\n      <span class=\"console-line\">División: <span class=\"console-number\">3.333...</span></span>\n      <span class=\"console-line\">División entera: <span class=\"console-number\">3</span></span>\n      <span class=\"console-line\">Módulo: <span class=\"console-number\">1</span></span>\n      <span class=\"console-line\">Potencia: <span class=\"console-number\">1000</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-balance-scale'></i> Operadores de Comparación</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\">x = 5\ny = 10\n\nprint(f\"x == y: {x == y}\")\nprint(f\"x != y: {x != y}\")\nprint(f\"x > y: {x > y}\")\nprint(f\"x < y: {x < y}\")\nprint(f\"x >= 5: {x >= 5}\")\nprint(f\"y <= 10: {y <= 10}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">x == y: <span class=\"console-boolean\">False</span></span>\n      <span class=\"console-line\">x != y: <span class=\"console-boolean\">True</span></span>\n      <span class=\"console-line\">x > y: <span class=\"console-boolean\">False</span></span>\n      <span class=\"console-line\">x < y: <span class=\"console-boolean\">True</span></span>\n      <span class=\"console-line\">x >= 5: <span class=\"console-boolean\">True</span></span>\n      <span class=\"console-line\">y <= 10: <span class=\"console-boolean\">True</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-random'></i> Estructuras de Control</h2>\n\n<h3><i class='fas fa-question'></i> Condicional IF-ELIF-ELSE</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\">edad = 18\n\nif edad >= 18:\n    print(\"Eres mayor de edad\")\nelif edad >= 13:\n    print(\"Eres adolescente\")\nelse:\n    print(\"Eres menor de edad\")\n\n# Condicional en una línea (ternario)\nresultado = \"Mayor\" if edad >= 18 else \"Menor\"\nprint(f\"Resultado: {resultado}\")\n\n# Múltiples condiciones\nnota = 85\n\nif nota >= 90:\n    print(\"Excelente\")\nelif nota >= 80:\n    print(\"Muy bien\")\nelif nota >= 70:\n    print(\"Bien\")\nelif nota >= 60:\n    print(\"Aprobado\")\nelse:\n    print(\"Reprobado\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Eres mayor de edad</span>\n      <span class=\"console-line\">Resultado: Mayor</span>\n      <span class=\"console-line\">Muy bien</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-sync-alt'></i> Bucles (Loops)</h2>\n\n<h3><i class='fas fa-redo'></i> Bucle FOR</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Iterar sobre un rango\nprint(\"Números del 0 al 4:\")\nfor i in range(5):\n    print(i)\n\n# Iterar sobre una lista\nprint(\"\\nFrutas:\")\nfrutas = [\"manzana\", \"banana\", \"naranja\"]\nfor fruta in frutas:\n    print(fruta)\n\n# Iterar con índice\nprint(\"\\nCon índice:\")\nfor i, fruta in enumerate(frutas):\n    print(f\"{i}: {fruta}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Números del 0 al 4:</span>\n      <span class=\"console-line\"><span class=\"console-number\">0</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span></span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">Frutas:</span>\n      <span class=\"console-line\">manzana</span>\n      <span class=\"console-line\">banana</span>\n      <span class=\"console-line\">naranja</span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">Con índice:</span>\n      <span class=\"console-line\"><span class=\"console-number\">0</span>: manzana</span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span>: banana</span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span>: naranja</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-circle-notch'></i> Bucle WHILE</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># While básico\ncontador = 0\nwhile contador < 5:\n    print(f\"Contador: {contador}\")\n    contador += 1\n\nprint(\"Bucle terminado\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Contador: <span class=\"console-number\">0</span></span>\n      <span class=\"console-line\">Contador: <span class=\"console-number\">1</span></span>\n      <span class=\"console-line\">Contador: <span class=\"console-number\">2</span></span>\n      <span class=\"console-line\">Contador: <span class=\"console-number\">3</span></span>\n      <span class=\"console-line\">Contador: <span class=\"console-number\">4</span></span>\n      <span class=\"console-line\">Bucle terminado</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-layer-group'></i> Listas (Arrays)</h2>\n\n<h3><i class='fas fa-list'></i> Creación y Manipulación</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Crear listas\nnumeros = [1, 2, 3, 4, 5]\nfrutas = [\"manzana\", \"banana\", \"naranja\"]\nmixta = [1, \"dos\", 3.0, True, None]\n\nprint(f\"Números: {numeros}\")\nprint(f\"Frutas: {frutas}\")\n\n# Acceder a elementos\nprint(f\"Primera fruta: {frutas[0]}\")\nprint(f\"Última fruta: {frutas[-1]}\")\n\n# Agregar elementos\nfrutas.append(\"pera\")\nprint(f\"Después de append: {frutas}\")\n\n# Slicing\nprimeras_dos = frutas[0:2]\nprint(f\"Primeras dos: {primeras_dos}\")\n\n# Longitud\nprint(f\"Longitud: {len(frutas)}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Números: <span class=\"console-array\">[1, 2, 3, 4, 5]</span></span>\n      <span class=\"console-line\">Frutas: <span class=\"console-array\">['manzana', 'banana', 'naranja']</span></span>\n      <span class=\"console-line\">Primera fruta: <span class=\"console-string\">manzana</span></span>\n      <span class=\"console-line\">Última fruta: <span class=\"console-string\">naranja</span></span>\n      <span class=\"console-line\">Después de append: <span class=\"console-array\">['manzana', 'banana', 'naranja', 'pera']</span></span>\n      <span class=\"console-line\">Primeras dos: <span class=\"console-array\">['manzana', 'banana']</span></span>\n      <span class=\"console-line\">Longitud: <span class=\"console-number\">4</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-copy'></i> List Comprehension</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># List comprehension (más Pythonic)\ncuadrados = [x ** 2 for x in range(10)]\nprint(f\"Cuadrados: {cuadrados}\")\n\n# Con condición\npares = [x for x in range(20) if x % 2 == 0]\nprint(f\"Números pares: {pares}\")\n\n# Transformar lista\nnombres = [\"juan\", \"maría\", \"pedro\"]\nmayusculas = [nombre.upper() for nombre in nombres]\nprint(f\"En mayúsculas: {mayusculas}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Cuadrados: <span class=\"console-array\">[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span>\n      <span class=\"console-line\">Números pares: <span class=\"console-array\">[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</span></span>\n      <span class=\"console-line\">En mayúsculas: <span class=\"console-array\">['JUAN', 'MARÍA', 'PEDRO']</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-book'></i> Diccionarios</h2>\n<p>Los diccionarios almacenan pares clave-valor:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Crear diccionarios\npersona = {\n    \"nombre\": \"Juan\",\n    \"edad\": 25,\n    \"ciudad\": \"Madrid\"\n}\n\nprint(f\"Persona: {persona}\")\n\n# Acceder a valores\nnombre = persona[\"nombre\"]\nprint(f\"Nombre: {nombre}\")\n\n# Agregar o modificar\npersona[\"profesion\"] = \"Ingeniero\"\npersona[\"edad\"] = 26\nprint(f\"Actualizado: {persona}\")\n\n# Verificar existencia\nif \"nombre\" in persona:\n    print(\"Tiene nombre\")\n\n# Iterar\nprint(\"\\nClaves y valores:\")\nfor clave, valor in persona.items():\n    print(f\"{clave}: {valor}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Persona: {'nombre': 'Juan', 'edad': 25, 'ciudad': 'Madrid'}</span>\n      <span class=\"console-line\">Nombre: <span class=\"console-string\">Juan</span></span>\n      <span class=\"console-line\">Actualizado: {'nombre': 'Juan', 'edad': 26, 'ciudad': 'Madrid', 'profesion': 'Ingeniero'}</span>\n      <span class=\"console-line\">Tiene nombre</span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">Claves y valores:</span>\n      <span class=\"console-line\">nombre: Juan</span>\n      <span class=\"console-line\">edad: <span class=\"console-number\">26</span></span>\n      <span class=\"console-line\">ciudad: Madrid</span>\n      <span class=\"console-line\">profesion: Ingeniero</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-cube'></i> Funciones</h2>\n\n<h3><i class='fas fa-code'></i> Definición y Uso</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Función básica\ndef saludar():\n    print(\"¡Hola!\")\n\nsaludar()\n\n# Función con parámetros\ndef saludar_persona(nombre):\n    print(f\"¡Hola, {nombre}!\")\n\nsaludar_persona(\"Juan\")\n\n# Función con retorno\ndef sumar(a, b):\n    return a + b\n\nresultado = sumar(5, 3)\nprint(f\"5 + 3 = {resultado}\")\n\n# Valores por defecto\ndef presentar(nombre, edad, ciudad=\"Desconocida\"):\n    return f\"{nombre}, {edad} años, de {ciudad}\"\n\ninfo1 = presentar(\"Ana\", 25)\ninfo2 = presentar(\"Luis\", 30, \"Madrid\")\nprint(info1)\nprint(info2)</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">¡Hola!</span>\n      <span class=\"console-line\">¡Hola, Juan!</span>\n      <span class=\"console-line\">5 + 3 = <span class=\"console-number\">8</span></span>\n      <span class=\"console-line\">Ana, <span class=\"console-number\">25</span> años, de Desconocida</span>\n      <span class=\"console-line\">Luis, <span class=\"console-number\">30</span> años, de Madrid</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-bolt'></i> Funciones Lambda</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Lambda con múltiples parámetros\nsuma = lambda a, b: a + b\nresultado = suma(5, 3)\nprint(f\"Suma con lambda: {resultado}\")\n\n# Uso con funciones de orden superior\nnumeros = [1, 2, 3, 4, 5]\n\n# map - aplica función a cada elemento\ncuadrados = list(map(lambda x: x ** 2, numeros))\nprint(f\"Cuadrados: {cuadrados}\")\n\n# filter - filtra elementos\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(f\"Pares: {pares}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Suma con lambda: <span class=\"console-number\">8</span></span>\n      <span class=\"console-line\">Cuadrados: <span class=\"console-array\">[1, 4, 9, 16, 25]</span></span>\n      <span class=\"console-line\">Pares: <span class=\"console-array\">[2, 4]</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-object-group'></i> Programación Orientada a Objetos</h2>\n\n<h3><i class='fas fa-cube'></i> Clases y Objetos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Definir una clase\nclass Persona:\n    # Constructor\n    def __init__(self, nombre, edad):\n        self.nombre = nombre\n        self.edad = edad\n    \n    # Métodos\n    def saludar(self):\n        print(f\"Hola, soy {self.nombre} y tengo {self.edad} años\")\n    \n    def cumplir_años(self):\n        self.edad += 1\n        print(f\"¡Feliz cumpleaños! Ahora tengo {self.edad} años\")\n\n# Crear objetos\npersona1 = Persona(\"Ana\", 25)\npersona2 = Persona(\"Luis\", 30)\n\n# Usar métodos\npersona1.saludar()\npersona1.cumplir_años()\npersona2.saludar()</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Hola, soy Ana y tengo <span class=\"console-number\">25</span> años</span>\n      <span class=\"console-line\">¡Feliz cumpleaños! Ahora tengo <span class=\"console-number\">26</span> años</span>\n      <span class=\"console-line\">Hola, soy Luis y tengo <span class=\"console-number\">30</span> años</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-sitemap'></i> Herencia</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Clase padre\nclass Animal:\n    def __init__(self, nombre):\n        self.nombre = nombre\n    \n    def hacer_sonido(self):\n        print(\"El animal hace un sonido\")\n\n# Clase hija\nclass Perro(Animal):\n    def __init__(self, nombre, raza):\n        super().__init__(nombre)\n        self.raza = raza\n    \n    def hacer_sonido(self):\n        print(f\"{self.nombre} ladra: ¡Guau guau!\")\n    \n    def mostrar_info(self):\n        print(f\"Perro: {self.nombre}, Raza: {self.raza}\")\n\n# Crear objeto de clase hija\nmi_perro = Perro(\"Max\", \"Labrador\")\nmi_perro.hacer_sonido()\nmi_perro.mostrar_info()</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Max ladra: ¡Guau guau!</span>\n      <span class=\"console-line\">Perro: Max, Raza: Labrador</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-shield-alt'></i> Manejo de Errores</h2>\n\n<h3><i class='fas fa-exclamation-triangle'></i> Try-Except</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Try-except básico\ntry:\n    numero = 10\n    resultado = numero / 0\nexcept ZeroDivisionError:\n    print(\"Error: No se puede dividir por cero\")\n\n# Múltiples excepciones\ntry:\n    lista = [1, 2, 3]\n    print(lista[10])\nexcept IndexError:\n    print(\"Error: Índice fuera de rango\")\nexcept Exception as e:\n    print(f\"Error inesperado: {e}\")\n\n# Try-except-finally\ntry:\n    x = 5 / 2\n    print(f\"Resultado: {x}\")\nexcept Exception as e:\n    print(f\"Error: {e}\")\nfinally:\n    print(\"Este bloque siempre se ejecuta\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line console-error\">Error: No se puede dividir por cero</span>\n      <span class=\"console-line console-error\">Error: Índice fuera de rango</span>\n      <span class=\"console-line\">Resultado: <span class=\"console-number\">2.5</span></span>\n      <span class=\"console-line\">Este bloque siempre se ejecuta</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-file-alt'></i> Manejo de Archivos</h2>\n\n<h3><i class='fas fa-folder-open'></i> Lectura y Escritura</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Escribir en un archivo\nwith open(\"archivo.txt\", \"w\") as archivo:\n    archivo.write(\"Hola Mundo\\n\")\n    archivo.write(\"Esta es la segunda línea\\n\")\nprint(\"Archivo escrito correctamente\")\n\n# Leer archivo completo\nwith open(\"archivo.txt\", \"r\") as archivo:\n    contenido = archivo.read()\n    print(\"Contenido del archivo:\")\n    print(contenido)\n\n# Leer línea por línea\nprint(\"Leyendo línea por línea:\")\nwith open(\"archivo.txt\", \"r\") as archivo:\n    for linea in archivo:\n        print(linea.strip())\n\n# Agregar al archivo (append)\nwith open(\"archivo.txt\", \"a\") as archivo:\n    archivo.write(\"Nueva línea al final\\n\")\nprint(\"Línea agregada al archivo\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Archivo escrito correctamente</span>\n      <span class=\"console-line\">Contenido del archivo:</span>\n      <span class=\"console-line\">Hola Mundo</span>\n      <span class=\"console-line\">Esta es la segunda línea</span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">Leyendo línea por línea:</span>\n      <span class=\"console-line\">Hola Mundo</span>\n      <span class=\"console-line\">Esta es la segunda línea</span>\n      <span class=\"console-line\">Línea agregada al archivo</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-puzzle-piece'></i> Módulos</h2>\n\n<h3><i class='fas fa-box'></i> Importar Módulos</h3>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Importar módulo completo\nimport math\nresultado = math.sqrt(16)\nprint(f\"Raíz cuadrada de 16: {resultado}\")\nprint(f\"Valor de PI: {math.pi}\")\n\n# Importar funciones específicas\nfrom math import sqrt, pi\nresultado = sqrt(25)\nprint(f\"Raíz cuadrada de 25: {resultado}\")\n\n# Importar con alias\nimport math as m\nresultado = m.pow(2, 3)\nprint(f\"2 elevado a 3: {resultado}\")\n\n# Módulo random\nimport random\nnumero_aleatorio = random.randint(1, 10)\nprint(f\"Número aleatorio entre 1 y 10: {numero_aleatorio}\")\n\nelemento = random.choice([\"a\", \"b\", \"c\"])\nprint(f\"Elemento aleatorio: {elemento}\")\n\n# Módulo datetime\nimport datetime\nahora = datetime.datetime.now()\nprint(f\"Fecha y hora actual: {ahora.strftime('%Y-%m-%d %H:%M:%S')}\")</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Raíz cuadrada de 16: <span class=\"console-number\">4.0</span></span>\n      <span class=\"console-line\">Valor de PI: <span class=\"console-number\">3.141592653589793</span></span>\n      <span class=\"console-line\">Raíz cuadrada de 25: <span class=\"console-number\">5.0</span></span>\n      <span class=\"console-line\">2 elevado a 3: <span class=\"console-number\">8.0</span></span>\n      <span class=\"console-line\">Número aleatorio entre 1 y 10: <span class=\"console-number\">7</span></span>\n      <span class=\"console-line\">Elemento aleatorio: <span class=\"console-string\">b</span></span>\n      <span class=\"console-line\">Fecha y hora actual: 2025-10-25 14:30:45</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Proyecto Completo: Sistema de Tareas</h2>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Consola\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-python\"># Sistema de Gestión de Tareas\n\nclass Tarea:\n    def __init__(self, descripcion, prioridad=\"media\"):\n        self.descripcion = descripcion\n        self.prioridad = prioridad\n        self.completada = False\n    \n    def marcar_completada(self):\n        self.completada = True\n        print(f\"✓ Tarea completada: {self.descripcion}\")\n    \n    def mostrar(self):\n        estado = \"✓\" if self.completada else \"○\"\n        print(f\"{estado} [{self.prioridad.upper()}] {self.descripcion}\")\n\nclass GestorTareas:\n    def __init__(self):\n        self.tareas = []\n    \n    def agregar_tarea(self, descripcion, prioridad=\"media\"):\n        tarea = Tarea(descripcion, prioridad)\n        self.tareas.append(tarea)\n        print(f\"✓ Tarea agregada: {descripcion}\")\n    \n    def mostrar_tareas(self):\n        if not self.tareas:\n            print(\"No hay tareas pendientes\")\n            return\n        \n        print(\"\\n=== LISTA DE TAREAS ===\")\n        for i, tarea in enumerate(self.tareas, 1):\n            print(f\"{i}. \", end=\"\")\n            tarea.mostrar()\n    \n    def completar_tarea(self, indice):\n        if 0 <= indice < len(self.tareas):\n            self.tareas[indice].marcar_completada()\n        else:\n            print(\"Índice inválido\")\n    \n    def mostrar_pendientes(self):\n        print(\"\\n=== TAREAS PENDIENTES ===\")\n        pendientes = [t for t in self.tareas if not t.completada]\n        \n        if not pendientes:\n            print(\"¡No hay tareas pendientes!\")\n        else:\n            for tarea in pendientes:\n                tarea.mostrar()\n\n# Ejemplo de uso\ngestor = GestorTareas()\n\n# Agregar tareas\ngestor.agregar_tarea(\"Estudiar Python\", \"alta\")\ngestor.agregar_tarea(\"Hacer ejercicio\", \"media\")\ngestor.agregar_tarea(\"Leer un libro\", \"baja\")\n\n# Mostrar todas las tareas\ngestor.mostrar_tareas()\n\n# Completar una tarea\nprint(\"\\n--- Completando tarea ---\")\ngestor.completar_tarea(0)\n\n# Mostrar tareas pendientes\ngestor.mostrar_pendientes()</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">✓ Tarea agregada: Estudiar Python</span>\n      <span class=\"console-line\">✓ Tarea agregada: Hacer ejercicio</span>\n      <span class=\"console-line\">✓ Tarea agregada: Leer un libro</span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">=== LISTA DE TAREAS ===</span>\n      <span class=\"console-line\">1. ○ [ALTA] Estudiar Python</span>\n      <span class=\"console-line\">2. ○ [MEDIA] Hacer ejercicio</span>\n      <span class=\"console-line\">3. ○ [BAJA] Leer un libro</span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">--- Completando tarea ---</span>\n      <span class=\"console-line\">✓ Tarea completada: Estudiar Python</span>\n      <span class=\"console-line\"></span>\n      <span class=\"console-line\">=== TAREAS PENDIENTES ===</span>\n      <span class=\"console-line\">○ [MEDIA] Hacer ejercicio</span>\n      <span class=\"console-line\">○ [BAJA] Leer un libro</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-check-circle'></i> Buenas Prácticas en Python</h2>\n<ul>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa nombres descriptivos en snake_case para variables y funciones</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Los nombres de clases usan PascalCase</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Las constantes se escriben en MAYÚSCULAS_CON_GUIONES</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa 4 espacios para indentación (no tabs)</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Limita las líneas a 79 caracteres cuando sea posible</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa docstrings para documentar funciones y clases</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Prefiere list comprehensions cuando sea apropiado</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa f-strings para formatear cadenas (Python 3.6+)</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes a Evitar</h2>\n<ul>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Confundir = (asignación) con == (comparación)</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Olvidar los dos puntos (:) después de if, for, while, def</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Problemas de indentación (mezclar espacios y tabs)</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Modificar una lista mientras se itera sobre ella</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No cerrar archivos (usa siempre with)</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Usar variables globales en exceso</li>\n</ul>\n\n<h2><i class='fas fa-graduation-cap'></i> Ejercicios para Practicar</h2>\n<ul>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea una calculadora con menú de opciones</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Programa que determine si un número es primo</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Sistema de registro de estudiantes con diccionarios</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Juego de piedra, papel o tijera</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Generador de contraseñas aleatorias</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Agenda de contactos con archivos</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Analizador de texto (contar palabras, letras, etc.)</li>\n</ul>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos Finales</h2>\n<ul>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> Practica escribiendo código todos los días</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> Lee código de otros programadores</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> Comenta tu código para entenderlo después</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> No tengas miedo de cometer errores</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> Resuelve problemas reales con Python</li>\n</ul>\n\n<h2><i class='fas fa-road'></i> Próximos Pasos</h2>\n<p>Ahora que conoces los conceptos básicos de Python, puedes continuar aprendiendo sobre <strong>Módulos avanzados (NumPy, Pandas)</strong>, <strong>Desarrollo Web (Django, Flask)</strong>, <strong>Automatización de tareas</strong>, <strong>Análisis de datos</strong>, y <strong>Machine Learning</strong>.</p>\n\n<div style=\"background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%); border-radius: 12px; padding: 20px; margin-top: 20px; text-align: center;\">\n  <h3 style=\"color: white; margin-bottom: 10px;\"><i class='fas fa-trophy'></i> ¡Felicitaciones!</h3>\n  <p style=\"color: white; margin: 0;\">Has completado el tutorial de conceptos básicos de Python. ¡Sigue practicando y construyendo proyectos increíbles!</p>\n</div>",
    "lastUpdated": "2025-10-25T18:48:50.713828"
  },
  "68f80bfef0850f5968c09f53": {
    "title": "Creando tu Primera Página Web",
    "language": "html",
    "level": "principiante",
    "duration": "1.5h",
    "description": "Aprende a crear tu página web personal desde cero paso a paso. Este proyecto práctico te guiará en la construcción de un sitio completo con secciones de presentación, habilidades, proyectos y formulario de contacto usando HTML puro.",
    "content": "<h2><i class='fas fa-rocket'></i> ¡Bienvenido a tu Primera Página Web!</h2>\n<p>En este tutorial aprenderás a crear una <strong>página web personal completa</strong> desde cero. Construiremos juntos un sitio web profesional paso a paso, sin necesidad de conocimientos previos. ¡Empecemos!</p>\n\n<h3><i class='fas fa-bullseye'></i> ¿Qué vamos a crear?</h3>\n<p>Crearemos una página web personal que incluye:</p>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Una sección de bienvenida con tu nombre</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Información sobre ti</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Tus habilidades</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Proyectos o trabajos</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Formulario de contacto</li>\n</ul>\n\n<h2><i class='fas fa-tools'></i> Herramientas que Necesitas</h2>\n<p>Para crear tu página web solo necesitas:</p>\n<ul>\n<li><i class='fas fa-laptop-code' style='color: #3b82f6;'></i> <strong>Un editor de texto:</strong> Notepad (Windows), TextEdit (Mac), o mejor aún: VS Code, Sublime Text o Atom</li>\n<li><i class='fas fa-browser' style='color: #3b82f6;'></i> <strong>Un navegador web:</strong> Chrome, Firefox, Safari o Edge</li>\n<li><i class='fas fa-folder' style='color: #3b82f6;'></i> <strong>Una carpeta:</strong> Para guardar tu proyecto</li>\n</ul>\n\n<h2><i class='fas fa-folder-open'></i> Paso 1: Configurar tu Espacio de Trabajo</h2>\n<p>Antes de comenzar, organicemos nuestro proyecto:</p>\n\n<h3><i class='fas fa-step-forward'></i> Crear la Estructura de Carpetas</h3>\n<pre><code class=\"language-markup\">mi-pagina-web/\n├── index.html\n├── imagenes/\n│   └── (aquí irán tus fotos)\n└── (más adelante agregaremos CSS)</code></pre>\n\n<p><strong>Pasos:</strong></p>\n<ol>\n<li>Crea una carpeta llamada <code>mi-pagina-web</code> en tu escritorio</li>\n<li>Dentro de ella, crea otra carpeta llamada <code>imagenes</code></li>\n<li>Abre tu editor de texto</li>\n<li>Crea un nuevo archivo y guárdalo como <code>index.html</code> dentro de <code>mi-pagina-web</code></li>\n</ol>\n\n<h2><i class='fas fa-code'></i> Paso 2: La Estructura Básica HTML</h2>\n<p>Todo archivo HTML comienza con una estructura básica. Copia este código en tu archivo <code>index.html</code>:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mi Página Personal&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- Aquí irá todo nuestro contenido --&gt;\n    &lt;h1&gt;¡Hola Mundo!&lt;/h1&gt;\n    &lt;p&gt;Esta es mi primera página web&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <h1>¡Hola Mundo!</h1>\n      <p>Esta es mi primera página web</p>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> ¿Qué significa cada parte?</h3>\n<ul>\n<li><code>&lt;!DOCTYPE html&gt;</code> - Le dice al navegador que es HTML5</li>\n<li><code>&lt;html lang=\"es\"&gt;</code> - Indica que el idioma es español</li>\n<li><code>&lt;head&gt;</code> - Contiene información sobre la página (no se ve en pantalla)</li>\n<li><code>&lt;title&gt;</code> - El título que aparece en la pestaña del navegador</li>\n<li><code>&lt;body&gt;</code> - Aquí va todo el contenido visible</li>\n</ul>\n\n<h2><i class='fas fa-heading'></i> Paso 3: Crear el Encabezado (Header)</h2>\n<p>Vamos a crear la primera sección: el encabezado con tu nombre. Agrega esto dentro del <code>&lt;body&gt;</code>:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- ENCABEZADO --&gt;\n&lt;header&gt;\n    &lt;h1&gt;¡Hola! Soy Juan Pérez&lt;/h1&gt;\n    &lt;p&gt;Desarrollador Web en Formación&lt;/p&gt;\n&lt;/header&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <header style=\"text-align: center; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 10px;\">\n        <h1 style=\"margin: 0 0 10px 0; font-size: 2em;\">¡Hola! Soy Juan Pérez</h1>\n        <p style=\"margin: 0; font-size: 1.2em;\">Desarrollador Web en Formación</p>\n      </header>\n    </div>\n  </div>\n</div>\n\n<p><strong>⚠️ Importante:</strong> Reemplaza <code>Juan Pérez</code> con tu nombre real.</p>\n\n<h3><i class='fas fa-eye'></i> ¡Prueba tu Página!</h3>\n<p>Guarda el archivo y ábrelo con tu navegador (doble clic en index.html). ¡Deberías ver tu nombre!</p>\n\n<h2><i class='fas fa-bars'></i> Paso 4: Agregar un Menú de Navegación</h2>\n<p>Ahora vamos a agregar un menú de navegación justo después del encabezado:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- MENÚ DE NAVEGACIÓN --&gt;\n&lt;nav&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"#inicio\"&gt;Inicio&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#sobre-mi\"&gt;Sobre Mí&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#habilidades\"&gt;Habilidades&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#proyectos\"&gt;Proyectos&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#contacto\"&gt;Contacto&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/nav&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <nav style=\"background: #1e293b; padding: 15px; border-radius: 8px;\">\n        <ul style=\"list-style: none; padding: 0; margin: 0; display: flex; gap: 20px; flex-wrap: wrap; justify-content: center;\">\n          <li><a href=\"#inicio\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Inicio</a></li>\n          <li><a href=\"#sobre-mi\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Sobre Mí</a></li>\n          <li><a href=\"#habilidades\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Habilidades</a></li>\n          <li><a href=\"#proyectos\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Proyectos</a></li>\n          <li><a href=\"#contacto\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500;\">Contacto</a></li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</div>\n\n<p>Este menú permitirá navegar entre las diferentes secciones de tu página.</p>\n\n<h2><i class='fas fa-user'></i> Paso 5: Sección \"Sobre Mí\"</h2>\n<p>Ahora crearemos la sección donde hablas sobre ti:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- SECCIÓN SOBRE MÍ --&gt;\n&lt;section id=\"sobre-mi\"&gt;\n    &lt;h2&gt;Sobre Mí&lt;/h2&gt;\n    &lt;img src=\"imagenes/mi-foto.jpg\" alt=\"Mi foto\" width=\"200\"&gt;\n    &lt;p&gt;\n        ¡Hola! Soy un apasionado de la tecnología y estoy aprendiendo \n        desarrollo web. Me encanta crear cosas nuevas y resolver problemas \n        a través del código.\n    &lt;/p&gt;\n    &lt;p&gt;\n        Actualmente estoy estudiando HTML, CSS y JavaScript, y cada día \n        aprendo algo nuevo. Mi objetivo es convertirme en un desarrollador \n        web profesional.\n    &lt;/p&gt;\n&lt;/section&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <section id=\"sobre-mi\" style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <h2 style=\"color: #60a5fa; margin-top: 0;\">Sobre Mí</h2>\n        <div style=\"width: 200px; height: 200px; background: linear-gradient(135deg, #667eea, #764ba2); border-radius: 50%; margin: 20px 0; display: flex; align-items: center; justify-content: center; color: white; font-size: 3em;\">👤</div>\n        <p>\n          ¡Hola! Soy un apasionado de la tecnología y estoy aprendiendo \n          desarrollo web. Me encanta crear cosas nuevas y resolver problemas \n          a través del código.\n        </p>\n        <p>\n          Actualmente estoy estudiando HTML, CSS y JavaScript, y cada día \n          aprendo algo nuevo. Mi objetivo es convertirme en un desarrollador \n          web profesional.\n        </p>\n      </section>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-image'></i> Agregar tu Foto</h3>\n<ol>\n<li>Busca una foto tuya (puede ser cualquier formato: .jpg, .png, etc.)</li>\n<li>Cópiala en la carpeta <code>imagenes</code></li>\n<li>Renómbrala a <code>mi-foto.jpg</code> (o ajusta el nombre en el código)</li>\n</ol>\n\n<p><strong>💡 Consejo:</strong> Si no tienes una foto, puedes usar un avatar temporal o eliminar esa línea por ahora.</p>\n\n<h2><i class='fas fa-star'></i> Paso 6: Sección de Habilidades</h2>\n<p>Muestra las tecnologías que estás aprendiendo:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- SECCIÓN HABILIDADES --&gt;\n&lt;section id=\"habilidades\"&gt;\n    &lt;h2&gt;Mis Habilidades&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;\n            &lt;h3&gt;HTML&lt;/h3&gt;\n            &lt;p&gt;Estructura y contenido de páginas web&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;h3&gt;CSS&lt;/h3&gt;\n            &lt;p&gt;Diseño y estilos visuales&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;h3&gt;JavaScript&lt;/h3&gt;\n            &lt;p&gt;Interactividad y funcionalidad&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;h3&gt;Git&lt;/h3&gt;\n            &lt;p&gt;Control de versiones&lt;/p&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/section&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <section id=\"habilidades\" style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <h2 style=\"color: #60a5fa; margin-top: 0;\">Mis Habilidades</h2>\n        <ul style=\"list-style: none; padding: 0; display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;\">\n          <li style=\"background: #1e293b; padding: 15px; border-radius: 8px; border-left: 3px solid #3b82f6;\">\n            <h3 style=\"color: #22d3ee; margin: 0 0 8px 0; font-size: 1.2em;\">HTML</h3>\n            <p style=\"margin: 0; color: #94a3b8; font-size: 0.9em;\">Estructura y contenido de páginas web</p>\n          </li>\n          <li style=\"background: #1e293b; padding: 15px; border-radius: 8px; border-left: 3px solid #8b5cf6;\">\n            <h3 style=\"color: #22d3ee; margin: 0 0 8px 0; font-size: 1.2em;\">CSS</h3>\n            <p style=\"margin: 0; color: #94a3b8; font-size: 0.9em;\">Diseño y estilos visuales</p>\n          </li>\n          <li style=\"background: #1e293b; padding: 15px; border-radius: 8px; border-left: 3px solid #f59e0b;\">\n            <h3 style=\"color: #22d3ee; margin: 0 0 8px 0; font-size: 1.2em;\">JavaScript</h3>\n            <p style=\"margin: 0; color: #94a3b8; font-size: 0.9em;\">Interactividad y funcionalidad</p>\n          </li>\n          <li style=\"background: #1e293b; padding: 15px; border-radius: 8px; border-left: 3px solid #10b981;\">\n            <h3 style=\"color: #22d3ee; margin: 0 0 8px 0; font-size: 1.2em;\">Git</h3>\n            <p style=\"margin: 0; color: #94a3b8; font-size: 0.9em;\">Control de versiones</p>\n          </li>\n        </ul>\n      </section>\n    </div>\n  </div>\n</div>\n\n<p><strong>✏️ Personaliza:</strong> Agrega, elimina o modifica las habilidades según lo que estés aprendiendo.</p>\n\n<h2><i class='fas fa-folder-open'></i> Paso 7: Sección de Proyectos</h2>\n<p>Muestra los proyectos en los que has trabajado (o en los que trabajarás):</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- SECCIÓN PROYECTOS --&gt;\n&lt;section id=\"proyectos\"&gt;\n    &lt;h2&gt;Mis Proyectos&lt;/h2&gt;\n    \n    &lt;article&gt;\n        &lt;h3&gt;Proyecto 1: Mi Primera Página Web&lt;/h3&gt;\n        &lt;p&gt;\n            Esta es mi primera página web creada desde cero usando HTML puro. \n            Aprendí sobre estructura de documentos, etiquetas semánticas y \n            organización de contenido.\n        &lt;/p&gt;\n        &lt;p&gt;&lt;strong&gt;Tecnologías:&lt;/strong&gt; HTML&lt;/p&gt;\n    &lt;/article&gt;\n\n    &lt;article&gt;\n        &lt;h3&gt;Proyecto 2: Calculadora Simple&lt;/h3&gt;\n        &lt;p&gt;\n            Una calculadora básica que realiza operaciones matemáticas. \n            Mi primer proyecto con JavaScript para practicar lógica de \n            programación.\n        &lt;/p&gt;\n        &lt;p&gt;&lt;strong&gt;Tecnologías:&lt;/strong&gt; HTML, CSS, JavaScript&lt;/p&gt;\n    &lt;/article&gt;\n\n    &lt;article&gt;\n        &lt;h3&gt;Proyecto 3: Lista de Tareas&lt;/h3&gt;\n        &lt;p&gt;\n            Aplicación para gestionar tareas diarias. Permite agregar, \n            marcar como completadas y eliminar tareas.\n        &lt;/p&gt;\n        &lt;p&gt;&lt;strong&gt;Tecnologías:&lt;/strong&gt; HTML, CSS, JavaScript&lt;/p&gt;\n    &lt;/article&gt;\n&lt;/section&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <section id=\"proyectos\" style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <h2 style=\"color: #60a5fa; margin-top: 0;\">Mis Proyectos</h2>\n        \n        <article style=\"background: #1e293b; padding: 20px; border-radius: 8px; margin-bottom: 15px; border-left: 4px solid #3b82f6;\">\n          <h3 style=\"color: #22d3ee; margin-top: 0;\">Proyecto 1: Mi Primera Página Web</h3>\n          <p style=\"color: #cbd5e1;\">\n            Esta es mi primera página web creada desde cero usando HTML puro. \n            Aprendí sobre estructura de documentos, etiquetas semánticas y \n            organización de contenido.\n          </p>\n          <p><strong style=\"color: #60a5fa;\">Tecnologías:</strong> <span style=\"color: #cbd5e1;\">HTML</span></p>\n        </article>\n\n        <article style=\"background: #1e293b; padding: 20px; border-radius: 8px; margin-bottom: 15px; border-left: 4px solid #8b5cf6;\">\n          <h3 style=\"color: #22d3ee; margin-top: 0;\">Proyecto 2: Calculadora Simple</h3>\n          <p style=\"color: #cbd5e1;\">\n            Una calculadora básica que realiza operaciones matemáticas. \n            Mi primer proyecto con JavaScript para practicar lógica de \n            programación.\n          </p>\n          <p><strong style=\"color: #60a5fa;\">Tecnologías:</strong> <span style=\"color: #cbd5e1;\">HTML, CSS, JavaScript</span></p>\n        </article>\n\n        <article style=\"background: #1e293b; padding: 20px; border-radius: 8px; border-left: 4px solid #10b981;\">\n          <h3 style=\"color: #22d3ee; margin-top: 0;\">Proyecto 3: Lista de Tareas</h3>\n          <p style=\"color: #cbd5e1;\">\n            Aplicación para gestionar tareas diarias. Permite agregar, \n            marcar como completadas y eliminar tareas.\n          </p>\n          <p><strong style=\"color: #60a5fa;\">Tecnologías:</strong> <span style=\"color: #cbd5e1;\">HTML, CSS, JavaScript</span></p>\n        </article>\n      </section>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-envelope'></i> Paso 8: Formulario de Contacto</h2>\n<p>Permite que las personas se comuniquen contigo:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- SECCIÓN CONTACTO --&gt;\n&lt;section id=\"contacto\"&gt;\n    &lt;h2&gt;Contáctame&lt;/h2&gt;\n    &lt;p&gt;¿Tienes alguna pregunta o quieres trabajar juntos? ¡Escríbeme!&lt;/p&gt;\n    \n    &lt;form&gt;\n        &lt;div&gt;\n            &lt;label for=\"nombre\"&gt;Nombre:&lt;/label&gt;\n            &lt;input type=\"text\" id=\"nombre\" name=\"nombre\" required&gt;\n        &lt;/div&gt;\n\n        &lt;div&gt;\n            &lt;label for=\"email\"&gt;Email:&lt;/label&gt;\n            &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;\n        &lt;/div&gt;\n\n        &lt;div&gt;\n            &lt;label for=\"mensaje\"&gt;Mensaje:&lt;/label&gt;\n            &lt;textarea id=\"mensaje\" name=\"mensaje\" rows=\"5\" required&gt;&lt;/textarea&gt;\n        &lt;/div&gt;\n\n        &lt;button type=\"submit\"&gt;Enviar Mensaje&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/section&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <section id=\"contacto\" style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <h2 style=\"color: #60a5fa; margin-top: 0;\">Contáctame</h2>\n        <p>¿Tienes alguna pregunta o quieres trabajar juntos? ¡Escríbeme!</p>\n        \n        <form style=\"display: flex; flex-direction: column; gap: 15px; max-width: 500px;\">\n          <div style=\"display: flex; flex-direction: column; gap: 5px;\">\n            <label for=\"nombre\" style=\"color: #94a3b8; font-weight: 600;\">Nombre:</label>\n            <input type=\"text\" id=\"nombre\" required style=\"padding: 10px; border: 1px solid #475569; border-radius: 6px; background: #1e293b; color: #cbd5e1;\">\n          </div>\n\n          <div style=\"display: flex; flex-direction: column; gap: 5px;\">\n            <label for=\"email\" style=\"color: #94a3b8; font-weight: 600;\">Email:</label>\n            <input type=\"email\" id=\"email\" required style=\"padding: 10px; border: 1px solid #475569; border-radius: 6px; background: #1e293b; color: #cbd5e1;\">\n          </div>\n\n          <div style=\"display: flex; flex-direction: column; gap: 5px;\">\n            <label for=\"mensaje\" style=\"color: #94a3b8; font-weight: 600;\">Mensaje:</label>\n            <textarea id=\"mensaje\" rows=\"5\" required style=\"padding: 10px; border: 1px solid #475569; border-radius: 6px; background: #1e293b; color: #cbd5e1; resize: vertical;\"></textarea>\n          </div>\n\n          <button type=\"submit\" style=\"padding: 12px 24px; background: linear-gradient(135deg, #3b82f6, #2563eb); color: white; border: none; border-radius: 8px; font-weight: 600; cursor: pointer; transition: all 0.3s;\">Enviar Mensaje</button>\n        </form>\n      </section>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Nota sobre el Formulario</h3>\n<p>Este formulario es solo la estructura HTML. Para que realmente envíe mensajes, necesitarás agregar funcionalidad con JavaScript o un servicio backend. Por ahora, aprende la estructura básica.</p>\n\n<h2><i class='fas fa-paint-brush'></i> Paso 9: Agregar el Pie de Página (Footer)</h2>\n<p>Finalmente, vamos a agregar un pie de página con información adicional:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- PIE DE PÁGINA --&gt;\n&lt;footer&gt;\n    &lt;p&gt;© 2025 Juan Pérez. Todos los derechos reservados.&lt;/p&gt;\n    &lt;div&gt;\n        &lt;a href=\"https://github.com/tuusuario\"&gt;GitHub&lt;/a&gt;\n        &lt;a href=\"https://linkedin.com/in/tuusuario\"&gt;LinkedIn&lt;/a&gt;\n        &lt;a href=\"https://twitter.com/tuusuario\"&gt;Twitter&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/footer&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <footer style=\"background: linear-gradient(135deg, #1e293b, #0f172a); padding: 30px; border-radius: 8px; text-align: center; border-top: 2px solid #3b82f6;\">\n        <p style=\"margin: 0 0 15px 0;\">© 2025 Juan Pérez. Todos los derechos reservados.</p>\n        <div style=\"display: flex; gap: 20px; justify-content: center; flex-wrap: wrap;\">\n          <a href=\"https://github.com/tuusuario\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500; transition: color 0.3s;\">GitHub</a>\n          <a href=\"https://linkedin.com/in/tuusuario\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500; transition: color 0.3s;\">LinkedIn</a>\n          <a href=\"https://twitter.com/tuusuario\" style=\"color: #60a5fa; text-decoration: none; font-weight: 500; transition: color 0.3s;\">Twitter</a>\n        </div>\n      </footer>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-file-code'></i> Paso 10: Código Completo</h2>\n<p>Aquí está el código completo de tu primera página web. Copia todo esto en tu archivo <code>index.html</code>:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mi Página Personal&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- ENCABEZADO --&gt;\n    &lt;header&gt;\n        &lt;h1&gt;¡Hola! Soy Juan Pérez&lt;/h1&gt;\n        &lt;p&gt;Desarrollador Web en Formación&lt;/p&gt;\n    &lt;/header&gt;\n\n    &lt;!-- MENÚ DE NAVEGACIÓN --&gt;\n    &lt;nav&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"#inicio\"&gt;Inicio&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#sobre-mi\"&gt;Sobre Mí&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#habilidades\"&gt;Habilidades&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#proyectos\"&gt;Proyectos&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#contacto\"&gt;Contacto&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/nav&gt;\n\n    &lt;!-- SECCIÓN SOBRE MÍ --&gt;\n    &lt;section id=\"sobre-mi\"&gt;\n        &lt;h2&gt;Sobre Mí&lt;/h2&gt;\n        &lt;img src=\"imagenes/mi-foto.jpg\" alt=\"Mi foto\" width=\"200\"&gt;\n        &lt;p&gt;\n            ¡Hola! Soy un apasionado de la tecnología y estoy aprendiendo \n            desarrollo web. Me encanta crear cosas nuevas y resolver problemas \n            a través del código.\n        &lt;/p&gt;\n        &lt;p&gt;\n            Actualmente estoy estudiando HTML, CSS y JavaScript, y cada día \n            aprendo algo nuevo. Mi objetivo es convertirme en un desarrollador \n            web profesional.\n        &lt;/p&gt;\n    &lt;/section&gt;\n\n    &lt;!-- SECCIÓN HABILIDADES --&gt;\n    &lt;section id=\"habilidades\"&gt;\n        &lt;h2&gt;Mis Habilidades&lt;/h2&gt;\n        &lt;ul&gt;\n            &lt;li&gt;\n                &lt;h3&gt;HTML&lt;/h3&gt;\n                &lt;p&gt;Estructura y contenido de páginas web&lt;/p&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;h3&gt;CSS&lt;/h3&gt;\n                &lt;p&gt;Diseño y estilos visuales&lt;/p&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;h3&gt;JavaScript&lt;/h3&gt;\n                &lt;p&gt;Interactividad y funcionalidad&lt;/p&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;h3&gt;Git&lt;/h3&gt;\n                &lt;p&gt;Control de versiones&lt;/p&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/section&gt;\n\n    &lt;!-- SECCIÓN PROYECTOS --&gt;\n    &lt;section id=\"proyectos\"&gt;\n        &lt;h2&gt;Mis Proyectos&lt;/h2&gt;\n        \n        &lt;article&gt;\n            &lt;h3&gt;Proyecto 1: Mi Primera Página Web&lt;/h3&gt;\n            &lt;p&gt;\n                Esta es mi primera página web creada desde cero usando HTML puro. \n                Aprendí sobre estructura de documentos, etiquetas semánticas y \n                organización de contenido.\n            &lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Tecnologías:&lt;/strong&gt; HTML&lt;/p&gt;\n        &lt;/article&gt;\n\n        &lt;article&gt;\n            &lt;h3&gt;Proyecto 2: Calculadora Simple&lt;/h3&gt;\n            &lt;p&gt;\n                Una calculadora básica que realiza operaciones matemáticas. \n                Mi primer proyecto con JavaScript para practicar lógica de \n                programación.\n            &lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Tecnologías:&lt;/strong&gt; HTML, CSS, JavaScript&lt;/p&gt;\n        &lt;/article&gt;\n\n        &lt;article&gt;\n            &lt;h3&gt;Proyecto 3: Lista de Tareas&lt;/h3&gt;\n            &lt;p&gt;\n                Aplicación para gestionar tareas diarias. Permite agregar, \n                marcar como completadas y eliminar tareas.\n            &lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Tecnologías:&lt;/strong&gt; HTML, CSS, JavaScript&lt;/p&gt;\n        &lt;/article&gt;\n    &lt;/section&gt;\n\n    &lt;!-- SECCIÓN CONTACTO --&gt;\n    &lt;section id=\"contacto\"&gt;\n        &lt;h2&gt;Contáctame&lt;/h2&gt;\n        &lt;p&gt;¿Tienes alguna pregunta o quieres trabajar juntos? ¡Escríbeme!&lt;/p&gt;\n        \n        &lt;form&gt;\n            &lt;div&gt;\n                &lt;label for=\"nombre\"&gt;Nombre:&lt;/label&gt;\n                &lt;input type=\"text\" id=\"nombre\" name=\"nombre\" required&gt;\n            &lt;/div&gt;\n\n            &lt;div&gt;\n                &lt;label for=\"email\"&gt;Email:&lt;/label&gt;\n                &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;\n            &lt;/div&gt;\n\n            &lt;div&gt;\n                &lt;label for=\"mensaje\"&gt;Mensaje:&lt;/label&gt;\n                &lt;textarea id=\"mensaje\" name=\"mensaje\" rows=\"5\" required&gt;&lt;/textarea&gt;\n            &lt;/div&gt;\n\n            &lt;button type=\"submit\"&gt;Enviar Mensaje&lt;/button&gt;\n        &lt;/form&gt;\n    &lt;/section&gt;\n\n    &lt;!-- PIE DE PÁGINA --&gt;\n    &lt;footer&gt;\n        &lt;p&gt;© 2025 Juan Pérez. Todos los derechos reservados.&lt;/p&gt;\n        &lt;div&gt;\n            &lt;a href=\"https://github.com/tuusuario\"&gt;GitHub&lt;/a&gt;\n            &lt;a href=\"https://linkedin.com/in/tuusuario\"&gt;LinkedIn&lt;/a&gt;\n            &lt;a href=\"https://twitter.com/tuusuario\"&gt;Twitter&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-magic'></i> Paso 11: Mejoras con CSS (Próximo Paso)</h2>\n<p>Tu página web ya está completa en HTML, pero se ve muy simple. El siguiente paso es agregar CSS para darle estilo. Aquí hay un ejemplo básico:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código CSS\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-css\">/* Agrega esto en la sección &lt;head&gt; dentro de &lt;style&gt;&lt;/style&gt; */\n\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n}\n\nheader {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    text-align: center;\n    padding: 2rem;\n}\n\nnav {\n    background-color: #333;\n    padding: 1rem;\n}\n\nnav ul {\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    gap: 2rem;\n    margin: 0;\n    padding: 0;\n}\n\nnav a {\n    color: white;\n    text-decoration: none;\n    font-weight: bold;\n}\n\nnav a:hover {\n    color: #667eea;\n}\n\nsection {\n    max-width: 800px;\n    margin: 2rem auto;\n    padding: 2rem;\n    background: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\nfooter {\n    background-color: #333;\n    color: white;\n    text-align: center;\n    padding: 2rem;\n    margin-top: 3rem;\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-trophy'></i> ¡Felicitaciones!</h2>\n<p>Has completado tu primera página web. Ahora tienes:</p>\n<ul>\n<li><i class='fas fa-check-circle' style='color: #10b981;'></i> Una estructura HTML completa y semántica</li>\n<li><i class='fas fa-check-circle' style='color: #10b981;'></i> Un menú de navegación funcional</li>\n<li><i class='fas fa-check-circle' style='color: #10b981;'></i> Múltiples secciones con contenido</li>\n<li><i class='fas fa-check-circle' style='color: #10b981;'></i> Un formulario de contacto</li>\n<li><i class='fas fa-check-circle' style='color: #10b981;'></i> Enlaces a redes sociales</li>\n</ul>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos Finales</h2>\n<ul>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Practica modificando el código:</strong> Cambia textos, colores y estructura para entender cómo funciona</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Aprende CSS:</strong> Es el siguiente paso natural para hacer tu página visualmente atractiva</li>\n\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Sube tu página a Internet:</strong> Aprende sobre GitHub Pages o Netlify para publicar tu sitio</li>\n<li><i class='fas fa-arrow-right' style='color: #3b82f6;'></i> <strong>Sigue aprendiendo:</strong> HTML es solo el comienzo de tu viaje como desarrollador web</li>\n</ul>\n\n<h2><i class='fas fa-question-circle'></i> Preguntas Frecuentes</h2>\n\n<h3><i class='fas fa-question'></i> ¿Por qué mi página se ve sin estilos?</h3>\n<p>Es normal. HTML solo estructura el contenido. Necesitas CSS para darle estilo. Por ahora, enfócate en entender la estructura.</p>\n\n<h3><i class='fas fa-question'></i> ¿El formulario envía correos?</h3>\n<p>No por sí solo. Necesitarás JavaScript y un servicio backend o una herramienta como Formspree para que funcione completamente.</p>\n\n<h3><i class='fas fa-question'></i> ¿Puedo agregar más secciones?</h3>\n<p>¡Por supuesto! Puedes agregar secciones de educación, certificaciones, hobbies, o cualquier cosa que quieras mostrar.</p>\n\n<h3><i class='fas fa-question'></i> ¿Cómo subo mi página a Internet?</h3>\n<p>Existen varias opciones gratuitas como GitHub Pages, Netlify o Vercel. Aprenderás sobre esto en tutoriales más avanzados.</p>\n\n<h2><i class='fas fa-rocket'></i> Próximos Pasos</h2>\n<p>Ahora que completaste tu primera página web, aquí están los siguientes pasos recomendados:</p>\n<ol>\n<li><strong>Aprende CSS:</strong> Dale estilo a tu página con colores, fuentes y diseños modernos</li>\n<li><strong>Aprende CSS Responsive:</strong> Haz que tu página se vea bien en móviles y tablets</li>\n<li><strong>Aprende JavaScript:</strong> Agrega interactividad como animaciones y validación de formularios</li>\n<li><strong>Aprende Git:</strong> Controla las versiones de tu código y colabora con otros</li>\n<li><strong>Crea más proyectos:</strong> La práctica es la mejor forma de aprender</li>\n</ol>\n\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; text-align: center; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-trophy'></i> ¡Felicitaciones!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has completado tu primera página web completa. ¡Sigue practicando y nunca dejes de aprender!</p>\n</div>",
    "lastUpdated": "2025-10-25T19:22:23.921185"
  },
  "68f80ca4f0850f5968c09f54": {
    "title": "2.Conceptos Básicos de CSS",
    "language": "css",
    "level": "principiante",
    "duration": "2h",
    "description": "Domina CSS desde cero. Aprende a dar estilo a tus páginas web con colores, fuentes, espaciado, fondos, Flexbox, posicionamiento, transiciones y diseño responsive. Incluye proyecto práctico de tarjeta de perfil.",
    "content": "<h2><i class='fas fa-paint-brush'></i> Introducción a CSS</h2>\n<p>CSS (Cascading Style Sheets) es el lenguaje que usamos para dar <strong>estilo y diseño</strong> a nuestras páginas web. Si HTML es el esqueleto, CSS es la piel, ropa y maquillaje que hace que todo se vea increíble.</p>\n\n<h3><i class='fas fa-question-circle'></i> ¿Qué es CSS?</h3>\n<p>CSS es un lenguaje de <strong>hojas de estilo</strong> que describe cómo se deben mostrar los elementos HTML. Con CSS puedes controlar colores, fuentes, espaciado, posicionamiento, animaciones y mucho más.</p>\n\n<h2><i class='fas fa-star'></i> ¿Por qué aprender CSS?</h2>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Diseño visual:</strong> Crea páginas atractivas y profesionales</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Separación de contenido y diseño:</strong> HTML para estructura, CSS para estilo</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Responsive Design:</strong> Adapta tu sitio a diferentes dispositivos</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Animaciones:</strong> Da vida a tus páginas web</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> <strong>Fundamental:</strong> Base para frameworks como Bootstrap, Tailwind</li>\n</ul>\n\n<h2><i class='fas fa-code'></i> Formas de Agregar CSS</h2>\n<p>Existen tres formas principales de agregar CSS a tu HTML:</p>\n\n<h3><i class='fas fa-1'></i> CSS Inline (En línea)</h3>\n<p>Se escribe directamente en el atributo <code>style</code> de un elemento HTML:</p>\n\n<pre><code>&lt;p style=\"color: blue; font-size: 20px;\"&gt;Texto azul&lt;/p&gt;\n\n&lt;h1 style=\"background-color: yellow;\"&gt;Título con fondo amarillo&lt;/h1&gt;</code></pre>\n\n<p><strong>❌ No recomendado:</strong> Difícil de mantener y reutilizar.</p>\n\n<h3><i class='fas fa-2'></i> CSS Interno (En el &lt;head&gt;)</h3>\n<p>Se escribe dentro de una etiqueta <code>&lt;style&gt;</code> en el <code>&lt;head&gt;</code> del HTML:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;style&gt;\n        p {\n            color: blue;\n            font-size: 20px;\n        }\n        \n        h1 {\n            background-color: yellow;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Mi título&lt;/h1&gt;\n    &lt;p&gt;Mi párrafo&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>⚠️ Uso limitado:</strong> Mejor para páginas pequeñas o ejemplos.</p>\n\n<h3><i class='fas fa-3'></i> CSS Externo (Archivo separado) ✅ RECOMENDADO</h3>\n<p>Se crea un archivo <code>.css</code> separado y se enlaza al HTML:</p>\n\n<pre><code>&lt;!-- En tu archivo HTML --&gt;\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" href=\"estilos.css\"&gt;\n&lt;/head&gt;</code></pre>\n\n<pre><code>/* En tu archivo estilos.css */\np {\n    color: blue;\n    font-size: 20px;\n}\n\nh1 {\n    background-color: yellow;\n}</code></pre>\n\n<p><strong>✅ Ventajas:</strong> Fácil de mantener, reutilizable, organizado.</p>\n\n<h2><i class='fas fa-magic'></i> Sintaxis Básica de CSS</h2>\n<p>La sintaxis de CSS sigue este patrón:</p>\n\n<pre><code>selector {\n    propiedad: valor;\n    propiedad: valor;\n}</code></pre>\n\n<h3><i class='fas fa-info-circle'></i> Ejemplo explicado:</h3>\n<pre><code>p {\n    color: red;\n    font-size: 16px;\n    text-align: center;\n}</code></pre>\n\n<ul>\n<li><code>p</code> → <strong>Selector:</strong> Selecciona todos los elementos <code>&lt;p&gt;</code></li>\n<li><code>color</code> → <strong>Propiedad:</strong> Qué quieres cambiar</li>\n<li><code>red</code> → <strong>Valor:</strong> Cómo quieres que se vea</li>\n<li><code>;</code> → <strong>Punto y coma:</strong> Separa cada declaración</li>\n</ul>\n\n<h2><i class='fas fa-bullseye'></i> Selectores CSS</h2>\n\n<h3><i class='fas fa-tag'></i> Selector de Elemento</h3>\n<p>Selecciona todos los elementos de un tipo:</p>\n\n<pre><code>/* Todos los párrafos */\np {\n    color: blue;\n}\n\n/* Todos los títulos h1 */\nh1 {\n    font-size: 32px;\n}\n\n/* Todos los enlaces */\na {\n    text-decoration: none;\n}</code></pre>\n\n<h3><i class='fas fa-hashtag'></i> Selector de ID</h3>\n<p>Selecciona un elemento específico con un ID único (usa <code>#</code>):</p>\n\n<pre><code>/* HTML */\n&lt;div id=\"encabezado\"&gt;Contenido&lt;/div&gt;\n\n/* CSS */\n#encabezado {\n    background-color: navy;\n    color: white;\n}</code></pre>\n\n<p><strong>⚠️ Importante:</strong> Los IDs deben ser únicos, solo un elemento puede tener ese ID.</p>\n\n<h3><i class='fas fa-dot-circle'></i> Selector de Clase</h3>\n<p>Selecciona elementos con una clase específica (usa <code>.</code>):</p>\n\n<pre><code>/* HTML */\n&lt;p class=\"destacado\"&gt;Texto importante&lt;/p&gt;\n&lt;p class=\"destacado\"&gt;Otro texto importante&lt;/p&gt;\n\n/* CSS */\n.destacado {\n    background-color: yellow;\n    font-weight: bold;\n}</code></pre>\n\n<p><strong>✅ Ventaja:</strong> Las clases son reutilizables, múltiples elementos pueden tener la misma clase.</p>\n\n<h3><i class='fas fa-layer-group'></i> Selectores Combinados</h3>\n<pre><code>/* Elemento con clase específica */\np.destacado {\n    color: red;\n}\n\n/* Múltiples selectores (aplica a ambos) */\nh1, h2, h3 {\n    font-family: Arial;\n}\n\n/* Selector descendiente (p dentro de div) */\ndiv p {\n    margin: 10px;\n}\n\n/* Selector hijo directo */\ndiv &gt; p {\n    padding: 5px;\n}</code></pre>\n\n<h3><i class='fas fa-star'></i> Selector Universal</h3>\n<p>Selecciona todos los elementos:</p>\n\n<pre><code>* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}</code></pre>\n\n<h2><i class='fas fa-palette'></i> Colores en CSS</h2>\n\n<h3><i class='fas fa-tint'></i> Formas de Especificar Colores</h3>\n<pre><code>/* Nombres de colores (140 disponibles) */\ncolor: red;\ncolor: blue;\ncolor: green;\n\n/* Hexadecimal (más común) */\ncolor: #FF0000;  /* Rojo */\ncolor: #00FF00;  /* Verde */\ncolor: #0000FF;  /* Azul */\ncolor: #FFF;     /* Blanco (forma corta) */\n\n/* RGB (Red, Green, Blue) */\ncolor: rgb(255, 0, 0);    /* Rojo */\ncolor: rgb(0, 255, 0);    /* Verde */\n\n/* RGBA (con transparencia) */\ncolor: rgba(255, 0, 0, 0.5);  /* Rojo semi-transparente */\n\n/* HSL (Hue, Saturation, Lightness) */\ncolor: hsl(0, 100%, 50%);     /* Rojo */</code></pre>\n\n<h3><i class='fas fa-fill-drip'></i> Propiedades de Color</h3>\n<pre><code>.ejemplo {\n    color: #333;              /* Color del texto */\n    background-color: #f0f0f0; /* Color de fondo */\n    border-color: blue;       /* Color del borde */\n}</code></pre>\n\n<h2><i class='fas fa-font'></i> Tipografía y Texto</h2>\n\n<h3><i class='fas fa-text-height'></i> Propiedades de Fuente</h3>\n<pre><code>p {\n    /* Familia de fuente */\n    font-family: Arial, sans-serif;\n    \n    /* Tamaño de fuente */\n    font-size: 16px;        /* Píxeles */\n    font-size: 1.5em;       /* Relativo al padre */\n    font-size: 1rem;        /* Relativo a la raíz */\n    \n    /* Peso de fuente */\n    font-weight: normal;    /* 400 */\n    font-weight: bold;      /* 700 */\n    font-weight: 600;       /* Números 100-900 */\n    \n    /* Estilo de fuente */\n    font-style: normal;\n    font-style: italic;\n    \n    /* Variante */\n    font-variant: small-caps;\n}</code></pre>\n\n<h3><i class='fas fa-align-left'></i> Propiedades de Texto</h3>\n<pre><code>p {\n    /* Alineación */\n    text-align: left;\n    text-align: center;\n    text-align: right;\n    text-align: justify;\n    \n    /* Decoración */\n    text-decoration: none;\n    text-decoration: underline;\n    text-decoration: line-through;\n    \n    /* Transformación */\n    text-transform: uppercase;   /* MAYÚSCULAS */\n    text-transform: lowercase;   /* minúsculas */\n    text-transform: capitalize;  /* Primera Letra */\n    \n    /* Espaciado */\n    letter-spacing: 2px;    /* Entre letras */\n    word-spacing: 5px;      /* Entre palabras */\n    line-height: 1.5;       /* Altura de línea */\n    \n    /* Sangría */\n    text-indent: 30px;\n}</code></pre>\n\n<h3><i class='fas fa-google'></i> Importar Fuentes de Google Fonts</h3>\n<pre><code>&lt;!-- En el HTML &lt;head&gt; --&gt;\n&lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"&gt;\n\n/* En el CSS */\nbody {\n    font-family: 'Roboto', sans-serif;\n}</code></pre>\n\n<h2><i class='fas fa-box'></i> Modelo de Caja (Box Model)</h2>\n<p>El modelo de caja es fundamental en CSS. Cada elemento HTML es una caja con:</p>\n\n<pre><code>div {\n    /* Contenido */\n    width: 300px;\n    height: 200px;\n    \n    /* Relleno interior (Padding) */\n    padding: 20px;                    /* Todos los lados */\n    padding: 10px 20px;               /* Vertical | Horizontal */\n    padding: 10px 20px 15px 25px;    /* Arriba | Derecha | Abajo | Izquierda */\n    padding-top: 10px;\n    padding-right: 20px;\n    padding-bottom: 15px;\n    padding-left: 25px;\n    \n    /* Borde (Border) */\n    border: 2px solid black;          /* Ancho | Estilo | Color */\n    border-width: 3px;\n    border-style: solid;              /* solid, dashed, dotted, double */\n    border-color: red;\n    border-radius: 10px;              /* Bordes redondeados */\n    \n    /* Margen exterior (Margin) */\n    margin: 20px;                     /* Todos los lados */\n    margin: 10px auto;                /* Vertical | Horizontal (auto centra) */\n    margin-top: 10px;\n    margin-right: auto;\n    margin-bottom: 15px;\n    margin-left: auto;\n}</code></pre>\n\n<h3><i class='fas fa-info-circle'></i> Visualización del Box Model</h3>\n<pre><code>/*\n┌─────────────────────────────────┐\n│         Margin (externo)        │\n│  ┌───────────────────────────┐  │\n│  │      Border (borde)       │  │\n│  │  ┌─────────────────────┐  │  │\n│  │  │  Padding (relleno)  │  │  │\n│  │  │  ┌───────────────┐  │  │  │\n│  │  │  │   Contenido   │  │  │  │\n│  │  │  │ (width/height)│  │  │  │\n│  │  │  └───────────────┘  │  │  │\n│  │  └─────────────────────┘  │  │\n│  └───────────────────────────┘  │\n└─────────────────────────────────┘\n*/</code></pre>\n\n<h3><i class='fas fa-wrench'></i> Box-Sizing</h3>\n<pre><code>/* Recomendado: incluir padding y border en el tamaño total */\n* {\n    box-sizing: border-box;\n}\n\n/* Ahora width incluye padding y border */\ndiv {\n    width: 300px;      /* Tamaño total será 300px */\n    padding: 20px;     /* No suma al width */\n    border: 5px solid; /* No suma al width */\n}</code></pre>\n\n<h2><i class='fas fa-fill'></i> Fondos (Backgrounds)</h2>\n\n<h3><i class='fas fa-image'></i> Propiedades de Fondo</h3>\n<pre><code>div {\n    /* Color de fondo */\n    background-color: #f0f0f0;\n    \n    /* Imagen de fondo */\n    background-image: url('imagen.jpg');\n    \n    /* Repetición */\n    background-repeat: no-repeat;  /* no-repeat, repeat, repeat-x, repeat-y */\n    \n    /* Posición */\n    background-position: center;   /* center, top, bottom, left, right */\n    background-position: 50% 50%;  /* X Y en porcentaje */\n    \n    /* Tamaño */\n    background-size: cover;        /* Cubre todo el contenedor */\n    background-size: contain;      /* Se ajusta dentro */\n    background-size: 100px 200px;  /* Tamaño específico */\n    \n    /* Fijo o scroll */\n    background-attachment: fixed;  /* fixed, scroll */\n}\n\n/* Forma abreviada (shorthand) */\ndiv {\n    background: #f0f0f0 url('imagen.jpg') no-repeat center/cover;\n}\n\n/* Múltiples fondos */\ndiv {\n    background: \n        url('imagen1.png') no-repeat top right,\n        url('imagen2.png') no-repeat bottom left,\n        linear-gradient(to bottom, #fff, #000);\n}</code></pre>\n\n<h3><i class='fas fa-fill-drip'></i> Gradientes</h3>\n<pre><code>/* Gradiente lineal */\nbackground: linear-gradient(to right, red, yellow);\nbackground: linear-gradient(45deg, blue, green);\nbackground: linear-gradient(to bottom, #667eea 0%, #764ba2 100%);\n\n/* Gradiente radial */\nbackground: radial-gradient(circle, yellow, orange, red);\nbackground: radial-gradient(ellipse at top, white, blue);</code></pre>\n\n<h2><i class='fas fa-border-style'></i> Bordes Avanzados</h2>\n\n<pre><code>div {\n    /* Bordes individuales */\n    border-top: 3px solid red;\n    border-right: 2px dashed blue;\n    border-bottom: 1px dotted green;\n    border-left: 4px double orange;\n    \n    /* Bordes redondeados */\n    border-radius: 10px;                    /* Todas las esquinas */\n    border-radius: 10px 20px;               /* Superior-izq/inf-der | Superior-der/inf-izq */\n    border-radius: 10px 20px 30px 40px;    /* Sentido horario desde arriba-izq */\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n    border-bottom-right-radius: 15px;\n    border-bottom-left-radius: 15px;\n    \n    /* Círculo perfecto */\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n}\n\n/* Sombras de caja */\ndiv {\n    /* box-shadow: x y desenfoque expansión color */\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    \n    /* Múltiples sombras */\n    box-shadow: \n        0 2px 4px rgba(0, 0, 0, 0.1),\n        0 8px 16px rgba(0, 0, 0, 0.1);\n    \n    /* Sombra interior */\n    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n/* Sombras de texto */\nh1 {\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n    text-shadow: 0 0 10px #fff, 0 0 20px #fff; /* Efecto neón */\n}</code></pre>\n\n<h2><i class='fas fa-arrows-alt'></i> Display y Posicionamiento</h2>\n\n<h3><i class='fas fa-eye'></i> Propiedad Display</h3>\n<pre><code>/* Block - Ocupa todo el ancho disponible */\ndiv {\n    display: block;\n}\n\n/* Inline - Solo ocupa el espacio de su contenido */\nspan {\n    display: inline;\n}\n\n/* Inline-block - Mezcla de ambos */\ndiv {\n    display: inline-block;\n    width: 200px;  /* Ahora acepta width y height */\n}\n\n/* None - Oculta el elemento */\ndiv {\n    display: none;\n}\n\n/* Flex - Layout flexible (muy usado) */\n.contenedor {\n    display: flex;\n}\n\n/* Grid - Layout en cuadrícula */\n.contenedor {\n    display: grid;\n}</code></pre>\n\n<h3><i class='fas fa-map-marker-alt'></i> Posicionamiento</h3>\n<pre><code>/* Static - Posición normal (por defecto) */\ndiv {\n    position: static;\n}\n\n/* Relative - Relativo a su posición original */\ndiv {\n    position: relative;\n    top: 20px;     /* Se mueve 20px hacia abajo */\n    left: 30px;    /* Se mueve 30px hacia la derecha */\n}\n\n/* Absolute - Relativo al ancestro posicionado más cercano */\ndiv {\n    position: absolute;\n    top: 0;\n    right: 0;      /* Esquina superior derecha del padre */\n}\n\n/* Fixed - Fijo respecto a la ventana del navegador */\nnav {\n    position: fixed;\n    top: 0;\n    width: 100%;   /* Menú fijo en la parte superior */\n}\n\n/* Sticky - Mezcla de relative y fixed */\nheader {\n    position: sticky;\n    top: 0;        /* Se queda fijo cuando llegas a ese punto */\n}\n\n/* Z-index - Control de capas (quién está encima) */\ndiv {\n    position: relative;\n    z-index: 10;   /* Mayor número = más arriba */\n}</code></pre>\n\n<h2><i class='fas fa-eye-slash'></i> Visibilidad y Opacidad</h2>\n\n<pre><code>/* Ocultar elemento (mantiene el espacio) */\ndiv {\n    visibility: hidden;\n}\n\n/* Ocultar elemento (no ocupa espacio) */\ndiv {\n    display: none;\n}\n\n/* Opacidad (0 = transparente, 1 = opaco) */\ndiv {\n    opacity: 0.5;\n}\n\n/* Overflow - Qué hacer con contenido que se desborda */\ndiv {\n    overflow: visible;  /* Se desborda (por defecto) */\n    overflow: hidden;   /* Oculta lo que se desborda */\n    overflow: scroll;   /* Siempre muestra scrollbar */\n    overflow: auto;     /* Scrollbar solo si es necesario */\n}\n\n/* Overflow por eje */\ndiv {\n    overflow-x: hidden;\n    overflow-y: auto;\n}</code></pre>\n\n<h2><i class='fas fa-list'></i> Listas</h2>\n\n<pre><code>ul {\n    /* Estilo de viñeta */\n    list-style-type: disc;     /* •  Por defecto */\n    list-style-type: circle;   /* ○ */\n    list-style-type: square;   /* ■ */\n    list-style-type: none;     /* Sin viñeta */\n}\n\nol {\n    /* Estilo de numeración */\n    list-style-type: decimal;        /* 1, 2, 3... */\n    list-style-type: lower-alpha;    /* a, b, c... */\n    list-style-type: upper-alpha;    /* A, B, C... */\n    list-style-type: lower-roman;    /* i, ii, iii... */\n    list-style-type: upper-roman;    /* I, II, III... */\n}\n\n/* Posición de la viñeta */\nul {\n    list-style-position: inside;   /* Viñeta dentro */\n    list-style-position: outside;  /* Viñeta fuera (por defecto) */\n}\n\n/* Imagen personalizada como viñeta */\nul {\n    list-style-image: url('icono.png');\n}\n\n/* Shorthand */\nul {\n    list-style: square inside;\n}</code></pre>\n\n<h2><i class='fas fa-table'></i> Tablas</h2>\n\n<pre><code>table {\n    /* Colapsar bordes */\n    border-collapse: collapse;   /* Bordes unidos */\n    border-collapse: separate;   /* Bordes separados */\n    \n    /* Espaciado entre celdas */\n    border-spacing: 10px;\n    \n    /* Ancho de tabla */\n    width: 100%;\n    \n    /* Alineación del contenido */\n    text-align: left;\n}\n\nth, td {\n    /* Bordes de celdas */\n    border: 1px solid #ddd;\n    \n    /* Espaciado interno */\n    padding: 12px 15px;\n}\n\n/* Filas alternadas */\ntr:nth-child(even) {\n    background-color: #f2f2f2;\n}\n\n/* Hover en filas */\ntr:hover {\n    background-color: #ddd;\n}</code></pre>\n\n<h2><i class='fas fa-link'></i> Enlaces</h2>\n\n<pre><code>/* Estados de los enlaces */\n\n/* Normal (sin visitar) */\na:link {\n    color: blue;\n    text-decoration: none;\n}\n\n/* Visitado */\na:visited {\n    color: purple;\n}\n\n/* Hover (mouse encima) */\na:hover {\n    color: red;\n    text-decoration: underline;\n}\n\n/* Activo (mientras se hace clic) */\na:active {\n    color: orange;\n}\n\n/* Enfocado (con teclado) */\na:focus {\n    outline: 2px solid blue;\n}\n\n/* Ejemplo completo */\na {\n    color: #3498db;\n    text-decoration: none;\n    transition: all 0.3s ease;\n}\n\na:hover {\n    color: #2980b9;\n    border-bottom: 2px solid #2980b9;\n}</code></pre>\n\n<h2><i class='fas fa-magic'></i> Transiciones y Animaciones Básicas</h2>\n\n<h3><i class='fas fa-exchange-alt'></i> Transiciones</h3>\n<pre><code>button {\n    background-color: blue;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    \n    /* Transición suave */\n    transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n    background-color: darkblue;\n}\n\n/* Transición completa */\ndiv {\n    transition-property: all;           /* Qué animar */\n    transition-duration: 0.5s;          /* Duración */\n    transition-timing-function: ease;   /* Curva de velocidad */\n    transition-delay: 0.1s;             /* Retraso */\n}\n\n/* Shorthand */\ndiv {\n    transition: all 0.3s ease 0s;\n}\n\n/* Múltiples propiedades */\ndiv {\n    transition: \n        background-color 0.3s ease,\n        transform 0.5s ease,\n        opacity 0.2s ease;\n}</code></pre>\n\n<h3><i class='fas fa-play'></i> Transformaciones</h3>\n<pre><code>div {\n    /* Mover */\n    transform: translate(50px, 100px);  /* X, Y */\n    transform: translateX(50px);\n    transform: translateY(100px);\n    \n    /* Escalar */\n    transform: scale(1.5);              /* 150% del tamaño */\n    transform: scale(2, 0.5);           /* X, Y independientes */\n    \n    /* Rotar */\n    transform: rotate(45deg);           /* 45 grados */\n    transform: rotate(-90deg);\n    \n    /* Inclinar */\n    transform: skew(10deg, 5deg);       /* X, Y */\n    \n    /* Combinar */\n    transform: translate(50px, 50px) rotate(45deg) scale(1.2);\n}\n\n/* Ejemplo hover con transformación */\n.card {\n    transition: transform 0.3s ease;\n}\n\n.card:hover {\n    transform: translateY(-10px) scale(1.05);\n}</code></pre>\n\n<h2><i class='fas fa-mobile-alt'></i> Media Queries (Responsive Design)</h2>\n\n<pre><code>/* Estilos base (móvil first) */\nbody {\n    font-size: 14px;\n}\n\n/* Tablets (768px en adelante) */\n@media (min-width: 768px) {\n    body {\n        font-size: 16px;\n    }\n    \n    .container {\n        max-width: 750px;\n    }\n}\n\n/* Desktop (1024px en adelante) */\n@media (min-width: 1024px) {\n    body {\n        font-size: 18px;\n    }\n    \n    .container {\n        max-width: 1000px;\n    }\n}\n\n/* Desktop grande (1200px en adelante) */\n@media (min-width: 1200px) {\n    .container {\n        max-width: 1140px;\n    }\n}\n\n/* Solo para impresión */\n@media print {\n    .no-imprimir {\n        display: none;\n    }\n}\n\n/* Orientación */\n@media (orientation: landscape) {\n    /* Modo horizontal */\n}\n\n@media (orientation: portrait) {\n    /* Modo vertical */\n}</code></pre>\n\n<h2><i class='fas fa-rocket'></i> Proyecto Práctico: Tarjeta de Perfil</h2>\n\n<h3>HTML:</h3>\n<pre><code>&lt;div class=\"tarjeta\"&gt;\n    &lt;img src=\"avatar.jpg\" alt=\"Foto de perfil\" class=\"avatar\"&gt;\n    &lt;h2 class=\"nombre\"&gt;Juan Pérez&lt;/h2&gt;\n    &lt;p class=\"profesion\"&gt;Desarrollador Web&lt;/p&gt;\n    &lt;p class=\"descripcion\"&gt;\n        Apasionado por crear experiencias web increíbles.\n        Especializado en HTML, CSS y JavaScript.\n    &lt;/p&gt;\n    &lt;div class=\"redes\"&gt;\n        &lt;a href=\"#\" class=\"boton\"&gt;GitHub&lt;/a&gt;\n        &lt;a href=\"#\" class=\"boton\"&gt;LinkedIn&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n<h3>CSS:</h3>\n<pre><code>/* Reset básico */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Arial', sans-serif;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    padding: 20px;\n}\n\n/* Tarjeta */\n.tarjeta {\n    background: white;\n    border-radius: 20px;\n    padding: 40px;\n    max-width: 400px;\n    text-align: center;\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    transition: transform 0.3s ease;\n}\n\n.tarjeta:hover {\n    transform: translateY(-10px);\n}\n\n/* Avatar */\n.avatar {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    border: 5px solid #667eea;\n    object-fit: cover;\n    margin-bottom: 20px;\n}\n\n/* Nombre */\n.nombre {\n    font-size: 28px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n/* Profesión */\n.profesion {\n    color: #667eea;\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n/* Descripción */\n.descripcion {\n    color: #666;\n    line-height: 1.6;\n    margin-bottom: 30px;\n}\n\n/* Redes sociales */\n.redes {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n\n/* Botones */\n.boton {\n    display: inline-block;\n    padding: 12px 30px;\n    background: linear-gradient(135deg, #667eea, #764ba2);\n    color: white;\n    text-decoration: none;\n    border-radius: 25px;\n    font-weight: bold;\n    transition: all 0.3s ease;\n}\n\n.boton:hover {\n    transform: scale(1.1);\n    box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n}\n\n/* Responsive */\n@media (max-width: 480px) {\n    .tarjeta {\n        padding: 30px 20px;\n    }\n    \n    .nombre {\n        font-size: 24px;\n    }\n    \n    .redes {\n        flex-direction: column;\n    }\n    \n    .boton {\n        width: 100%;\n    }\n}</code></pre>\n\n<h2><i class='fas fa-code'></i> Variables CSS (Custom Properties)</h2>\n<pre><code>/* Definir variables en :root */\n:root {\n    --color-primario: #3498db;\n    --color-secundario: #2ecc71;\n    --color-texto: #333;\n    --espaciado: 20px;\n    --fuente-principal: 'Arial', sans-serif;\n}\n\n/* Usar variables */\n.boton {\n    background-color: var(--color-primario);\n    padding: var(--espaciado);\n    font-family: var(--fuente-principal);\n}\n\n.boton:hover {\n    background-color: var(--color-secundario);\n}\n\n/* Variables con valores por defecto */\n.elemento {\n    color: var(--color-inexistente, black); /* Si no existe, usa black */\n}</code></pre>\n\n<h2><i class='fas fa-ruler'></i> Unidades de Medida en CSS</h2>\n\n<h3><i class='fas fa-arrows-alt-h'></i> Unidades Absolutas</h3>\n<pre><code>/* Píxeles (más común) */\nwidth: 300px;\n\n/* Centímetros */\nwidth: 5cm;\n\n/* Milímetros */\nwidth: 50mm;\n\n/* Pulgadas */\nwidth: 2in;\n\n/* Puntos (tipografía) */\nfont-size: 12pt;</code></pre>\n\n<h3><i class='fas fa-percentage'></i> Unidades Relativas</h3>\n<pre><code>/* Porcentaje (relativo al padre) */\nwidth: 50%;\n\n/* EM (relativo al tamaño de fuente del elemento) */\nfont-size: 2em;        /* 2 veces el tamaño de fuente */\npadding: 1.5em;\n\n/* REM (relativo al tamaño de fuente raíz) */\nfont-size: 1.5rem;     /* Más predecible que em */\nmargin: 2rem;\n\n/* Viewport Width (ancho de la ventana) */\nwidth: 50vw;           /* 50% del ancho de la ventana */\n\n/* Viewport Height (alto de la ventana) */\nheight: 100vh;         /* 100% del alto de la ventana */\n\n/* Viewport Minimum/Maximum */\nfont-size: 5vmin;      /* 5% de la dimensión más pequeña */\nfont-size: 5vmax;      /* 5% de la dimensión más grande */</code></pre>\n\n<h3><i class='fas fa-lightbulb'></i> Cuándo usar cada unidad</h3>\n<ul>\n<li><strong>px:</strong> Para bordes, sombras, detalles precisos</li>\n<li><strong>%:</strong> Para layouts responsive, anchos de contenedores</li>\n<li><strong>em:</strong> Para espaciado relacionado con el texto</li>\n<li><strong>rem:</strong> Para tamaños de fuente consistentes</li>\n<li><strong>vh/vw:</strong> Para secciones de altura completa</li>\n</ul>\n\n<h2><i class='fas fa-layer-group'></i> Pseudo-clases y Pseudo-elementos</h2>\n\n<h3><i class='fas fa-hand-pointer'></i> Pseudo-clases</h3>\n<pre><code>/* Estados de interacción */\na:hover { color: red; }\na:active { color: blue; }\na:focus { outline: 2px solid orange; }\n\n/* Hijos */\nli:first-child { font-weight: bold; }\nli:last-child { border-bottom: none; }\nli:nth-child(odd) { background: #f0f0f0; }  /* Impares */\nli:nth-child(even) { background: white; }   /* Pares */\nli:nth-child(3) { color: red; }             /* Tercero */\nli:nth-child(3n) { color: blue; }           /* Cada 3 */\n\n/* Tipos */\np:first-of-type { margin-top: 0; }\np:last-of-type { margin-bottom: 0; }\n\n/* Formularios */\ninput:focus { border-color: blue; }\ninput:disabled { opacity: 0.5; }\ninput:checked { background: green; }\ninput:required { border-left: 3px solid red; }\ninput:valid { border-color: green; }\ninput:invalid { border-color: red; }\n\n/* Otros */\n:not(.especial) { color: gray; }           /* No tiene clase especial */\n:empty { display: none; }                  /* Sin contenido */\n:root { --variable: valor; }               /* Elemento raíz */</code></pre>\n\n<h3><i class='fas fa-plus-square'></i> Pseudo-elementos</h3>\n<pre><code>/* ::before - Inserta contenido antes */\n.cita::before {\n    content: '\"';\n    font-size: 2em;\n    color: #999;\n}\n\n/* ::after - Inserta contenido después */\n.cita::after {\n    content: '\"';\n    font-size: 2em;\n    color: #999;\n}\n\n/* Primera letra */\np::first-letter {\n    font-size: 3em;\n    font-weight: bold;\n    float: left;\n    margin-right: 5px;\n}\n\n/* Primera línea */\np::first-line {\n    font-weight: bold;\n    color: #333;\n}\n\n/* Selección de texto */\n::selection {\n    background: yellow;\n    color: black;\n}\n\n/* Placeholder de input */\ninput::placeholder {\n    color: #999;\n    font-style: italic;\n}</code></pre>\n\n<h2><i class='fas fa-puzzle-piece'></i> Flexbox Básico</h2>\n\n<h3><i class='fas fa-boxes'></i> Contenedor Flex</h3>\n<pre><code>.contenedor {\n    display: flex;\n    \n    /* Dirección */\n    flex-direction: row;         /* Horizontal (defecto) */\n    flex-direction: column;      /* Vertical */\n    flex-direction: row-reverse; /* Horizontal invertido */\n    \n    /* Ajuste de línea */\n    flex-wrap: nowrap;           /* Una sola línea (defecto) */\n    flex-wrap: wrap;             /* Múltiples líneas */\n    \n    /* Alineación horizontal (eje principal) */\n    justify-content: flex-start;  /* Inicio */\n    justify-content: flex-end;    /* Final */\n    justify-content: center;      /* Centro */\n    justify-content: space-between; /* Espacio entre elementos */\n    justify-content: space-around;  /* Espacio alrededor */\n    justify-content: space-evenly;  /* Espacio uniforme */\n    \n    /* Alineación vertical (eje secundario) */\n    align-items: stretch;        /* Estirar (defecto) */\n    align-items: flex-start;     /* Arriba */\n    align-items: flex-end;       /* Abajo */\n    align-items: center;         /* Centro */\n    align-items: baseline;       /* Línea base del texto */\n    \n    /* Espaciado entre elementos */\n    gap: 20px;\n}</code></pre>\n\n<h3><i class='fas fa-cube'></i> Elementos Flex</h3>\n<pre><code>.elemento {\n    /* Crecer para llenar espacio */\n    flex-grow: 1;\n    \n    /* Encoger si es necesario */\n    flex-shrink: 1;\n    \n    /* Tamaño base */\n    flex-basis: 200px;\n    \n    /* Shorthand */\n    flex: 1;              /* flex-grow: 1; flex-shrink: 1; flex-basis: 0; */\n    flex: 0 0 200px;      /* No crece, no encoge, base 200px */\n    \n    /* Alineación individual */\n    align-self: flex-start;\n    align-self: center;\n    align-self: flex-end;\n}</code></pre>\n\n<h3><i class='fas fa-th'></i> Ejemplo Práctico: Layout con Flexbox</h3>\n<pre><code>/* HTML */\n&lt;div class=\"layout\"&gt;\n    &lt;header&gt;Header&lt;/header&gt;\n    &lt;main&gt;Contenido principal&lt;/main&gt;\n    &lt;aside&gt;Sidebar&lt;/aside&gt;\n    &lt;footer&gt;Footer&lt;/footer&gt;\n&lt;/div&gt;\n\n/* CSS */\n.layout {\n    display: flex;\n    flex-wrap: wrap;\n    min-height: 100vh;\n}\n\nheader {\n    flex: 0 0 100%;\n    background: #333;\n    color: white;\n    padding: 20px;\n}\n\nmain {\n    flex: 1;\n    padding: 20px;\n}\n\naside {\n    flex: 0 0 300px;\n    background: #f5f5f5;\n    padding: 20px;\n}\n\nfooter {\n    flex: 0 0 100%;\n    background: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}</code></pre>\n\n<h2><i class='fas fa-check-circle'></i> Buenas Prácticas en CSS</h2>\n<ul>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa nombres de clases descriptivos y en inglés</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Organiza tu CSS: reset → layout → componentes → utilidades</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa comentarios para organizar secciones grandes</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Prefiere clases sobre IDs para estilos</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Agrupa selectores relacionados</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Usa variables CSS para colores y valores repetidos</li>\n<li><i class='fas fa-thumbs-up' style='color: #10b981;'></i> Mobile-first: diseña primero para móviles</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes a Evitar</h2>\n<ul>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Olvidar el punto (.) para clases o almohadilla (#) para IDs</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No cerrar llaves { } correctamente</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Olvidar el punto y coma (;) al final de cada propiedad</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Usar demasiados IDs en lugar de clases</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No considerar la especificidad (ID > Clase > Elemento)</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> Usar !important innecesariamente</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No organizar el código CSS</li>\n<li><i class='fas fa-times-circle' style='color: #ef4444;'></i> No probar en diferentes navegadores</li>\n</ul>\n\n<h2><i class='fas fa-graduation-cap'></i> Ejercicios para Practicar</h2>\n<ul>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea una tarjeta de producto con imagen, título, precio y botón</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Diseña un menú de navegación horizontal con hover effects</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Construye una galería de imágenes responsive con grid</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Estiliza un formulario completo con estados de validación</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Crea un footer con múltiples columnas y links de redes sociales</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Diseña una landing page simple con hero section</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> Replica el diseño de una página web famosa</li>\n</ul>\n\n<h2><i class='fas fa-list-check'></i> Checklist de CSS</h2>\n<p>Asegúrate de conocer estos conceptos fundamentales:</p>\n\n<ul>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Sintaxis básica de CSS (selector, propiedad, valor)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Formas de agregar CSS (inline, interno, externo)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Selectores (elemento, clase, ID)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Colores (nombres, hex, rgb, rgba)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Tipografía (font-family, font-size, font-weight)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Modelo de caja (margin, padding, border)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Fondos (color, imagen, gradientes)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Display (block, inline, none, flex)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Posicionamiento (static, relative, absolute, fixed)</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Flexbox básico</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Media queries para responsive</li>\n<li><i class='fas fa-square' style='color: #6b7280;'></i> Transiciones básicas</li>\n</ul>\n\n<h2><i class='fas fa-chart-line'></i> Desafíos Progresivos</h2>\n\n<h3>🎯 Nivel 1: Principiante</h3>\n<ul>\n<li>Cambia colores y fuentes de una página existente</li>\n<li>Agrega bordes y sombras a elementos</li>\n<li>Crea botones con diferentes estilos</li>\n</ul>\n\n<h3>🎯 Nivel 2: Intermedio</h3>\n<ul>\n<li>Diseña un layout de 3 columnas con Flexbox</li>\n<li>Crea un menú sticky que se quede fijo al hacer scroll</li>\n<li>Implementa un sistema de grid responsive</li>\n</ul>\n\n<h3>🎯 Nivel 3: Avanzado</h3>\n<ul>\n<li>Crea animaciones complejas con keyframes</li>\n<li>Implementa un dark mode con variables CSS</li>\n<li>Diseña un sitio completamente responsive sin frameworks</li>\n</ul>\n\n<h2><i class='fas fa-lightbulb'></i> Tips Profesionales</h2>\n<ul>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> <strong>Mobile First:</strong> Diseña primero para móviles, luego escala a desktop</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> <strong>Consistencia:</strong> Usa una paleta de colores y tipografía coherente</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> <strong>Espaciado:</strong> El espacio en blanco es tu amigo, no tengas miedo de usarlo</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> <strong>Contraste:</strong> Asegura suficiente contraste para legibilidad</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> <strong>Performance:</strong> Optimiza imágenes y minimiza el uso de propiedades costosas</li>\n<li><i class='fas fa-star' style='color: #f59e0b;'></i> <strong>DevTools:</strong> Usa las herramientas del navegador para experimentar</li>\n</ul>\n\n<h2><i class='fas fa-road'></i> Próximos Pasos</h2>\n<p>Una vez que domines los conceptos básicos de CSS, puedes avanzar a:</p>\n\n<ol>\n<li><strong>CSS Grid:</strong> Sistema de diseño en cuadrícula más potente</li>\n<li><strong>Animaciones Avanzadas:</strong> Keyframes, timing functions personalizadas</li>\n<li><strong>Sass/SCSS:</strong> Preprocesador CSS con variables, mixins y funciones</li>\n<li><strong>CSS Architecture:</strong> BEM, SMACSS, metodologías de organización</li>\n<li><strong>Frameworks:</strong> Bootstrap, Tailwind CSS, Bulma</li>\n<li><strong>CSS-in-JS:</strong> Styled Components, Emotion (para React)</li>\n</ol>\n\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 12px; padding: 20px; margin-top: 20px; text-align: center;\">\n  <h3 style=\"color: white; margin-bottom: 10px;\"><i class='fas fa-trophy'></i> ¡Excelente Trabajo!</h3>\n  <p style=\"color: white; margin: 0;\">Has completado el tutorial de conceptos básicos de CSS. Ahora tienes las herramientas para crear sitios web hermosos y profesionales. ¡Sigue practicando y experimentando con diseños! 🎨</p>\n</div>",
    "lastUpdated": "2025-10-21T17:00:52.713778"
  },
  "68fd7af4e4a1bd0b0c2b56d7": {
    "title": "Ciclo FOR en JavaScript: De Cero a Experto",
    "language": "javascript",
    "level": "principiante",
    "duration": "45 min",
    "description": "Aprende a usar el ciclo FOR en JavaScript con ejemplos prácticos de la vida real. Incluye ejercicios, casos de uso reales y consejos profesionales.",
    "content": "<h2><i class='fas fa-sync-alt'></i> El Ciclo FOR en JavaScript</h2>\n<p>El ciclo <code>for</code> es como un robot que repite tareas automáticamente. Imagina que tienes que escribir \"Hola\" 100 veces... ¿lo harías a mano? ¡Por supuesto que no! Para eso existe el ciclo <code>for</code>.</p>\n\n<h3><i class='fas fa-lightbulb'></i> ¿Qué es un ciclo FOR?</h3>\n<p>Un ciclo <code>for</code> es una estructura que <strong>repite un bloque de código</strong> una cantidad específica de veces. Es perfecto cuando sabes cuántas veces necesitas repetir algo.</p>\n\n<h2><i class='fas fa-book'></i> Sintaxis Básica</h2>\n<p>Antes de ver ejemplos, entendamos la estructura:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Sintaxis\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">for (inicialización; condición; incremento) {\n    // Código que se repite\n}</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-puzzle-piece'></i> Las 3 Partes del FOR</h3>\n<ul>\n<li><strong style=\"color: #3b82f6;\">Inicialización:</strong> Donde empieza el contador (generalmente <code>let i = 0</code>)</li>\n<li><strong style=\"color: #8b5cf6;\">Condición:</strong> Hasta cuándo se repite (ejemplo: <code>i &lt; 10</code>)</li>\n<li><strong style=\"color: #10b981;\">Incremento:</strong> Cómo avanza el contador (generalmente <code>i++</code> que suma 1)</li>\n</ul>\n\n<h2><i class='fas fa-rocket'></i> Ejemplo 1: Mi Primer Ciclo FOR</h2>\n<p>Empecemos con algo súper simple. Vamos a imprimir números del 1 al 5:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Imprimir números del 1 al 5\nfor (let i = 1; i &lt;= 5; i++) {\n    console.log(\"Número: \" + i);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Número: <span class=\"console-number\">1</span></span>\n      <span class=\"console-line\">Número: <span class=\"console-number\">2</span></span>\n      <span class=\"console-line\">Número: <span class=\"console-number\">3</span></span>\n      <span class=\"console-line\">Número: <span class=\"console-number\">4</span></span>\n      <span class=\"console-line\">Número: <span class=\"console-number\">5</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ol>\n<li><code>let i = 1</code> → El contador empieza en 1</li>\n<li><code>i &lt;= 5</code> → Se repite mientras i sea menor o igual a 5</li>\n<li><code>i++</code> → Después de cada vuelta, suma 1 a i</li>\n<li>El ciclo se ejecuta 5 veces (cuando i=1, i=2, i=3, i=4, i=5)</li>\n</ol>\n\n<h2><i class='fas fa-shopping-cart'></i> Ejemplo 2: Lista de Compras (Vida Real)</h2>\n<p>Imagina que tienes una lista de compras y quieres mostrar cada producto. Esto es muy común en aplicaciones reales:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Mi lista de compras\nlet compras = [\"Leche\", \"Pan\", \"Huevos\", \"Café\", \"Frutas\"];\n\n// Mostrar cada producto\nfor (let i = 0; i &lt; compras.length; i++) {\n    console.log((i + 1) + \". \" + compras[i]);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-number\">1</span>. <span class=\"console-string\">Leche</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span>. <span class=\"console-string\">Pan</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span>. <span class=\"console-string\">Huevos</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span>. <span class=\"console-string\">Café</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">5</span>. <span class=\"console-string\">Frutas</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-brain'></i> Entendiendo el código:</h3>\n<ul>\n<li><code>compras.length</code> nos da el total de elementos (5 en este caso)</li>\n<li><code>i</code> empieza en 0 porque los arrays en JavaScript empiezan en 0</li>\n<li><code>compras[i]</code> accede a cada elemento del array</li>\n<li><code>(i + 1)</code> lo usamos para mostrar 1, 2, 3... en lugar de 0, 1, 2...</li>\n</ul>\n\n<h2><i class='fas fa-calculator'></i> Ejemplo 3: Tabla de Multiplicar</h2>\n<p>¿Recuerdas cuando aprendías las tablas de multiplicar en la escuela? Ahora puedes generarlas con código:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Tabla del 7\nlet numero = 7;\n\nconsole.log(\"=== Tabla del \" + numero + \" ===\");\nfor (let i = 1; i &lt;= 10; i++) {\n    let resultado = numero * i;\n    console.log(numero + \" x \" + i + \" = \" + resultado);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line console-comment\">=== Tabla del 7 ===</span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">1</span> = <span class=\"console-number\">7</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">2</span> = <span class=\"console-number\">14</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">3</span> = <span class=\"console-number\">21</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">4</span> = <span class=\"console-number\">28</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">5</span> = <span class=\"console-number\">35</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">6</span> = <span class=\"console-number\">42</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">7</span> = <span class=\"console-number\">49</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">8</span> = <span class=\"console-number\">56</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">9</span> = <span class=\"console-number\">63</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span> x <span class=\"console-number\">10</span> = <span class=\"console-number\">70</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-magic'></i> ¿Por qué es útil?</h3>\n<p>Cambia <code>let numero = 7</code> por cualquier otro número y automáticamente tendrás esa tabla. ¡Imagina hacer esto manualmente para todos los números!</p>\n\n<h2><i class='fas fa-star'></i> Ejemplo 4: Suma de Números</h2>\n<p>Un caso muy común: sumar números del 1 al 100. Sin ciclos, tendrías que escribir 1+2+3+4+5... hasta 100. Con <code>for</code>, es súper fácil:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Sumar números del 1 al 100\nlet suma = 0;\n\nfor (let i = 1; i &lt;= 100; i++) {\n    suma = suma + i;  // También se puede escribir: suma += i;\n}\n\nconsole.log(\"La suma de 1 a 100 es: \" + suma);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">La suma de 1 a 100 es: <span class=\"console-number\">5050</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-cogs'></i> Paso a paso:</h3>\n<ol>\n<li>Creamos una variable <code>suma</code> que empieza en 0</li>\n<li>El ciclo va de 1 a 100</li>\n<li>En cada vuelta, sumamos el valor de <code>i</code> a <code>suma</code></li>\n<li>Al final, <code>suma</code> contiene el total: 5050</li>\n</ol>\n\n<h2><i class='fas fa-users'></i> Ejemplo 5: Estudiantes y Calificaciones</h2>\n<p>Imagina que eres profesor y necesitas revisar las calificaciones de tus estudiantes:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Calificaciones de estudiantes\nlet estudiantes = [\"Ana\", \"Carlos\", \"María\", \"Pedro\"];\nlet calificaciones = [85, 92, 78, 95];\n\nconsole.log(\"=== REPORTE DE CALIFICACIONES ===\");\nfor (let i = 0; i &lt; estudiantes.length; i++) {\n    let nombre = estudiantes[i];\n    let nota = calificaciones[i];\n    let estado = nota &gt;= 70 ? \"APROBADO ✓\" : \"REPROBADO ✗\";\n    \n    console.log(nombre + \": \" + nota + \" puntos - \" + estado);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line console-comment\">=== REPORTE DE CALIFICACIONES ===</span>\n      <span class=\"console-line\"><span class=\"console-string\">Ana</span>: <span class=\"console-number\">85</span> puntos - APROBADO ✓</span>\n      <span class=\"console-line\"><span class=\"console-string\">Carlos</span>: <span class=\"console-number\">92</span> puntos - APROBADO ✓</span>\n      <span class=\"console-line\"><span class=\"console-string\">María</span>: <span class=\"console-number\">78</span> puntos - APROBADO ✓</span>\n      <span class=\"console-line\"><span class=\"console-string\">Pedro</span>: <span class=\"console-number\">95</span> puntos - APROBADO ✓</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-graduation-cap'></i> Aplicación real:</h3>\n<p>Este tipo de código se usa en sistemas escolares, plataformas educativas, y cualquier app que necesite procesar listas de datos relacionados.</p>\n\n<h2><i class='fas fa-arrow-down'></i> Ejemplo 6: Cuenta Regresiva</h2>\n<p>¿Y si queremos contar hacia atrás? Como un cohete antes de despegar:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Cuenta regresiva para despegue\nconsole.log(\"Iniciando cuenta regresiva...\");\n\nfor (let i = 10; i &gt;= 1; i--) {\n    console.log(i + \"...\");\n}\n\nconsole.log(\"🚀 ¡DESPEGUE!\");</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Iniciando cuenta regresiva...</span>\n      <span class=\"console-line\"><span class=\"console-number\">10</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">9</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">8</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">6</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">5</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span>...</span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span>...</span>\n      <span class=\"console-line\">🚀 ¡DESPEGUE!</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-key'></i> Nota importante:</h3>\n<p>Usamos <code>i--</code> en lugar de <code>i++</code> para restar en lugar de sumar. También cambiamos la condición a <code>i &gt;= 1</code> para que pare en 1.</p>\n\n<h2><i class='fas fa-th'></i> Ejemplo 7: Crear una Cuadrícula (Nivel Intermedio)</h2>\n<p>Este es un poco más avanzado pero muy útil. Vamos a crear un patrón de asteriscos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Crear un patrón de 5 filas\nfor (let i = 1; i &lt;= 5; i++) {\n    let linea = \"\";\n    \n    // Agregar i asteriscos en cada fila\n    for (let j = 1; j &lt;= i; j++) {\n        linea = linea + \"⭐ \";\n    }\n    \n    console.log(linea);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">⭐ </span>\n      <span class=\"console-line\">⭐ ⭐ </span>\n      <span class=\"console-line\">⭐ ⭐ ⭐ </span>\n      <span class=\"console-line\">⭐ ⭐ ⭐ ⭐ </span>\n      <span class=\"console-line\">⭐ ⭐ ⭐ ⭐ ⭐ </span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-brain'></i> ¿Ciclo dentro de ciclo?</h3>\n<p>¡Sí! Esto se llama <strong>ciclo anidado</strong>. El ciclo exterior controla las filas, y el interior controla las estrellas en cada fila.</p>\n\n<h2><i class='fas fa-filter'></i> Ejemplo 8: Filtrar Números Pares</h2>\n<p>Muy común en programación real: necesitas filtrar información específica:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Mostrar solo los números pares del 1 al 20\nconsole.log(\"Números pares del 1 al 20:\");\n\nfor (let i = 1; i &lt;= 20; i++) {\n    // El operador % (módulo) nos da el resto de la división\n    if (i % 2 === 0) {\n        console.log(i);\n    }\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Números pares del 1 al 20:</span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">6</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">8</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">10</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">12</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">14</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">16</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">18</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">20</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-question-circle'></i> ¿Qué es i % 2?</h3>\n<p>El operador <code>%</code> divide y devuelve el <strong>resto</strong>. Si un número dividido entre 2 da resto 0, entonces es par.</p>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes</h2>\n\n<h3>❌ Error 1: Ciclo Infinito</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código Incorrecto\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ¡CUIDADO! Esto nunca termina\nfor (let i = 0; i &lt; 10; i--) {  // ❌ Está restando en vez de sumar\n    console.log(i);\n}\n\n// Correcto:\nfor (let i = 0; i &lt; 10; i++) {  // ✓ Ahora sí suma\n    console.log(i);\n}</code></pre>\n  </div>\n</div>\n\n<h3>❌ Error 2: Condición Incorrecta</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let frutas = [\"Manzana\", \"Pera\", \"Uva\"];\n\n// ❌ Incorrecto: usará un índice que no existe\nfor (let i = 0; i &lt;= frutas.length; i++) {\n    console.log(frutas[i]);  // El último será \"undefined\"\n}\n\n// ✓ Correcto: usa &lt; en lugar de &lt;=\nfor (let i = 0; i &lt; frutas.length; i++) {\n    console.log(frutas[i]);\n}</code></pre>\n  </div>\n</div>\n\n<h3>❌ Error 3: Olvidar las Llaves</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ Sin llaves, solo ejecuta la primera línea\nfor (let i = 0; i &lt; 5; i++)\n    console.log(\"Línea 1\");\n    console.log(\"Línea 2\");  // Esto se ejecuta solo una vez\n\n// ✓ Correcto: con llaves\nfor (let i = 0; i &lt; 5; i++) {\n    console.log(\"Línea 1\");\n    console.log(\"Línea 2\");  // Ambas se repiten 5 veces\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-fire'></i> Variaciones del FOR</h2>\n\n<h3>Saltar de 2 en 2</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Contar de 2 en 2\nfor (let i = 0; i &lt;= 10; i += 2) {\n    console.log(i);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-number\">0</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">6</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">8</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">10</span></span>\n    </div>\n  </div>\n</div>\n\n<h3>Saltar de 5 en 5</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Contar de 5 en 5\nfor (let i = 0; i &lt;= 50; i += 5) {\n    console.log(i);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-number\">0</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">5</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">10</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">15</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">20</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">25</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">30</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">35</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">40</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">45</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">50</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-dumbbell'></i> Ejercicios para Practicar</h2>\n<p>Ahora que entiendes el ciclo <code>for</code>, practica con estos ejercicios. ¡No vale solo copiar y pegar! Intenta hacerlos tú mismo primero.</p>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 1: Suma de Impares</h3>\n<p><strong>Objetivo:</strong> Suma todos los números impares del 1 al 50.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let sumaImpares = 0;\n\nfor (let i = 1; i &lt;= 50; i++) {\n    if (i % 2 !== 0) {  // Si NO es par, entonces es impar\n        sumaImpares += i;\n    }\n}\n\nconsole.log(\"La suma de impares es: \" + sumaImpares);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">La suma de impares es: <span class=\"console-number\">625</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 2: Generador de Contraseñas Simple</h3>\n<p><strong>Objetivo:</strong> Crear una \"contraseña\" concatenando letras del abecedario.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let letras = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\nlet password = \"\";\n\n// Tomar cada 2 letras\nfor (let i = 0; i &lt; letras.length; i += 2) {\n    password += letras[i];\n}\n\nconsole.log(\"Contraseña generada: \" + password);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Contraseña generada: <span class=\"console-string\">ACEG</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 3: Contador de Palabras Largas</h3>\n<p><strong>Objetivo:</strong> Contar cuántas palabras tienen más de 5 letras.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let palabras = [\"casa\", \"elefante\", \"sol\", \"computadora\", \"mesa\", \"programación\"];\nlet contador = 0;\n\nfor (let i = 0; i &lt; palabras.length; i++) {\n    if (palabras[i].length &gt; 5) {\n        contador++;\n        console.log(palabras[i] + \" tiene \" + palabras[i].length + \" letras\");\n    }\n}\n\nconsole.log(\"Total de palabras largas: \" + contador);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">elefante</span> tiene <span class=\"console-number\">8</span> letras</span>\n      <span class=\"console-line\"><span class=\"console-string\">computadora</span> tiene <span class=\"console-number\">11</span> letras</span>\n      <span class=\"console-line\"><span class=\"console-string\">programación</span> tiene <span class=\"console-number\">12</span> letras</span>\n      <span class=\"console-line\">Total de palabras largas: <span class=\"console-number\">3</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 4: Crear un Menú</h3>\n<p><strong>Objetivo:</strong> Generar un menú de restaurante con precios.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let platillos = [\"Pizza\", \"Hamburguesa\", \"Ensalada\", \"Pasta\", \"Tacos\"];\nlet precios = [150, 120, 80, 110, 90];\n\nconsole.log(\"===== MENÚ DEL DÍA =====\");\nfor (let i = 0; i &lt; platillos.length; i++) {\n    console.log((i + 1) + \". \" + platillos[i] + \" - $\" + precios[i]);\n}\nconsole.log(\"========================\");</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line console-comment\">===== MENÚ DEL DÍA =====</span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span>. <span class=\"console-string\">Pizza</span> - $<span class=\"console-number\">150</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span>. <span class=\"console-string\">Hamburguesa</span> - $<span class=\"console-number\">120</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span>. <span class=\"console-string\">Ensalada</span> - $<span class=\"console-number\">80</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span>. <span class=\"console-string\">Pasta</span> - $<span class=\"console-number\">110</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">5</span>. <span class=\"console-string\">Tacos</span> - $<span class=\"console-number\">90</span></span>\n      <span class=\"console-line console-comment\">========================</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos Pro</h2>\n\n<h3>💡 Consejo 1: Nombres de Variables Descriptivos</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ No tan claro\nfor (let i = 0; i &lt; arr.length; i++) {\n    console.log(arr[i]);\n}\n\n// ✓ Más claro y profesional\nfor (let indice = 0; indice &lt; estudiantes.length; indice++) {\n    console.log(estudiantes[indice]);\n}\n\n// ✓ Aunque \"i\" es estándar y aceptable\nfor (let i = 0; i &lt; estudiantes.length; i++) {\n    let estudiante = estudiantes[i];\n    console.log(estudiante);\n}</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 2: Guarda el .length en una Variable</h3>\n<p>Cuando trabajas con arrays grandes, esto optimiza el rendimiento:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let productos = [\"Laptop\", \"Mouse\", \"Teclado\", \"Monitor\"];\nlet total = productos.length;\n\n// Ahora solo calcula .length una vez\nfor (let i = 0; i &lt; total; i++) {\n    console.log(productos[i]);\n}</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 3: break y continue</h3>\n<p>A veces necesitas detener el ciclo o saltar una iteración:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// break - detiene el ciclo completamente\nconsole.log(\"Buscando el número 5:\");\nfor (let i = 1; i &lt;= 10; i++) {\n    console.log(i);\n    if (i === 5) {\n        console.log(\"¡Encontrado! Deteniendo búsqueda.\");\n        break;  // Sale del ciclo\n    }\n}\n\nconsole.log(\"\\n---\\n\");\n\n// continue - salta a la siguiente iteración\nconsole.log(\"Números excepto el 5:\");\nfor (let i = 1; i &lt;= 10; i++) {\n    if (i === 5) {\n        continue;  // Salta este número\n    }\n    console.log(i);\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Buscando el número 5:</span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">5</span></span>\n      <span class=\"console-line\">¡Encontrado! Deteniendo búsqueda.</span>\n      <span class=\"console-line\">&nbsp;</span>\n      <span class=\"console-line\">---</span>\n      <span class=\"console-line\">&nbsp;</span>\n      <span class=\"console-line\">Números excepto el 5:</span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">6</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">7</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">8</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">9</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">10</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Casos de Uso en el Mundo Real</h2>\n<p>Aquí te muestro dónde se usa el ciclo <code>for</code> en aplicaciones reales:</p>\n\n<ul>\n<li><i class='fas fa-shopping-cart' style='color: #3b82f6;'></i> <strong>E-commerce:</strong> Mostrar productos, calcular totales de carrito</li>\n<li><i class='fas fa-envelope' style='color: #8b5cf6;'></i> <strong>Email:</strong> Mostrar lista de correos, buscar mensajes</li>\n<li><i class='fas fa-chart-line' style='color: #10b981;'></i> <strong>Análisis de datos:</strong> Procesar estadísticas, generar reportes</li>\n<li><i class='fas fa-gamepad' style='color: #f59e0b;'></i> <strong>Videojuegos:</strong> Actualizar enemigos, revisar colisiones</li>\n<li><i class='fas fa-user-friends' style='color: #ef4444;'></i> <strong>Redes sociales:</strong> Mostrar feed de publicaciones, likes, comentarios</li>\n<li><i class='fas fa-file-alt' style='color: #06b6d4;'></i> <strong>Editores de texto:</strong> Buscar palabras, contar caracteres</li>\n</ul>\n\n<h2><i class='fas fa-brain'></i> Resumen: Lo que Debes Recordar</h2>\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <ul style=\"color: white; font-size: 1.05em; line-height: 1.8;\">\n    <li><strong>El ciclo for repite código</strong> un número específico de veces</li>\n    <li><strong>Tiene 3 partes:</strong> inicialización, condición, incremento</li>\n    <li><strong>Es perfecto para arrays:</strong> recorrer listas de datos</li>\n    <li><strong>Cuidado con ciclos infinitos:</strong> verifica tu condición e incremento</li>\n    <li><strong>Puedes anidar ciclos:</strong> for dentro de for para matrices</li>\n    <li><strong>break detiene el ciclo,</strong> continue salta una iteración</li>\n    <li><strong>Practica, practica, practica:</strong> es la única forma de dominarlos</li>\n  </ul>\n</div>\n\n<h2><i class='fas fa-flag-checkered'></i> Desafío Final</h2>\n<p>¿Te atreves? Intenta crear este programa sin mirar la solución:</p>\n\n<div style=\"background: rgba(59, 130, 246, 0.1); border-left: 4px solid #3b82f6; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n  <h3 style=\"margin-top: 0; color: #60a5fa;\"><i class='fas fa-trophy'></i> Desafío: Sistema de Inventario</h3>\n  <p><strong>Crea un programa que:</strong></p>\n  <ol>\n    <li>Tenga un array de productos y otro de cantidades</li>\n    <li>Muestre el inventario completo</li>\n    <li>Identifique productos con menos de 5 unidades (alerta de stock bajo)</li>\n    <li>Calcule el total de productos en inventario</li>\n  </ol>\n</div>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let productos = [\"Laptop\", \"Mouse\", \"Teclado\", \"Monitor\", \"Webcam\"];\nlet cantidades = [3, 15, 8, 2, 12];\nlet totalProductos = 0;\n\nconsole.log(\"===== INVENTARIO =====\");\nfor (let i = 0; i &lt; productos.length; i++) {\n    let producto = productos[i];\n    let cantidad = cantidades[i];\n    \n    // Mostrar producto\n    console.log((i + 1) + \". \" + producto + \": \" + cantidad + \" unidades\");\n    \n    // Alerta de stock bajo\n    if (cantidad &lt; 5) {\n        console.log(\"   ⚠️ ALERTA: Stock bajo!\");\n    }\n    \n    // Sumar al total\n    totalProductos += cantidad;\n}\n\nconsole.log(\"======================\");\nconsole.log(\"Total en inventario: \" + totalProductos + \" productos\");</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line console-comment\">===== INVENTARIO =====</span>\n      <span class=\"console-line\"><span class=\"console-number\">1</span>. <span class=\"console-string\">Laptop</span>: <span class=\"console-number\">3</span> unidades</span>\n      <span class=\"console-line\">   ⚠️ ALERTA: Stock bajo!</span>\n      <span class=\"console-line\"><span class=\"console-number\">2</span>. <span class=\"console-string\">Mouse</span>: <span class=\"console-number\">15</span> unidades</span>\n      <span class=\"console-line\"><span class=\"console-number\">3</span>. <span class=\"console-string\">Teclado</span>: <span class=\"console-number\">8</span> unidades</span>\n      <span class=\"console-line\"><span class=\"console-number\">4</span>. <span class=\"console-string\">Monitor</span>: <span class=\"console-number\">2</span> unidades</span>\n      <span class=\"console-line\">   ⚠️ ALERTA: Stock bajo!</span>\n      <span class=\"console-line\"><span class=\"console-number\">5</span>. <span class=\"console-string\">Webcam</span>: <span class=\"console-number\">12</span> unidades</span>\n      <span class=\"console-line console-comment\">======================</span>\n      <span class=\"console-line\">Total en inventario: <span class=\"console-number\">40</span> productos</span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-forward'></i> ¿Qué Sigue?</h2>\n<p>Ahora que dominas el ciclo <code>for</code>, estos son tus próximos pasos:</p>\n\n<ol>\n<li><strong>While y Do-While:</strong> Otros tipos de ciclos en JavaScript</li>\n<li><strong>for...of y for...in:</strong> Formas modernas de iterar en ES6+</li>\n<li><strong>Array methods:</strong> forEach, map, filter (alternativas modernas al for)</li>\n<li><strong>Funciones y ciclos:</strong> Combinar ambos conceptos</li>\n<li><strong>Algoritmos:</strong> Ordenamiento, búsqueda, etc.</li>\n</ol>\n\n<div style=\"background: linear-gradient(135deg, #10b981 0%, #059669 100%); border-radius: 16px; padding: 30px; margin-top: 40px; text-align: center; box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-graduation-cap'></i> ¡Felicitaciones!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Ahora entiendes cómo funciona el ciclo FOR en JavaScript. Practica con los ejercicios y verás cómo mejoras rápidamente. ¡Sigue programando!</p>\n</div>",
    "lastUpdated": "2025-10-25T19:35:49.043790"
  },
  "68fd7d94e4a1bd0b0c2b56d8": {
    "title": "Domina las Condicionales en JavaScript: if, else y else if desde Cero",
    "language": "javascript",
    "level": "principiante",
    "duration": "60 min",
    "description": "Aprende a tomar decisiones en tu código con condicionales de JavaScript. Este tutorial completo te enseña desde los conceptos básicos hasta técnicas profesionales, usando ejemplos de la vida real que te ayudarán a entender la lógica de programación.\nDescubrirás cómo funcionan if, else y else if, aprenderás a usar operadores de comparación (>, <, ==, ===), combinar condiciones con AND (&&) y OR (||), y evitar los errores más comunes que cometen los principiantes.\nIncluye ejercicios prácticos con soluciones, casos de uso del mundo real (e-commerce, sistemas de seguridad, calculadoras de envíos), y consejos profesionales como el operador ternario y early returns. No es solo copiar código: es entender CÓMO y POR QUÉ funciona.",
    "content": "<h2><i class='fas fa-code-branch'></i> Condicionales: Toma Decisiones en tu Código</h2>\n<p>Las condicionales son como las decisiones que tomas cada día. \"Si tengo hambre, entonces como\". \"Si llueve, llevo paraguas, si no, llevo lentes de sol\". En programación funcionan exactamente igual: tu código toma decisiones basándose en condiciones.</p>\n\n<h3><i class='fas fa-lightbulb'></i> ¿Qué aprenderás?</h3>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Qué son las condicionales y por qué son fundamentales</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Cómo usar if, else, y else if correctamente</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> La lógica detrás de las condiciones</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Aplicaciones prácticas del mundo real</li>\n</ul>\n\n<h2><i class='fas fa-book'></i> ¿Qué es una Condicional?</h2>\n<p>Imagina que eres un guardia de seguridad en un bar. Tu trabajo es simple: <strong>\"Si la persona tiene 18 años o más, puede entrar. Si no, no puede entrar.\"</strong> Eso es exactamente lo que hace una condicional en programación: evalúa una condición y ejecuta código según el resultado.</p>\n\n<h3><i class='fas fa-info-circle'></i> Definición</h3>\n<p>Una <strong>condicional</strong> es una estructura que permite a tu programa tomar decisiones. Evalúa si algo es verdadero o falso, y ejecuta diferentes bloques de código según el resultado.</p>\n\n<h2><i class='fas fa-code'></i> Ejemplo 1: El If Básico (Una Sola Condición)</h2>\n<p>Empecemos con lo más simple: verificar UNA sola condición. Es como preguntar \"¿Hace calor?\" y SI hace calor, entonces te quitas el suéter.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let temperatura = 28;\n\nif (temperatura > 25) {\n    console.log(\"¡Hace calor! 🌞\");\n    console.log(\"Voy a quitarme el suéter\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">¡Hace calor! 🌞</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Voy a quitarme el suéter</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>if (temperatura > 25)</strong> - Preguntamos: \"¿La temperatura es mayor a 25?\"</li>\n<li>Los <strong>paréntesis ()</strong> contienen la condición que estamos evaluando</li>\n<li>Las <strong>llaves {}</strong> contienen el código que se ejecuta SI la condición es verdadera</li>\n<li>Si temperatura fuera 20, NADA pasaría - el código dentro del if simplemente se salta</li>\n</ul>\n\n<h2><i class='fas fa-road'></i> Ejemplo 2: If-Else (Dos Caminos Posibles)</h2>\n<p>Ahora es más interesante: \"Si hace calor, me quito el suéter. Si NO hace calor, me lo pongo.\" Siempre sucede una de las dos cosas.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let edad = 16;\n\nif (edad >= 18) {\n    console.log(\"Puedes entrar al bar ✅\");\n} else {\n    console.log(\"Lo siento, eres menor de edad ❌\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Lo siento, eres menor de edad ❌</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>if (edad >= 18)</strong> - Evaluamos si la edad es mayor o igual a 18</li>\n<li>Si es TRUE (verdadero), se ejecuta el primer bloque</li>\n<li><strong>else</strong> - Significa \"en cualquier otro caso\" o \"si no\"</li>\n<li>Si es FALSE (falso), se ejecuta el bloque del else</li>\n<li><strong>Importante:</strong> Siempre se ejecuta uno de los dos bloques, nunca ambos</li>\n</ul>\n\n<h2><i class='fas fa-project-diagram'></i> Ejemplo 3: Else If (Múltiples Caminos)</h2>\n<p>Aquí viene lo potente: evaluar varias condiciones en orden. Como un sistema de calificaciones: \"Si tienes 90+, es A. Si tienes 80+, es B. Si tienes 70+, es C...\"</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let calificacion = 85;\n\nif (calificacion >= 90) {\n    console.log(\"¡Excelente! Sacaste una A 🌟\");\n} else if (calificacion >= 80) {\n    console.log(\"Muy bien! Sacaste una B 👍\");\n} else if (calificacion >= 70) {\n    console.log(\"Bien. Sacaste una C 📚\");\n} else if (calificacion >= 60) {\n    console.log(\"Aprobaste con D 😅\");\n} else {\n    console.log(\"Reprobaste 😢\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Muy bien! Sacaste una B 👍</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li>El programa evalúa cada condición <strong>en orden, de arriba hacia abajo</strong></li>\n<li>Cuando encuentra la PRIMERA condición verdadera, ejecuta ese bloque y <strong>se detiene</strong></li>\n<li>Con 85: verifica >= 90 (falso), luego >= 80 (verdadero) - ejecuta ese bloque y termina</li>\n<li>El <strong>else final</strong> es la red de seguridad: si ninguna condición se cumple, ejecuta esto</li>\n<li><strong>Clave:</strong> Solo se ejecuta UN bloque, el primero que sea verdadero</li>\n</ul>\n\n<h2><i class='fas fa-brain'></i> Ejemplo 4: La Lógica Detrás - Comparaciones</h2>\n<p>Para crear buenas condiciones, necesitas entender los operadores de comparación. Son como hacer preguntas matemáticas:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let precio = 50;\n\n// Mayor que\nif (precio > 100) {\n    console.log(\"Es caro\");\n}\n\n// Menor que\nif (precio < 30) {\n    console.log(\"Es barato\");\n}\n\n// Mayor o igual que\nif (precio >= 50) {\n    console.log(\"Vale al menos 50\"); // ✓ Esto se imprime\n}\n\n// Menor o igual que\nif (precio <= 50) {\n    console.log(\"Vale máximo 50\"); // ✓ Esto también\n}\n\n// Igual a (dos signos de igual ==)\nif (precio == 50) {\n    console.log(\"Vale exactamente 50\"); // ✓ Y esto también\n}\n\n// Diferente de\nif (precio != 100) {\n    console.log(\"No vale 100\"); // ✓ Y esto\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Vale al menos 50</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Vale máximo 50</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Vale exactamente 50</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">No vale 100</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>&gt;</strong> (mayor que) - ¿El número de la izquierda es más grande?</li>\n<li><strong>&lt;</strong> (menor que) - ¿El número de la izquierda es más pequeño?</li>\n<li><strong>&gt;=</strong> (mayor o igual) - ¿Es más grande O es exactamente igual?</li>\n<li><strong>&lt;=</strong> (menor o igual) - ¿Es más pequeño O es exactamente igual?</li>\n<li><strong>==</strong> (igual a) - ¿Son exactamente iguales?</li>\n<li><strong>!=</strong> (diferente de) - ¿Son diferentes?</li>\n</ul>\n\n<h2><i class='fas fa-link'></i> Ejemplo 5: Combinando Condiciones (AND y OR)</h2>\n<p>A veces necesitas verificar DOS cosas al mismo tiempo. Como: \"Para entrar al cine debes tener 13 años Y traer dinero\". Ambas deben ser verdaderas.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let edad = 15;\nlet tieneDinero = true;\nlet esFinDeSemana = false;\n\n// AND (&&) - Ambas condiciones deben ser verdaderas\nif (edad >= 13 && tieneDinero) {\n    console.log(\"Puedes ir al cine! 🎬\");\n}\n\n// OR (||) - Al menos una debe ser verdadera\nif (esFinDeSemana || edad < 18) {\n    console.log(\"Tienes descuento! 🎟️\");\n}\n\n// Combinación compleja\nif ((edad >= 18 && tieneDinero) || esFinDeSemana) {\n    console.log(\"Puedes ir a la función nocturna 🌙\");\n} else {\n    console.log(\"Solo funciones diurnas ☀️\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Puedes ir al cine! 🎬</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Tienes descuento! 🎟️</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Solo funciones diurnas ☀️</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>&& (AND)</strong> - Ambas condiciones deben ser TRUE para que el bloque se ejecute</li>\n<li><strong>|| (OR)</strong> - Con que UNA sea TRUE, el bloque se ejecuta</li>\n<li>Los <strong>paréntesis ()</strong> agrupan condiciones, como en matemáticas</li>\n<li><strong>Piensa lógicamente:</strong> \"Necesito esto Y esto\" usa &&, \"Necesito esto O esto\" usa ||</li>\n</ul>\n\n<h2><i class='fas fa-map-marked-alt'></i> Ejemplo 6: Caso Real - Sistema de Envíos</h2>\n<p>Veamos un ejemplo del mundo real: un sistema que calcula el costo de envío basado en el peso del paquete y la distancia.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let peso = 8; // kilos\nlet distancia = 350; // kilómetros\nlet costoEnvio = 0;\n\nif (peso <= 5 && distancia <= 100) {\n    costoEnvio = 50;\n    console.log(\"Envío económico local\");\n} else if (peso <= 5 && distancia <= 500) {\n    costoEnvio = 100;\n    console.log(\"Envío económico regional\");\n} else if (peso <= 10 && distancia <= 100) {\n    costoEnvio = 80;\n    console.log(\"Envío estándar local\");\n} else if (peso <= 10 && distancia <= 500) {\n    costoEnvio = 150;\n    console.log(\"Envío estándar regional\"); // ✓ Este caso\n} else {\n    costoEnvio = 250;\n    console.log(\"Envío premium o pesado\");\n}\n\nconsole.log(\"Costo total: $\" + costoEnvio);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Envío estándar regional</span></span>\n      <span class=\"console-line\">Costo total: $<span class=\"console-number\">150</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li>Combinamos múltiples condiciones con <strong>&&</strong> para crear reglas de negocio</li>\n<li>El orden importa: verificamos casos específicos primero, generales después</li>\n<li>Con peso=8 y distancia=350, cumple la 4ta condición</li>\n<li><strong>Lógica de negocio:</strong> Así es como las empresas reales calculan precios</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes</h2>\n\n<h3>❌ Error 1: Usar = en vez de == o ===</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let edad = 18;\n\n// ❌ INCORRECTO - Esto asigna valor, no compara\nif (edad = 20) {\n    console.log(\"Esto siempre se ejecuta\");\n}\n\n// ✓ CORRECTO - Esto compara\nif (edad == 18) {\n    console.log(\"Tienes 18 años\");\n}\n\n// ✓ AÚN MEJOR - === compara valor Y tipo\nif (edad === 18) {\n    console.log(\"Realmente tienes 18\");\n}</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p><strong>=</strong> asigna un valor (como x = 5). <strong>==</strong> compara valores. <strong>===</strong> compara valor y tipo (más estricto y recomendado). Confundirlos es uno de los errores más comunes en programación.</p>\n\n<h3>❌ Error 2: Olvidar las Llaves</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let temperatura = 30;\n\n// ❌ PELIGROSO - Solo la primera línea está en el if\nif (temperatura > 25)\n    console.log(\"Hace calor\");\n    console.log(\"Bebe agua\"); // Esto SIEMPRE se ejecuta\n\n// ✓ CORRECTO - Ambas líneas están en el if\nif (temperatura > 25) {\n    console.log(\"Hace calor\");\n    console.log(\"Bebe agua\");\n}</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>Sin llaves, solo la primera línea después del if es condicional. Siempre usa llaves {} aunque sea una sola línea. Es más claro y evita bugs.</p>\n\n<h3>❌ Error 3: Orden Incorrecto en Else If</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let puntos = 95;\n\n// ❌ INCORRECTO - Nunca llegará a verificar >= 90\nif (puntos >= 60) {\n    console.log(\"Aprobado\"); // Siempre ejecuta esto primero\n} else if (puntos >= 90) {\n    console.log(\"Excelente\"); // Nunca llega aquí\n}\n\n// ✓ CORRECTO - Verifica del más específico al más general\nif (puntos >= 90) {\n    console.log(\"Excelente\");\n} else if (puntos >= 60) {\n    console.log(\"Aprobado\");\n}</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>El programa verifica condiciones en orden y se detiene en la primera verdadera. Si pones condiciones generales primero, las específicas nunca se evaluarán. <strong>Regla de oro:</strong> de más específico a más general.</p>\n\n<h2><i class='fas fa-dumbbell'></i> Ejercicios para Practicar</h2>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 1: Sistema de Descuentos</h3>\n<p><strong>Objetivo:</strong> Crear un sistema que aplique descuentos basado en la cantidad de productos. 10+ productos = 20% descuento, 5-9 productos = 10% descuento, menos de 5 = sin descuento.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let cantidadProductos = 7;\nlet precioTotal = 500;\nlet descuento = 0;\n\nif (cantidadProductos >= 10) {\n    descuento = 0.20; // 20%\n    console.log(\"Descuento del 20%\");\n} else if (cantidadProductos >= 5) {\n    descuento = 0.10; // 10%\n    console.log(\"Descuento del 10%\");\n} else {\n    descuento = 0;\n    console.log(\"Sin descuento\");\n}\n\nlet precioFinal = precioTotal - (precioTotal * descuento);\nconsole.log(\"Precio final: $\" + precioFinal);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Descuento del 10%</span></span>\n      <span class=\"console-line\">Precio final: $<span class=\"console-number\">450</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 2: Clasificador de Temperatura</h3>\n<p><strong>Objetivo:</strong> Crear un programa que clasifique la temperatura en: Congelante (&lt;0°), Frío (0-15°), Templado (16-25°), Calor (26-35°), Extremo (&gt;35°).</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let temperatura = 22;\n\nif (temperatura < 0) {\n    console.log(\"❄️ Congelante - Abrígate bien\");\n} else if (temperatura <= 15) {\n    console.log(\"🧥 Frío - Necesitas chamarra\");\n} else if (temperatura <= 25) {\n    console.log(\"😊 Templado - Clima perfecto\");\n} else if (temperatura <= 35) {\n    console.log(\"☀️ Calor - Busca la sombra\");\n} else {\n    console.log(\"🔥 Extremo - Peligroso\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">😊 Templado - Clima perfecto</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 3: Control de Acceso</h3>\n<p><strong>Objetivo:</strong> Sistema de seguridad que permite acceso si la persona tiene credencial Y (es empleado O es administrador).</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let tieneCredencial = true;\nlet esEmpleado = false;\nlet esAdministrador = true;\n\nif (tieneCredencial && (esEmpleado || esAdministrador)) {\n    console.log(\"✅ Acceso concedido\");\n    console.log(\"Bienvenido al edificio\");\n} else if (!tieneCredencial) {\n    console.log(\"❌ Necesitas una credencial\");\n} else {\n    console.log(\"❌ No tienes permisos suficientes\");\n}</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">✅ Acceso concedido</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Bienvenido al edificio</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos Pro</h2>\n\n<h3>💡 Consejo 1: El Operador Ternario (If Corto)</h3>\n<p>Para condiciones simples con un solo if-else, existe una forma más corta y elegante llamada operador ternario.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let edad = 20;\n\n// Forma tradicional (4 líneas)\nlet mensaje;\nif (edad >= 18) {\n    mensaje = \"Eres mayor de edad\";\n} else {\n    mensaje = \"Eres menor de edad\";\n}\n\n// Operador ternario (1 línea)\n// condición ? valorSiTrue : valorSiFalse\nlet mensajeCorto = edad >= 18 ? \"Mayor de edad\" : \"Menor de edad\";\n\nconsole.log(mensaje);\nconsole.log(mensajeCorto);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Eres mayor de edad</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Mayor de edad</span></span>\n    </div>\n  </div>\n</div>\n\n<h3>💡 Consejo 2: Usa === en vez de ==</h3>\n<p>El operador === es más estricto y evita errores inesperados al comparar diferentes tipos de datos.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// == compara solo el valor (puede dar sorpresas)\nif (5 == \"5\") {\n    console.log(\"Son iguales con ==\"); // ✓ Se ejecuta\n}\n\n// === compara valor Y tipo (más seguro)\nif (5 === \"5\") {\n    console.log(\"Son iguales con ===\"); // ✗ NO se ejecuta\n}\n\n// Usa siempre === para evitar bugs\nif (5 === 5) {\n    console.log(\"Esto sí funciona\"); // ✓ Se ejecuta\n}</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 3: Extrae Condiciones Complejas a Variables</h3>\n<p>Si tu condición es muy larga, guárdala en una variable con un nombre descriptivo. Tu código será más legible.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">let edad = 25;\nlet tieneLicencia = true;\nlet tieneAuto = true;\nlet esDiurno = true;\n\n// ❌ Difícil de leer\nif (edad >= 18 && tieneLicencia && tieneAuto && esDiurno) {\n    console.log(\"Puedes conducir ahora\");\n}\n\n// ✓ Más claro y mantenible\nlet puedeConducir = edad >= 18 && tieneLicencia;\nlet tieneRecursos = tieneAuto && esDiurno;\n\nif (puedeConducir && tieneRecursos) {\n    console.log(\"Puedes conducir ahora\");\n}</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 4: El Return Temprano (Early Return)</h3>\n<p>En funciones, usa return para salir temprano en vez de anidar muchos if-else. Hace el código más limpio.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ Anidado y difícil de seguir\nfunction puedeVotar(edad, ciudadania) {\n    if (edad >= 18) {\n        if (ciudadania === \"mexicana\") {\n            return \"Puedes votar\";\n        } else {\n            return \"Necesitas ciudadanía mexicana\";\n        }\n    } else {\n        return \"Eres menor de edad\";\n    }\n}\n\n// ✓ Return temprano (más limpio)\nfunction puedeVotarMejor(edad, ciudadania) {\n    if (edad < 18) {\n        return \"Eres menor de edad\";\n    }\n    \n    if (ciudadania !== \"mexicana\") {\n        return \"Necesitas ciudadanía mexicana\";\n    }\n    \n    return \"Puedes votar\";\n}</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Casos de Uso en el Mundo Real</h2>\n<ul>\n<li><i class='fas fa-shopping-cart' style='color: #3b82f6;'></i> <strong>E-commerce:</strong> Validar que un producto esté en stock antes de permitir la compra, aplicar descuentos según el monto, verificar cupones</li>\n<li><i class='fas fa-user-shield' style='color: #8b5cf6;'></i> <strong>Seguridad:</strong> Verificar credenciales de login, controlar niveles de acceso (admin, usuario, invitado), validar permisos</li>\n<li><i class='fas fa-gamepad' style='color: #10b981;'></i> <strong>Videojuegos:</strong> Detectar colisiones, verificar condiciones de victoria/derrota, activar eventos especiales según el nivel del jugador</li>\n<li><i class='fas fa-chart-line' style='color: #f59e0b;'></i> <strong>Finanzas:</strong> Aprobar o rechazar préstamos según crédito, calcular intereses según el monto, alertar sobre gastos inusuales</li>\n<li><i class='fas fa-mobile-alt' style='color: #ec4899;'></i> <strong>Apps Móviles:</strong> Mostrar diferentes interfaces según el tamaño de pantalla, activar notificaciones según preferencias, modo oscuro/claro</li>\n</ul>\n\n<h2><i class='fas fa-brain'></i> Resumen: Lo que Debes Recordar</h2>\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <ul style=\"color: white; font-size: 1.05em; line-height: 1.8;\">\n    <li><strong>if:</strong> Ejecuta código solo SI la condición es verdadera</li>\n    <li><strong>else:</strong> Ejecuta código cuando el if es falso (plan B)</li>\n    <li><strong>else if:</strong> Evalúa múltiples condiciones en orden, ejecuta la primera verdadera</li>\n    <li><strong>Operadores:</strong> Usa === para comparar, && para \"Y\", || para \"O\"</li>\n    <li><strong>Orden importa:</strong> Pon condiciones específicas antes que generales</li>\n    <li><strong>Llaves {}:</strong> Siempre úsalas para evitar bugs, aunque sea una línea</li>\n    <li><strong>Piensa lógicamente:</strong> Las condicionales son decisiones del día a día en código</li>\n  </ul>\n</div>\n\n<h2><i class='fas fa-forward'></i> ¿Qué Sigue?</h2>\n<ol>\n<li><strong>Switch Statements:</strong> Otra forma de manejar múltiples condiciones cuando comparas un mismo valor contra varias opciones</li>\n<li><strong>Loops (Bucles):</strong> Aprende a repetir código con while y for, combinados con condicionales son super poderosos</li>\n<li><strong>Funciones:</strong> Empaqueta tu lógica condicional en funciones reutilizables para código más limpio y profesional</li>\n<li><strong>Arrays y Objetos:</strong> Combina condicionales con estructuras de datos para crear aplicaciones reales</li>\n</ol>\n\n<div style=\"background: linear-gradient(135deg, #10b981 0%, #059669 100%); border-radius: 16px; padding: 30px; margin-top: 40px; text-align: center; box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-graduation-cap'></i> ¡Felicitaciones!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Ahora dominas las condicionales, una de las herramientas más fundamentales en programación. Cada decisión que tome tu código desde ahora será gracias a lo que aprendiste hoy. ¡Sigue practicando y verás cómo todo cobra sentido! 🚀</p>\n</div>\n\n",
    "lastUpdated": "2025-10-25T19:47:01.053893"
  },
  "68fe9d9ce4a1bd0b0c2b56d9": {
    "title": "Domina las Funciones en JavaScript: Crea Código Reutilizable y Profesional",
    "language": "javascript",
    "level": "principiante",
    "duration": "50 min",
    "description": "Aprende a crear funciones en JavaScript desde cero hasta técnicas profesionales. Este tutorial te enseña cómo escribir código reutilizable, limpio y organizado usando funciones.\n\nDescubrirás qué son las funciones, cómo declararlas y llamarlas, trabajar con parámetros y argumentos, usar return para devolver valores, valores por defecto, y la sintaxis moderna de arrow functions (=>).\n\nIncluye ejemplos prácticos del mundo real (calculadoras, sistemas de validación, convertidores), ejercicios con soluciones completas, errores comunes explicados, y consejos profesionales como el principio de responsabilidad única y validación de parámetros. No es solo sintaxis: aprenderás a PENSAR en funciones y escribir código como los profesionales.",
    "content": "<h2><i class='fas fa-cube'></i> Funciones: El Superpoder de Reutilizar Código</h2>\n<p>Imagina que cada vez que quieras hacer un sándwich tienes que escribir las instrucciones completas: \"Saca el pan, unta la mayonesa, agrega jamón, agrega queso, cierra el pan\". ¿Y si lo haces 10 veces al día? ¡Sería agotador! Las funciones son como crear una receta llamada \"hacerSándwich()\" que puedes usar cuantas veces quieras con solo llamarla.</p>\n\n<h3><i class='fas fa-lightbulb'></i> ¿Qué aprenderás?</h3>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Qué son las funciones y por qué son esenciales</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Cómo crear y llamar funciones</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Parámetros y argumentos: hacer funciones flexibles</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Return: devolver valores desde tus funciones</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Aplicaciones prácticas del mundo real</li>\n</ul>\n\n<h2><i class='fas fa-book'></i> ¿Qué es una Función?</h2>\n<p>Una función es un <strong>bloque de código reutilizable</strong> que realiza una tarea específica. Es como un mini-programa dentro de tu programa. En lugar de escribir el mismo código una y otra vez, lo empaquetas en una función y lo llamas cuando lo necesites.</p>\n\n<p><strong>Analogía del mundo real:</strong> Piensa en tu control remoto de TV. Cuando presionas el botón \"power\", no necesitas saber cómo funciona internamente la televisión. Solo presionas el botón y funciona. Las funciones son igual: encapsulan complejidad y te dan una interfaz simple.</p>\n\n<h3><i class='fas fa-info-circle'></i> Definición</h3>\n<p>Una <strong>función</strong> es un conjunto de instrucciones que puedes ejecutar cuantas veces quieras simplemente llamándola por su nombre. Pueden recibir información (parámetros), procesarla, y devolver resultados (return).</p>\n\n<h2><i class='fas fa-code'></i> Ejemplo 1: Tu Primera Función (Sin Parámetros)</h2>\n<p>Empecemos con lo más básico: una función que simplemente ejecuta código cuando la llamas. No recibe información ni devuelve nada.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// 1. DECLARAR la función (crear la funcion)\nfunction saludar() {\n    console.log(\"¡Hola! Bienvenido 👋\");\n    console.log(\"Espero que tengas un gran día\");\n}\n\n// 2. LLAMAR la función (usar la funcion)\nsaludar();\nsaludar();  // Puedes llamarla cuantas veces quieras</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">¡Hola! Bienvenido 👋</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Espero que tengas un gran día</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">¡Hola! Bienvenido 👋</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Espero que tengas un gran día</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>function</strong> - Palabra clave que indica \"voy a crear una función\"</li>\n<li><strong>saludar</strong> - El nombre de tu función (como ponerle nombre a una receta)</li>\n<li><strong>()</strong> - Paréntesis vacíos porque esta función no recibe información</li>\n<li><strong>{}</strong> - Llaves que contienen el código que se ejecutará</li>\n<li><strong>saludar()</strong> - Así LLAMAS (ejecutas) la función. Sin esto, la función nunca se ejecuta</li>\n<li><strong>Clave:</strong> Declarar ≠ Ejecutar. Debes llamarla explícitamente</li>\n</ul>\n\n<h2><i class='fas fa-sliders-h'></i> Ejemplo 2: Funciones con Parámetros</h2>\n<p>Las funciones se vuelven poderosas cuando pueden recibir información. Es como tener una licuadora: puedes poner diferentes frutas y obtienes diferentes jugos.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Función con UN parámetro\nfunction saludarPersona(nombre) {\n    console.log(\"¡Hola \" + nombre + \"! 👋\");\n    console.log(\"Qué gusto verte\");\n}\n\n// Llamar con diferentes argumentos\nsaludarPersona(\"Ana\");\nsaludarPersona(\"Carlos\");\nsaludarPersona(\"María\");</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">¡Hola Ana! 👋</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Qué gusto verte</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">¡Hola Carlos! 👋</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Qué gusto verte</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">¡Hola María! 👋</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Qué gusto verte</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>nombre</strong> - Es un PARÁMETRO: un placeholder (espacio reservado) para recibir información</li>\n<li><strong>\"Ana\", \"Carlos\", \"María\"</strong> - Son ARGUMENTOS: los valores reales que pasas cuando llamas la función</li>\n<li>El parámetro actúa como una variable dentro de la función</li>\n<li>Cada vez que llamas la función con un argumento diferente, obtiene un resultado diferente</li>\n<li><strong>Piénsalo así:</strong> El parámetro es el molde, el argumento es el material que pones en el molde</li>\n</ul>\n\n<h2><i class='fas fa-layer-group'></i> Ejemplo 3: Múltiples Parámetros</h2>\n<p>Las funciones pueden recibir múltiples datos. Es como una calculadora que necesita dos números para sumarlos.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Función con MÚLTIPLES parámetros\nfunction presentar(nombre, edad, ciudad) {\n    console.log(\"Me llamo \" + nombre);\n    console.log(\"Tengo \" + edad + \" años\");\n    console.log(\"Vivo en \" + ciudad);\n    console.log(\"---\");\n}\n\n// Los argumentos deben ir en el mismo orden\npresentar(\"Luis\", 25, \"Ciudad de México\");\npresentar(\"Sofia\", 30, \"Guadalajara\");\n\n// ⚠️ El orden importa!\npresentar(28, \"Monterrey\", \"Pedro\"); // ❌ Incorrecto</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Me llamo Luis</span></span>\n      <span class=\"console-line\">Tengo <span class=\"console-number\">25</span> años</span>\n      <span class=\"console-line\"><span class=\"console-string\">Vivo en Ciudad de México</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Me llamo Sofia</span></span>\n      <span class=\"console-line\">Tengo <span class=\"console-number\">30</span> años</span>\n      <span class=\"console-line\"><span class=\"console-string\">Vivo en Guadalajara</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\">Me llamo <span class=\"console-number\">28</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Tengo Monterrey años</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Vivo en Pedro</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li>Los parámetros se separan con comas: <strong>(nombre, edad, ciudad)</strong></li>\n<li>Los argumentos deben pasarse <strong>en el mismo orden</strong> que los parámetros</li>\n<li>El primer argumento va al primer parámetro, el segundo al segundo, etc.</li>\n<li>Si cambias el orden, obtienes resultados incorrectos (como en el último ejemplo)</li>\n</ul>\n\n<h2><i class='fas fa-undo'></i> Ejemplo 4: Return - Devolver Valores</h2>\n<p>Hasta ahora, nuestras funciones solo imprimen. Pero el verdadero poder viene cuando pueden <strong>devolver</strong> valores que puedes usar en otras partes de tu código.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// SIN return (solo imprime)\nfunction sumarSinReturn(a, b) {\n    let resultado = a + b;\n    console.log(resultado); // Solo imprime\n}\n\n// CON return (devuelve el valor)\nfunction sumar(a, b) {\n    let resultado = a + b;\n    return resultado; // Devuelve el valor\n}\n\n// Usando la función sin return\nsumarSinReturn(5, 3);  // Imprime: 8\n// No puedo guardar el resultado\n\n// Usando la función con return\nlet miSuma = sumar(5, 3);  // Guardo el resultado\nconsole.log(\"La suma es: \" + miSuma);\nconsole.log(\"El doble es: \" + (miSuma * 2));\n\n// Puedo usar el resultado en operaciones\nlet total = sumar(10, 20) + sumar(5, 15);\nconsole.log(\"Total: \" + total);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-number\">8</span></span>\n      <span class=\"console-line\">La suma es: <span class=\"console-number\">8</span></span>\n      <span class=\"console-line\">El doble es: <span class=\"console-number\">16</span></span>\n      <span class=\"console-line\">Total: <span class=\"console-number\">50</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>return</strong> - Devuelve un valor desde la función al lugar donde fue llamada</li>\n<li>Sin return, la función solo ejecuta código pero no \"da nada de vuelta\"</li>\n<li>Con return, puedes guardar el resultado en variables y reutilizarlo</li>\n<li>Después de un return, la función termina inmediatamente</li>\n<li><strong>Regla de oro:</strong> Si necesitas usar el resultado después, usa return</li>\n</ul>\n\n<h2><i class='fas fa-calculator'></i> Ejemplo 5: Función Calculadora Completa</h2>\n<p>Creemos algo más práctico: una calculadora que puede sumar, restar, multiplicar y dividir.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function calculadora(num1, num2, operacion) {\n    if (operacion === \"suma\") {\n        return num1 + num2;\n    } else if (operacion === \"resta\") {\n        return num1 - num2;\n    } else if (operacion === \"multiplicacion\") {\n        return num1 * num2;\n    } else if (operacion === \"division\") {\n        if (num2 === 0) {\n            return \"Error: No se puede dividir entre 0\";\n        }\n        return num1 / num2;\n    } else {\n        return \"Operación no válida\";\n    }\n}\n\n// Usando la calculadora\nconsole.log(\"10 + 5 = \" + calculadora(10, 5, \"suma\"));\nconsole.log(\"10 - 5 = \" + calculadora(10, 5, \"resta\"));\nconsole.log(\"10 × 5 = \" + calculadora(10, 5, \"multiplicacion\"));\nconsole.log(\"10 ÷ 5 = \" + calculadora(10, 5, \"division\"));\nconsole.log(\"10 ÷ 0 = \" + calculadora(10, 0, \"division\"));</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">10 + 5 = <span class=\"console-number\">15</span></span>\n      <span class=\"console-line\">10 - 5 = <span class=\"console-number\">5</span></span>\n      <span class=\"console-line\">10 × 5 = <span class=\"console-number\">50</span></span>\n      <span class=\"console-line\">10 ÷ 5 = <span class=\"console-number\">2</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">10 ÷ 0 = Error: No se puede dividir entre 0</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li>Combinamos <strong>funciones con condicionales</strong> para crear lógica compleja</li>\n<li>La función toma 3 parámetros: dos números y la operación a realizar</li>\n<li>Según la operación, ejecuta diferentes cálculos</li>\n<li>Incluye validación (no dividir entre 0) para evitar errores</li>\n<li><strong>Poder real:</strong> Una sola función maneja múltiples casos de uso</li>\n</ul>\n\n<h2><i class='fas fa-gift'></i> Ejemplo 6: Parámetros con Valores por Defecto</h2>\n<p>¿Qué pasa si olvidas pasar un argumento? Puedes definir valores por defecto para evitar errores.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Sin valores por defecto\nfunction crearUsuario(nombre, rol) {\n    console.log(\"Usuario: \" + nombre);\n    console.log(\"Rol: \" + rol);\n    console.log(\"---\");\n}\n\ncrearUsuario(\"Ana\", \"Admin\");\ncrearUsuario(\"Carlos\"); // rol será undefined ❌\n\n// Con valores por defecto\nfunction crearUsuarioMejor(nombre, rol = \"Usuario\") {\n    console.log(\"Usuario: \" + nombre);\n    console.log(\"Rol: \" + rol);\n    console.log(\"---\");\n}\n\ncrearUsuarioMejor(\"Ana\", \"Admin\");\ncrearUsuarioMejor(\"Carlos\"); // rol será \"Usuario\" ✓</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Usuario: Ana</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Rol: Admin</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Usuario: Carlos</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Rol: undefined</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Usuario: Ana</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Rol: Admin</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Usuario: Carlos</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Rol: Usuario</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>rol = \"Usuario\"</strong> - Define un valor por defecto para el parámetro</li>\n<li>Si NO pasas ese argumento, usa el valor por defecto automáticamente</li>\n<li>Si SÍ pasas el argumento, usa el valor que pasaste</li>\n<li>Los valores por defecto hacen tus funciones más flexibles y seguras</li>\n</ul>\n\n<h2><i class='fas fa-random'></i> Ejemplo 7: Arrow Functions (Funciones Flecha)</h2>\n<p>Una forma moderna y más corta de escribir funciones. Es sintaxis alternativa, funcionan igual.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Función tradicional\nfunction cuadrado(numero) {\n    return numero * numero;\n}\n\n// Arrow function (equivalente)\nconst cuadradoArrow = (numero) => {\n    return numero * numero;\n};\n\n// Arrow function ultra corta (una sola línea)\nconst cuadradoCorto = (numero) => numero * numero;\n\n// Sin parámetros\nconst saludarArrow = () => console.log(\"¡Hola!\");\n\n// Un solo parámetro (puedes omitir paréntesis)\nconst doble = numero => numero * 2;\n\n// Probando todas\nconsole.log(cuadrado(5));\nconsole.log(cuadradoArrow(5));\nconsole.log(cuadradoCorto(5));\nsaludarArrow();\nconsole.log(doble(7));</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-number\">25</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">25</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">25</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">¡Hola!</span></span>\n      <span class=\"console-line\"><span class=\"console-number\">14</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>=></strong> - La \"flecha\" reemplaza la palabra function</li>\n<li>Si el cuerpo es una sola expresión, puedes omitir {} y return</li>\n<li>Si hay un solo parámetro, puedes omitir los paréntesis</li>\n<li>Las arrow functions son populares en código moderno de JavaScript</li>\n<li><strong>Cuándo usar:</strong> Funciones cortas y simples. Para principiantes, la sintaxis tradicional es más clara</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes</h2>\n\n<h3>❌ Error 1: Olvidar los Paréntesis al Llamar</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function saludar() {\n    return \"¡Hola!\";\n}\n\n// ❌ INCORRECTO - Sin paréntesis no ejecuta\nconsole.log(saludar);  // Imprime la función en sí\n\n// ✓ CORRECTO - Con paréntesis ejecuta\nconsole.log(saludar());  // Imprime \"¡Hola!\"</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p><strong>nombreFuncion</strong> sin paréntesis es solo una referencia a la función. <strong>nombreFuncion()</strong> con paréntesis EJECUTA la función. Siempre usa () para llamar.</p>\n\n<h3>❌ Error 2: Usar Variables Después del Return</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ INCORRECTO\nfunction calcular(x) {\n    return x * 2;\n    console.log(\"Terminado\"); // ⚠️ NUNCA se ejecuta\n    let resultado = x + 5;     // ⚠️ NUNCA se ejecuta\n}\n\n// ✓ CORRECTO\nfunction calcularBien(x) {\n    let resultado = x * 2;\n    console.log(\"Calculando...\");\n    return resultado; // Return al final\n}</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>El <strong>return termina la función inmediatamente</strong>. Todo el código después del return es \"código muerto\" que nunca se ejecutará. Pon el return al final.</p>\n\n<h3>❌ Error 3: No Devolver Nada (undefined)</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ PROBLEMA - No devuelve nada\nfunction multiplicar(a, b) {\n    let resultado = a * b;\n    // ⚠️ Falta return\n}\n\nlet miCalculo = multiplicar(5, 3);\nconsole.log(miCalculo); // undefined ❌\n\n// ✓ CORRECTO\nfunction multiplicarBien(a, b) {\n    let resultado = a * b;\n    return resultado; // ✓ Ahora sí devuelve\n}\n\nlet miCalculoBien = multiplicarBien(5, 3);\nconsole.log(miCalculoBien); // 15 ✓</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>Si tu función debe devolver algo pero olvidas el <strong>return</strong>, devolverá <strong>undefined</strong> por defecto. Si necesitas usar el resultado, siempre incluye return.</p>\n\n<h2><i class='fas fa-dumbbell'></i> Ejercicios para Practicar</h2>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 1: Convertidor de Temperatura</h3>\n<p><strong>Objetivo:</strong> Crear una función que convierta grados Celsius a Fahrenheit. Fórmula: F = C × 9/5 + 32</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function celsiusAFahrenheit(celsius) {\n    let fahrenheit = celsius * 9/5 + 32;\n    return fahrenheit;\n}\n\n// Probando la función\nconsole.log(\"0°C = \" + celsiusAFahrenheit(0) + \"°F\");\nconsole.log(\"25°C = \" + celsiusAFahrenheit(25) + \"°F\");\nconsole.log(\"100°C = \" + celsiusAFahrenheit(100) + \"°F\");</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">0°C = <span class=\"console-number\">32</span>°F</span>\n      <span class=\"console-line\">25°C = <span class=\"console-number\">77</span>°F</span>\n      <span class=\"console-line\">100°C = <span class=\"console-number\">212</span>°F</span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 2: Validador de Edad</h3>\n<p><strong>Objetivo:</strong> Crear una función que determine si una persona puede votar (18+), manejar, obtener licencia de conducir (16+), o ninguna de las anteriores.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function verificarPermisos(nombre, edad) {\n    console.log(\"--- Verificando a \" + nombre + \" ---\");\n    \n    if (edad >= 18) {\n        return \"✓ Puedes votar y manejar\";\n    } else if (edad >= 16) {\n        return \"✓ Puedes obtener licencia de conducir\";\n    } else {\n        return \"✗ Aún no tienes permisos\";\n    }\n}\n\nconsole.log(verificarPermisos(\"Ana\", 20));\nconsole.log(verificarPermisos(\"Carlos\", 17));\nconsole.log(verificarPermisos(\"María\", 14));</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">--- Verificando a Ana ---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">✓ Puedes votar y manejar</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">--- Verificando a Carlos ---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">✓ Puedes obtener licencia de conducir</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">--- Verificando a María ---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">✗ Aún no tienes permisos</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 3: Calculadora de Propina</h3>\n<p><strong>Objetivo:</strong> Función que calcule la propina según el total de la cuenta y el porcentaje deseado, devolviendo el total a pagar.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function calcularPropina(cuenta, porcentaje = 15) {\n    let propina = cuenta * (porcentaje / 100);\n    let total = cuenta + propina;\n    \n    console.log(\"Cuenta: $\" + cuenta);\n    console.log(\"Propina (\" + porcentaje + \"%): $\" + propina);\n    console.log(\"Total a pagar: $\" + total);\n    console.log(\"---\");\n    \n    return total;\n}\n\n// Usando valores por defecto\ncalcularPropina(200);\n\n// Especificando porcentaje\ncalcularPropina(500, 20);\ncalcularPropina(150, 10);</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Cuenta: $<span class=\"console-number\">200</span></span>\n      <span class=\"console-line\">Propina (<span class=\"console-number\">15</span>%): $<span class=\"console-number\">30</span></span>\n      <span class=\"console-line\">Total a pagar: $<span class=\"console-number\">230</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\">Cuenta: $<span class=\"console-number\">500</span></span>\n      <span class=\"console-line\">Propina (<span class=\"console-number\">20</span>%): $<span class=\"console-number\">100</span></span>\n      <span class=\"console-line\">Total a pagar: $<span class=\"console-number\">600</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\">Cuenta: $<span class=\"console-number\">150</span></span>\n      <span class=\"console-line\">Propina (<span class=\"console-number\">10</span>%): $<span class=\"console-number\">15</span></span>\n      <span class=\"console-line\">Total a pagar: $<span class=\"console-number\">165</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 4: Generador de Contraseñas Simples</h3>\n<p><strong>Objetivo:</strong> Crear una función que genere una contraseña combinando nombre, año de nacimiento y un número aleatorio.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function generarPassword(nombre, año) {\n    // Math.random() genera número entre 0 y 1\n    // Lo multiplicamos por 1000 y redondeamos\n    let numeroAleatorio = Math.floor(Math.random() * 1000);\n    \n    let password = nombre + año + numeroAleatorio + \"!\";\n    \n    return password;\n}\n\nconsole.log(\"Tu contraseña: \" + generarPassword(\"Ana\", 1995));\nconsole.log(\"Tu contraseña: \" + generarPassword(\"Carlos\", 2000));\nconsole.log(\"Tu contraseña: \" + generarPassword(\"Luis\", 1988));</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">Tu contraseña: Ana1995427!</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Tu contraseña: Carlos2000891!</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">Tu contraseña: Luis1988156!</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos Pro</h2>\n\n<h3>💡 Consejo 1: Nombres Descriptivos de Funciones</h3>\n<p>El nombre de tu función debe explicar QUÉ hace. Usa verbos al inicio para indicar acciones.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ Nombres vagos o confusos\nfunction x(a, b) { return a + b; }\nfunction cosa(numero) { return numero * 2; }\nfunction hacer() { console.log(\"algo\"); }\n\n// ✓ Nombres claros y descriptivos\nfunction sumarNumeros(a, b) { return a + b; }\nfunction calcularDoble(numero) { return numero * 2; }\nfunction enviarCorreoNotificacion() { console.log(\"Enviando...\"); }\n\n// Convenciones comunes:\n// - calcular...() para cálculos\n// - obtener...() o get...() para recuperar datos\n// - validar...() o es...() para verificaciones\n// - crear...() para construir objetos\n// - enviar...() para operaciones de salida</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 2: Una Función, Una Responsabilidad</h3>\n<p>Cada función debe hacer UNA cosa y hacerla bien. Si hace muchas cosas, divídela en funciones más pequeñas.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ Función que hace DEMASIADO\nfunction procesarCompra(producto, precio, cliente, email) {\n    let total = precio * 1.16; // calcular IVA\n    let descuento = total * 0.1; // calcular descuento\n    total = total - descuento;\n    console.log(\"Enviando email a \" + email);\n    console.log(\"Guardando en base de datos\");\n    return total;\n}\n\n// ✓ Dividir en funciones pequeñas y claras\nfunction calcularTotal(precio) {\n    return precio * 1.16;\n}\n\nfunction aplicarDescuento(total) {\n    return total * 0.9; // 10% descuento\n}\n\nfunction enviarEmailConfirmacion(email) {\n    console.log(\"Enviando email a \" + email);\n}\n\n// Ahora es más fácil de usar y mantener\nlet total = calcularTotal(100);\ntotal = aplicarDescuento(total);\nenviarEmailConfirmacion(\"cliente@email.com\");</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 3: Documentar Funciones Complejas</h3>\n<p>Para funciones complejas, agrega comentarios explicando qué hace, qué recibe, y qué devuelve.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">/**\n * Calcula el precio final de un producto con IVA y descuento\n * @param {number} precioBase - Precio sin impuestos\n * @param {number} porcentajeDescuento - Descuento a aplicar (0-100)\n * @returns {number} Precio final con IVA y descuento aplicados\n */\nfunction calcularPrecioFinal(precioBase, porcentajeDescuento = 0) {\n    // Aplicar IVA del 16%\n    let conIVA = precioBase * 1.16;\n    \n    // Aplicar descuento si existe\n    let descuento = conIVA * (porcentajeDescuento / 100);\n    let precioFinal = conIVA - descuento;\n    \n    return precioFinal;\n}\n\n// Ahora es claro qué hace y cómo usarla\nconsole.log(calcularPrecioFinal(100, 10)); // 104.4</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 4: Validar Parámetros</h3>\n<p>Siempre valida que los parámetros sean del tipo esperado para evitar errores inesperados.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ Sin validación (puede fallar)\nfunction dividir(a, b) {\n    return a / b;\n}\n\n// ✓ Con validación (más robusto)\nfunction dividirSeguro(a, b) {\n    // Validar que sean números\n    if (typeof a !== 'number' || typeof b !== 'number') {\n        return \"Error: Ambos valores deben ser números\";\n    }\n    \n    // Validar división entre cero\n    if (b === 0) {\n        return \"Error: No se puede dividir entre cero\";\n    }\n    \n    return a / b;\n}\n\nconsole.log(dividirSeguro(10, 2));      // 5\nconsole.log(dividirSeguro(10, 0));      // Error\nconsole.log(dividirSeguro(\"10\", 2));    // Error</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Casos de Uso en el Mundo Real</h2>\n<ul>\n<li><i class='fas fa-shopping-cart' style='color: #3b82f6;'></i> <strong>E-commerce:</strong> Funciones para calcular totales, aplicar cupones, validar stock, calcular envío</li>\n<li><i class='fas fa-lock' style='color: #8b5cf6;'></i> <strong>Autenticación:</strong> Validar contraseñas, verificar emails, generar tokens, hashear datos sensibles</li>\n<li><i class='fas fa-chart-bar' style='color: #10b981;'></i> <strong>Análisis de Datos:</strong> Calcular promedios, filtrar datos, generar reportes, formatear información</li>\n<li><i class='fas fa-envelope' style='color: #f59e0b;'></i> <strong>Comunicaciones:</strong> Formatear mensajes, validar emails, enviar notificaciones, generar plantillas</li>\n<li><i class='fas fa-gamepad' style='color: #ec4899;'></i> <strong>Videojuegos:</strong> Calcular puntuaciones, gestionar niveles, validar movimientos, actualizar estados</li>\n</ul>\n\n<h2><i class='fas fa-brain'></i> Resumen: Lo que Debes Recordar</h2>\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <ul style=\"color: white; font-size: 1.05em; line-height: 1.8;\">\n    <li><strong>Funciones:</strong> Bloques de código reutilizables que encapsulan lógica</li>\n    <li><strong>Declarar vs Llamar:</strong> Declara con function nombre(), llama con nombre()</li>\n    <li><strong>Parámetros:</strong> Variables que reciben valores cuando llamas la función</li>\n    <li><strong>Return:</strong> Devuelve valores para usar fuera de la función</li>\n    <li><strong>Valores por defecto:</strong> Protegen tu función de argumentos faltantes</li>\n    <li><strong>Arrow functions:</strong> Sintaxis moderna y compacta (=>) para funciones simples</li>\n    <li><strong>Principio clave:</strong> Una función debe hacer una cosa y hacerla bien</li>\n  </ul>\n</div>\n\n<h2><i class='fas fa-forward'></i> ¿Qué Sigue?</h2>\n<ol>\n<li><strong>Scope y Closures:</strong> Entender dónde viven las variables y cómo las funciones \"recuerdan\" su contexto</li>\n<li><strong>Funciones de Orden Superior:</strong> Funciones que reciben otras funciones como parámetros (callbacks)</li>\n<li><strong>Métodos de Arrays:</strong> map(), filter(), reduce() - funciones poderosas para manipular arrays</li>\n<li><strong>Programación Asíncrona:</strong> Callbacks, Promises y async/await para operaciones que toman tiempo</li>\n</ol>\n\n<div style=\"background: linear-gradient(135deg, #10b981 0%, #059669 100%); border-radius: 16px; padding: 30px; margin-top: 40px; text-align: center; box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-graduation-cap'></i> ¡Felicitaciones!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has dominado uno de los conceptos más importantes en programación: las funciones. Ahora puedes escribir código limpio, reutilizable y organizado. ¡Las funciones son el corazón de todo buen código! Sigue practicando y verás cómo todo tu código mejora exponencialmente. 🚀</p>\n</div>\n\n",
    "lastUpdated": "2025-10-26T16:18:25.594143"
  },
  "68fea434e4a1bd0b0c2b56da": {
    "title": "Domina el DOM: Aprende a Seleccionar Elementos en JavaScript",
    "language": "javascript",
    "level": "principiante",
    "duration": "45 min",
    "description": "Aprende qué es el DOM (Document Object Model) y cómo seleccionar cualquier elemento de tu página web con JavaScript. Este tutorial te enseña desde los conceptos fundamentales hasta técnicas avanzadas de selección.\n\nDescubrirás qué es el DOM y por qué es esencial, cómo usar getElementById para selecciones rápidas por ID, dominar querySelector y querySelectorAll con selectores CSS, navegar entre elementos (padres, hijos, hermanos), y las diferencias entre cada método para saber cuándo usar cada uno.\n\nIncluye ejemplos interactivos con vistas previas en vivo, ejercicios prácticos con soluciones, errores comunes explicados (como el temido \"null\"), y consejos profesionales sobre performance y debugging. Es la base fundamental para manipular páginas web dinámicamente.",
    "content": "// Tip: Si tienes ID, usa getElementById (es más rápido que querySelector)</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 3: Usa la Consola del Navegador para Practicar</h3>\n<p>Puedes experimentar con selectores directamente en la consola de tu navegador (F12).</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Abre la consola en cualquier página web (F12) y prueba:\n\n// Ver todos los párrafos\nconsole.log(document.querySelectorAll('p'));\n\n// Contar cuántas imágenes hay\nconsole.log('Imágenes:', document.querySelectorAll('img').length);\n\n// Seleccionar y modificar en vivo\ndocument.querySelector('h1').style.color = 'red';\n\n// Shortcut de la consola: $() es como querySelector()\n$('h1').style.color = 'blue';\n\n// $() es como querySelectorAll()\n$('p').forEach(p => console.log(p.textContent));</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 4: Aprende a Leer Errores del DOM</h3>\n<p>Los errores te dan pistas sobre qué salió mal. Aprende a interpretarlos.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Error común y su significado:\n\n// \"Cannot read property 'textContent' of null\"\n// ➜ Significa: Intentas usar un elemento que no existe (null)\n// ➜ Solución: Verifica que el selector sea correcto y el elemento exista\n\n// \"Uncaught TypeError: X is not a function\"\n// ➜ Significa: Intentas usar forEach en algo que no es una lista\n// ➜ Solución: Usa querySelectorAll en vez de querySelector\n\n// \"Failed to execute 'querySelector' on 'Document': 'X' is not a valid selector\"\n// ➜ Significa: Tu selector CSS tiene un error de sintaxis\n// ➜ Solución: Revisa puntos, numerales y sintaxis del selector</code></pre>\n  </div>\n</div>\n\n<h2><i class='fas fa-rocket'></i> Casos de Uso en el Mundo Real</h2>\n<ul>\n<li><i class='fas fa-shopping-cart' style='color: #3b82f6;'></i> <strong>E-commerce:</strong> Seleccionar productos, actualizar precios dinámicamente, modificar cantidades en el carrito</li>\n<li><i class='fas fa-list-check' style='color: #8b5cf6;'></i> <strong>To-Do Apps:</strong> Seleccionar tareas para marcarlas como completadas, filtrar por estado, eliminar elementos</li>\n<li><i class='fas fa-comments' style='color: #10b981;'></i> <strong>Chats y Formularios:</strong> Seleccionar inputs para validación, encontrar mensajes específicos, navegar entre campos</li>\n<li><i class='fas fa-images' style='color: #f59e0b;'></i> <strong>Galerías:</strong> Seleccionar imágenes para zoom, carruseles, lightboxes, navegación entre fotos</li>\n<li><i class='fas fa-bars' style='color: #ec4899;'></i> <strong>Menús de Navegación:</strong> Seleccionar items del menú, resaltar página actual, mostrar/ocultar submenús</li>\n</ul>\n\n<h2><i class='fas fa-brain'></i> Resumen: Lo que Debes Recordar</h2>\n<div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 16px; padding: 30px; margin-top: 30px; box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);\">\n  <ul style=\"color: white; font-size: 1.05em; line-height: 1.8;\">\n    <li><strong>DOM:</strong> Es el árbol de objetos que representa tu HTML en JavaScript</li>\n    <li><strong>getElementById:</strong> Rápido y directo para IDs únicos (sin #)</li>\n    <li><strong>querySelector:</strong> Flexible, usa selectores CSS, devuelve el primero</li>\n    <li><strong>querySelectorAll:</strong> Igual que querySelector pero devuelve TODOS los elementos</li>\n    <li><strong>Sintaxis CSS:</strong> .clase para clases, #id para IDs, etiqueta para tags</li>\n    <li><strong>Siempre verifica:</strong> Los elementos pueden ser null, valida antes de usar</li>\n    <li><strong>Navegación:</strong> parentElement, children, nextSibling para moverse por el DOM</li>\n  </ul>\n</div>\n\n<h2><i class='fas fa-forward'></i> ¿Qué Sigue?</h2>\n<ol>\n<li><strong>Manipulación del DOM:</strong> Ahora que sabes seleccionar, aprende a cambiar contenido (textContent, innerHTML), modificar estilos y atributos</li>\n<li><strong>Eventos:</strong> Hacer que tus elementos respondan a clicks, hover, teclas - la verdadera interactividad</li>\n<li><strong>Crear y Eliminar Elementos:</strong> Construir elementos dinámicamente desde JavaScript, no solo modificar los existentes</li>\n<li><strong>Proyectos Reales:</strong> Combinar selección + manipulación + eventos para crear aplicaciones completas</li>\n</ol>\n\n<div style=\"background: linear-gradient(135deg, #10b981 0%, #059669 100%); border-radius: 16px; padding: 30px; margin-top: 40px; text-align: center; box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);\">\n  <h3 style=\"color: white; margin-bottom: 12px; font-size: 1.8em;\"><i class='fas fa-graduation-cap'></i> ¡Felicitaciones!</h3>\n  <p style=\"color: white; margin: 0; font-size: 1.1em;\">Has dominado la base del DOM: seleccionar elementos. Esta es la habilidad fundamental que necesitas para manipular páginas web con JavaScript. Ahora puedes \"tocar\" cualquier parte de tu página. ¡El siguiente paso es aprender a modificarla! 🚀</p>\n</div>\n\n<!-- \n═══════════════════════════════════════════════════════════════\nGUÍA RÁPIDA DE CLASES DE PRISM.JS:\n═══════════════════════════════════════════════════════════════\n\nLENGUAJES:\n- HTML/XML:     language-markup\n- CSS:          language-css  \n- JavaScript:   language-javascript\n- Python:       language-python\n- Java:         language-java\n\nCONSOLA (para resultados de JavaScript/Python):\n- Línea normal:     <span class=\"console-line\">texto</span>\n- Número:           <span class=\"console-number\">123</span>\n- String:           <span class=\"console-string\">\"texto\"</span>\n- Boolean:          <span class=\"console-boolean\">true</span>\n- Comentario:       <span class=\"console-comment\">// comentario</span>\n- Error:            <span class=\"console-error\">Error: mensaje</span>\n\nESTRUCTURA DE TABS:\n1. Para código con vista previa visual (HTML/CSS):\n   - Tab 1: \"Código\" con <i class=\"fas fa-code\"></i>\n   - Tab 2: \"Vista Previa\" con <i class=\"fas fa-eye\"></i>\n\n2. Para código con resultado de consola (JS/Python):\n   - Tab 1: \"Código\" con <i class=\"fas fa-code\"></i>\n   - Tab 2: \"Resultado\" con <i class=\"fas fa-terminal\"></i>\n\n3. Para código sin preview (CSS puro, ejemplos cortos):\n   - Solo Tab: \"Código\" con <i class=\"fas fa-code\"></i>\n\nESCAPAR HTML:\n- Usar &lt; en lugar de <\n- Usar &gt; en lugar de >\n- Ejemplo: &lt;div&gt; se muestra como <div>\n\n═══════════════════════════════════════════════════════════════\n--><h2><i class='fas fa-sitemap'></i> El DOM: El Puente Entre JavaScript y tu Página Web</h2>\n<p>Imagina que tu página web es una casa. El HTML es la estructura (paredes, techo, puertas), el CSS es la decoración (colores, muebles), y JavaScript es... ¿tú? Pero, ¿cómo interactúas con la casa? Necesitas saber dónde está cada cosa. El DOM es ese <strong>mapa detallado</strong> que te dice dónde está cada elemento para que puedas modificarlo, moverlo o eliminarlo.</p>\n\n<h3><i class='fas fa-lightbulb'></i> ¿Qué aprenderás?</h3>\n<ul>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Qué es el DOM y por qué es fundamental</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Cómo seleccionar elementos con getElementById</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Usar querySelector y querySelectorAll (los más poderosos)</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Diferencias entre métodos y cuándo usar cada uno</li>\n<li><i class='fas fa-check' style='color: #10b981;'></i> Aplicaciones prácticas con ejemplos reales</li>\n</ul>\n\n<h2><i class='fas fa-book'></i> ¿Qué es el DOM?</h2>\n<p>El <strong>DOM (Document Object Model)</strong> es una representación en forma de árbol de tu documento HTML. Cuando el navegador carga tu página, crea automáticamente este \"modelo\" donde cada etiqueta HTML se convierte en un <strong>objeto de JavaScript</strong> que puedes manipular.</p>\n\n<p><strong>Analogía del mundo real:</strong> Piensa en un organigrama de una empresa. El CEO está arriba, luego los directores, luego los gerentes, y así sucesivamente. El DOM funciona igual: &lt;html&gt; es la raíz, dentro está &lt;body&gt;, y dentro de body están todos tus elementos (divs, párrafos, botones, etc.).</p>\n\n<h3><i class='fas fa-info-circle'></i> Definición</h3>\n<p>El <strong>DOM</strong> es una interfaz de programación que representa tu HTML como objetos de JavaScript. Te permite acceder, modificar, agregar o eliminar elementos de tu página dinámicamente usando código.</p>\n\n<h2><i class='fas fa-tree'></i> Visualizando el DOM</h2>\n<p>Veamos cómo el navegador convierte tu HTML en un árbol DOM:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código HTML\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Mi Página&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Bienvenido&lt;/h1&gt;\n    &lt;div&gt;\n      &lt;p&gt;Este es un párrafo&lt;/p&gt;\n      &lt;button&gt;Click aquí&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n&lt;!-- El navegador lo convierte en un árbol:\n     html\n     ├── head\n     │   └── title\n     └── body\n         ├── h1\n         └── div\n             ├── p\n             └── button\n--&gt;</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li>Cada etiqueta HTML se convierte en un <strong>nodo</strong> (punto) en el árbol</li>\n<li>Los elementos anidados son <strong>hijos</strong> de sus elementos contenedores</li>\n<li>JavaScript puede navegar este árbol para encontrar cualquier elemento</li>\n<li><strong>Clave:</strong> Todo en tu página es accesible desde JavaScript a través del DOM</li>\n</ul>\n\n<h2><i class='fas fa-code'></i> Ejemplo 1: getElementById - Seleccionar por ID</h2>\n<p>El método más directo: cada elemento con un ID único puede ser seleccionado instantáneamente. Es como buscar a alguien por su número de identificación oficial.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    .container { padding: 20px; background: #1e293b; border-radius: 8px; }\n    #titulo { color: #3b82f6; }\n    #descripcion { color: #94a3b8; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div class=\"container\"&gt;\n    &lt;h2 id=\"titulo\"&gt;Título Original&lt;/h2&gt;\n    &lt;p id=\"descripcion\"&gt;Descripción original&lt;/p&gt;\n    &lt;button onclick=\"cambiarContenido()\"&gt;Cambiar con getElementById&lt;/button&gt;\n  &lt;/div&gt;\n\n  &lt;script&gt;\n    function cambiarContenido() {\n      // Seleccionar elementos por su ID\n      let titulo = document.getElementById('titulo');\n      let descripcion = document.getElementById('descripcion');\n      \n      // Verificar que existen\n      console.log(titulo);        // Muestra el elemento\n      console.log(descripcion);   // Muestra el elemento\n      \n      // Cambiar su contenido\n      titulo.textContent = '¡Título Cambiado!';\n      descripcion.textContent = 'Nueva descripción desde JavaScript';\n    }\n  &lt;/script&gt;</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>JavaScript se ejecuta línea por línea. Si intentas seleccionar un elemento que aún no se ha cargado, obtendrás null. <strong>Soluciones:</strong> Pon el script al final del body, o usa DOMContentLoaded para esperar.</p>\n\n<h2><i class='fas fa-dumbbell'></i> Ejercicios para Practicar</h2>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 1: Sistema de Destacado</h3>\n<p><strong>Objetivo:</strong> Seleccionar todos los párrafos de una página y destacar el segundo párrafo cambiando su texto.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    .parrafo { padding: 10px; margin: 5px 0; background: #334155; color: #e2e8f0; border-radius: 4px; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=\"contenido\"&gt;\n    &lt;p class=\"parrafo\"&gt;Primer párrafo&lt;/p&gt;\n    &lt;p class=\"parrafo\"&gt;Segundo párrafo&lt;/p&gt;\n    &lt;p class=\"parrafo\"&gt;Tercer párrafo&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;button onclick=\"destacarSegundo()\"&gt;Destacar Segundo&lt;/button&gt;\n\n  &lt;script&gt;\n    function destacarSegundo() {\n      // Seleccionar todos los párrafos\n      let parrafos = document.querySelectorAll('.parrafo');\n      \n      // Verificar que existan al menos 2\n      if (parrafos.length &gt;= 2) {\n        // El índice 1 es el segundo elemento (empiezan en 0)\n        parrafos[1].textContent = '⭐ ¡Este es el segundo párrafo destacado!';\n        parrafos[1].style.background = '#f59e0b';\n        parrafos[1].style.fontWeight = 'bold';\n      }\n    }\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <div id=\"ej1-contenido\">\n          <p class=\"ej1-parrafo\" style=\"padding: 10px; margin: 5px 0; background: #334155; color: #e2e8f0; border-radius: 4px;\">Primer párrafo</p>\n          <p class=\"ej1-parrafo\" style=\"padding: 10px; margin: 5px 0; background: #334155; color: #e2e8f0; border-radius: 4px;\">Segundo párrafo</p>\n          <p class=\"ej1-parrafo\" style=\"padding: 10px; margin: 5px 0; background: #334155; color: #e2e8f0; border-radius: 4px;\">Tercer párrafo</p>\n        </div>\n        <button onclick=\"\n          let parrafos = document.querySelectorAll('.ej1-parrafo');\n          if (parrafos.length >= 2) {\n            parrafos[1].textContent = '⭐ ¡Este es el segundo párrafo destacado!';\n            parrafos[1].style.background = '#f59e0b';\n            parrafos[1].style.fontWeight = 'bold';\n          }\n        \" style=\"padding: 8px 16px; background: #3b82f6; color: white; border: none; border-radius: 4px; cursor: pointer; margin-top: 10px;\">\n          Destacar Segundo\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 2: Contador de Elementos</h3>\n<p><strong>Objetivo:</strong> Crear una función que cuente cuántos elementos de cada tipo hay en la página y muestre el resultado.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// HTML imaginario con varios elementos\n\nfunction contarElementos() {\n  // Contar diferentes tipos de elementos\n  let parrafos = document.querySelectorAll('p');\n  let divs = document.querySelectorAll('div');\n  let botones = document.querySelectorAll('button');\n  let imagenes = document.querySelectorAll('img');\n  \n  // Mostrar resultados\n  console.log('📊 Reporte de elementos en la página:');\n  console.log('Párrafos (p):', parrafos.length);\n  console.log('Divs:', divs.length);\n  console.log('Botones:', botones.length);\n  console.log('Imágenes:', imagenes.length);\n  \n  // Calcular total\n  let total = parrafos.length + divs.length + botones.length + imagenes.length;\n  console.log('Total:', total);\n  \n  return total;\n}\n\n// Ejecutar\ncontarElementos();</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">📊 Reporte de elementos en la página:</span></span>\n      <span class=\"console-line\">Párrafos (p): <span class=\"console-number\">15</span></span>\n      <span class=\"console-line\">Divs: <span class=\"console-number\">8</span></span>\n      <span class=\"console-line\">Botones: <span class=\"console-number\">6</span></span>\n      <span class=\"console-line\">Imágenes: <span class=\"console-number\">3</span></span>\n      <span class=\"console-line\">Total: <span class=\"console-number\">32</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 3: Navegador de Hermanos</h3>\n<p><strong>Objetivo:</strong> Seleccionar un elemento y mostrar información sobre sus hermanos (elementos al mismo nivel).</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// HTML imaginario:\n// &lt;div&gt;\n//   &lt;p&gt;Hermano 1&lt;/p&gt;\n//   &lt;p id=\"medio\"&gt;Elemento medio&lt;/p&gt;\n//   &lt;p&gt;Hermano 3&lt;/p&gt;\n// &lt;/div&gt;\n\nfunction explorarHermanos() {\n  // Seleccionar el elemento del medio\n  let medio = document.getElementById('medio');\n  \n  if (medio) {\n    console.log('🔍 Explorando elemento:', medio.textContent);\n    \n    // Hermano anterior\n    let anterior = medio.previousElementSibling;\n    if (anterior) {\n      console.log('⬅️ Hermano anterior:', anterior.textContent);\n    } else {\n      console.log('⬅️ No hay hermano anterior');\n    }\n    \n    // Hermano siguiente\n    let siguiente = medio.nextElementSibling;\n    if (siguiente) {\n      console.log('➡️ Hermano siguiente:', siguiente.textContent);\n    } else {\n      console.log('➡️ No hay hermano siguiente');\n    }\n    \n    // Padre\n    let padre = medio.parentElement;\n    console.log('⬆️ Elemento padre:', padre.tagName);\n    \n    // Contar hermanos totales\n    let hermanos = padre.children;\n    console.log('👨‍👩‍👧‍👦 Total de hermanos (incluyéndose):', hermanos.length);\n  }\n}\n\nexplorarHermanos();</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">🔍 Explorando elemento: Elemento medio</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">⬅️ Hermano anterior: Hermano 1</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">➡️ Hermano siguiente: Hermano 3</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">⬆️ Elemento padre: DIV</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">👨‍👩‍👧‍👦 Total de hermanos (incluyéndose): 3</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-pencil-alt'></i> Ejercicio 4: Selector Inteligente</h3>\n<p><strong>Objetivo:</strong> Crear una función que acepte cualquier selector CSS y muestre cuántos elementos encuentra.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Solución\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">function buscarElementos(selector) {\n  console.log('🔎 Buscando: \"' + selector + '\"');\n  \n  try {\n    // Intentar seleccionar con querySelectorAll\n    let elementos = document.querySelectorAll(selector);\n    \n    if (elementos.length === 0) {\n      console.log('❌ No se encontraron elementos');\n    } else if (elementos.length === 1) {\n      console.log('✓ Se encontró 1 elemento');\n      console.log('   Contenido:', elementos[0].textContent.slice(0, 50));\n    } else {\n      console.log('✓ Se encontraron ' + elementos.length + ' elementos');\n      console.log('   Primero:', elementos[0].textContent.slice(0, 30));\n      console.log('   Último:', elementos[elementos.length - 1].textContent.slice(0, 30));\n    }\n  } catch (error) {\n    console.log('⚠️ Selector inválido:', error.message);\n  }\n  \n  console.log('---');\n}\n\n// Probar con diferentes selectores\nbuscarElementos('.mi-clase');\nbuscarElementos('#titulo');\nbuscarElementos('p');\nbuscarElementos('div > p');\nbuscarElementos('.no-existe');</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\"><span class=\"console-string\">🔎 Buscando: \".mi-clase\"</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">✓ Se encontraron 5 elementos</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">   Primero: Contenido del primer elemento</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">   Último: Contenido del último elemento</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">🔎 Buscando: \"#titulo\"</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">✓ Se encontró 1 elemento</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">   Contenido: Mi Título Principal</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">🔎 Buscando: \".no-existe\"</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">❌ No se encontraron elementos</span></span>\n      <span class=\"console-line\"><span class=\"console-string\">---</span></span>\n    </div>\n  </div>\n</div>\n\n<h2><i class='fas fa-lightbulb'></i> Consejos Pro</h2>\n\n<h3>💡 Consejo 1: Almacena Elementos en Variables</h3>\n<p>Si vas a usar un elemento múltiples veces, guárdalo en una variable en vez de seleccionarlo cada vez.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ INEFICIENTE - Selecciona 3 veces\ndocument.querySelector('#miElemento').textContent = 'Nuevo texto';\ndocument.querySelector('#miElemento').style.color = 'blue';\ndocument.querySelector('#miElemento').style.fontSize = '20px';\n\n// ✓ EFICIENTE - Selecciona una vez, usa muchas veces\nlet elemento = document.querySelector('#miElemento');\nelemento.textContent = 'Nuevo texto';\nelemento.style.color = 'blue';\nelemento.style.fontSize = '20px';</code></pre>\n  </div>\n</div>\n\n<h3>💡 Consejo 2: Usa Selectores Específicos para Mejor Performance</h3>\n<p>Cuanto más específico sea tu selector, más rápido será. Evita selectores demasiado generales.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// 🐌 LENTO - Busca en TODA la página\nlet botones = document.querySelectorAll('button');\n\n// 🐇 RÁPIDO - Busca solo en un contenedor específico\nlet container = document.getElementById('miContenedor');\nlet botonesDentro = container.querySelectorAll('button');\n\n// 🚀 MÁS RÁPIDO - ID único es instantáneo\nlet botonEspecifico = document.getElementById('botonPrincipal');\n\n// Tip: Si tienes ID, usa getElementById (es más rápido que querySelector)\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"padding: 20px; background: #1e293b; border-radius: 8px;\">\n        <h2 id=\"demo-titulo1\" style=\"color: #3b82f6;\">Título Original</h2>\n        <p id=\"demo-descripcion1\" style=\"color: #94a3b8;\">Descripción original</p>\n        <button onclick=\"\n          document.getElementById('demo-titulo1').textContent = '¡Título Cambiado!';\n          document.getElementById('demo-descripcion1').textContent = 'Nueva descripción desde JavaScript';\n        \" style=\"padding: 8px 16px; background: #3b82f6; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n          Cambiar con getElementById\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>document</strong> - Es el objeto principal que representa toda tu página</li>\n<li><strong>.getElementById('titulo')</strong> - Busca el elemento que tiene id=\"titulo\"</li>\n<li>Devuelve <strong>UN solo elemento</strong> (los IDs deben ser únicos)</li>\n<li>Si no encuentra el ID, devuelve <strong>null</strong></li>\n<li><strong>Ventaja:</strong> Es el método más rápido cuando tienes IDs únicos</li>\n<li><strong>Limitación:</strong> Solo funciona con IDs, no con clases ni etiquetas</li>\n</ul>\n\n<h2><i class='fas fa-search'></i> Ejemplo 2: querySelector - El Selector Universal</h2>\n<p>El método más poderoso y flexible. Usa los mismos selectores que CSS, así que si sabes CSS, ya sabes usarlo.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    .caja { padding: 15px; margin: 10px 0; background: #1e293b; border-radius: 8px; }\n    .destacado { color: #10b981; font-weight: bold; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div class=\"caja\"&gt;\n    &lt;p class=\"destacado\"&gt;Primer párrafo destacado&lt;/p&gt;\n    &lt;p&gt;Párrafo normal&lt;/p&gt;\n    &lt;p class=\"destacado\"&gt;Segundo párrafo destacado&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;button onclick=\"seleccionarConQuerySelector()\"&gt;Seleccionar con querySelector&lt;/button&gt;\n\n  &lt;script&gt;\n    function seleccionarConQuerySelector() {\n      // Seleccionar por clase (solo el PRIMERO que encuentre)\n      let primerDestacado = document.querySelector('.destacado');\n      console.log('Primer destacado:', primerDestacado.textContent);\n      \n      // Seleccionar por etiqueta\n      let primerParrafo = document.querySelector('p');\n      console.log('Primer párrafo:', primerParrafo.textContent);\n      \n      // Seleccionar con selector complejo (CSS)\n      let parrafoEnCaja = document.querySelector('.caja p.destacado');\n      console.log('Párrafo destacado en caja:', parrafoEnCaja.textContent);\n      \n      // Cambiar el contenido del primero\n      primerDestacado.textContent = '¡Cambiado con querySelector!';\n    }\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <div style=\"padding: 15px; margin: 10px 0; background: #1e293b; border-radius: 8px;\">\n          <p id=\"demo-p1\" style=\"color: #10b981; font-weight: bold;\">Primer párrafo destacado</p>\n          <p style=\"color: #94a3b8;\">Párrafo normal</p>\n          <p style=\"color: #10b981; font-weight: bold;\">Segundo párrafo destacado</p>\n        </div>\n        <button onclick=\"\n          document.getElementById('demo-p1').textContent = '¡Cambiado con querySelector!';\n        \" style=\"padding: 8px 16px; background: #10b981; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n          Seleccionar con querySelector\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>querySelector('.destacado')</strong> - Busca usando selectores CSS (punto para clases)</li>\n<li>Devuelve <strong>SOLO el primer elemento</strong> que coincida</li>\n<li>Puedes usar <strong>cualquier selector CSS</strong>: clases (.clase), IDs (#id), etiquetas (p, div, button)</li>\n<li><strong>Selectores complejos:</strong> Puedes combinarlos como en CSS (.caja p.destacado)</li>\n<li><strong>Ventaja:</strong> Máxima flexibilidad, sintaxis familiar si sabes CSS</li>\n<li>Si no encuentra nada, devuelve <strong>null</strong></li>\n</ul>\n\n<h2><i class='fas fa-list'></i> Ejemplo 3: querySelectorAll - Seleccionar Múltiples Elementos</h2>\n<p>¿Necesitas todos los elementos que coincidan con un selector? querySelectorAll es tu solución. Devuelve una lista con TODOS los elementos encontrados.</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-eye\"></i> Vista Previa\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    .item { padding: 10px; margin: 5px 0; background: #334155; border-radius: 4px; color: #e2e8f0; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=\"lista\"&gt;\n    &lt;div class=\"item\"&gt;Item 1&lt;/div&gt;\n    &lt;div class=\"item\"&gt;Item 2&lt;/div&gt;\n    &lt;div class=\"item\"&gt;Item 3&lt;/div&gt;\n    &lt;div class=\"item\"&gt;Item 4&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;button onclick=\"modificarTodos()\"&gt;Modificar todos los items&lt;/button&gt;\n\n  &lt;script&gt;\n    function modificarTodos() {\n      // Seleccionar TODOS los elementos con clase 'item'\n      let todosLosItems = document.querySelectorAll('.item');\n      \n      // Verificar cuántos encontró\n      console.log('Encontrados:', todosLosItems.length);\n      \n      // Recorrer cada uno con forEach\n      todosLosItems.forEach(function(item, index) {\n        item.textContent = '✓ Item ' + (index + 1) + ' modificado';\n        item.style.background = '#10b981';\n      });\n    }\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"preview-wrapper\">\n      <div style=\"padding: 20px; background: #0f172a; border-radius: 8px;\">\n        <div id=\"demo-lista\">\n          <div class=\"demo-item\" style=\"padding: 10px; margin: 5px 0; background: #334155; border-radius: 4px; color: #e2e8f0;\">Item 1</div>\n          <div class=\"demo-item\" style=\"padding: 10px; margin: 5px 0; background: #334155; border-radius: 4px; color: #e2e8f0;\">Item 2</div>\n          <div class=\"demo-item\" style=\"padding: 10px; margin: 5px 0; background: #334155; border-radius: 4px; color: #e2e8f0;\">Item 3</div>\n          <div class=\"demo-item\" style=\"padding: 10px; margin: 5px 0; background: #334155; border-radius: 4px; color: #e2e8f0;\">Item 4</div>\n        </div>\n        <button onclick=\"\n          let items = document.querySelectorAll('.demo-item');\n          items.forEach(function(item, index) {\n            item.textContent = '✓ Item ' + (index + 1) + ' modificado';\n            item.style.background = '#10b981';\n          });\n        \" style=\"padding: 8px 16px; background: #8b5cf6; color: white; border: none; border-radius: 4px; cursor: pointer; margin-top: 10px;\">\n          Modificar todos los items\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>querySelectorAll('.item')</strong> - Devuelve <strong>TODOS</strong> los elementos que coincidan</li>\n<li>Devuelve una <strong>NodeList</strong> (similar a un array)</li>\n<li><strong>.length</strong> te dice cuántos elementos encontró</li>\n<li>Puedes usar <strong>forEach</strong> para recorrer cada elemento</li>\n<li>Cada elemento en el loop puede ser modificado individualmente</li>\n<li><strong>Diferencia clave:</strong> querySelector devuelve UNO, querySelectorAll devuelve TODOS</li>\n</ul>\n\n<h2><i class='fas fa-balance-scale'></i> Ejemplo 4: Comparando los Métodos</h2>\n<p>Veamos todos los métodos en acción y cuándo usar cada uno:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// HTML imaginario:\n// &lt;div id=\"principal\"&gt;\n//   &lt;p class=\"texto\"&gt;Párrafo 1&lt;/p&gt;\n//   &lt;p class=\"texto\"&gt;Párrafo 2&lt;/p&gt;\n//   &lt;span class=\"texto\"&gt;Span 1&lt;/span&gt;\n// &lt;/div&gt;\n\n// 1. getElementById - Solo por ID\nlet divPrincipal = document.getElementById('principal');\nconsole.log('Por ID:', divPrincipal); // &lt;div id=\"principal\"&gt;...\n\n// 2. querySelector - Primer elemento que coincida\nlet primerTexto = document.querySelector('.texto');\nconsole.log('Primer .texto:', primerTexto); // &lt;p class=\"texto\"&gt;Párrafo 1\n\n// 3. querySelectorAll - TODOS los que coincidan\nlet todosTextos = document.querySelectorAll('.texto');\nconsole.log('Todos .texto:', todosTextos.length); // 3 elementos\n\n// 4. querySelector con selector específico\nlet primerP = document.querySelector('p.texto');\nconsole.log('Primer p.texto:', primerP); // &lt;p class=\"texto\"&gt;Párrafo 1\n\n// 5. querySelectorAll con selector específico\nlet todosPTextos = document.querySelectorAll('p.texto');\nconsole.log('Todos p.texto:', todosPTextos.length); // 2 elementos</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Por ID: <span class=\"console-comment\">&lt;div id=\"principal\"&gt;...</span></span>\n      <span class=\"console-line\">Primer .texto: <span class=\"console-comment\">&lt;p class=\"texto\"&gt;Párrafo 1</span></span>\n      <span class=\"console-line\">Todos .texto: <span class=\"console-number\">3</span></span>\n      <span class=\"console-line\">Primer p.texto: <span class=\"console-comment\">&lt;p class=\"texto\"&gt;Párrafo 1</span></span>\n      <span class=\"console-line\">Todos p.texto: <span class=\"console-number\">2</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>getElementById:</strong> El más rápido, pero solo funciona con IDs</li>\n<li><strong>querySelector:</strong> Versátil, devuelve solo el primero</li>\n<li><strong>querySelectorAll:</strong> Cuando necesitas trabajar con múltiples elementos</li>\n<li>Puedes combinar selectores: <strong>p.texto</strong> = solo párrafos con clase texto</li>\n<li><strong>Regla práctica:</strong> Si tienes ID único → getElementById. Si necesitas flexibilidad → querySelector/All</li>\n</ul>\n\n<h2><i class='fas fa-graduation-cap'></i> Ejemplo 5: Selectores CSS Avanzados</h2>\n<p>querySelector acepta selectores CSS complejos. Aquí están los más útiles:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// Seleccionar por etiqueta\ndocument.querySelector('p');          // Primer párrafo\ndocument.querySelector('button');     // Primer botón\n\n// Seleccionar por clase\ndocument.querySelector('.mi-clase');  // Primer elemento con esa clase\n\n// Seleccionar por ID\ndocument.querySelector('#mi-id');     // Elemento con ese ID\n\n// Selectores descendientes (hijos, nietos, etc.)\ndocument.querySelector('div p');      // Primer p dentro de cualquier div\ndocument.querySelector('.container button');  // Primer botón dentro de .container\n\n// Selectores de hijo directo\ndocument.querySelector('div > p');    // Primer p que sea hijo DIRECTO de div\n\n// Múltiples clases\ndocument.querySelector('.clase1.clase2');  // Elemento con AMBAS clases\n\n// Selectores de atributo\ndocument.querySelector('[type=\"text\"]');     // Input con type=\"text\"\ndocument.querySelector('button[disabled]');  // Botón deshabilitado\n\n// Pseudo-clases\ndocument.querySelector('li:first-child');    // Primer li de su padre\ndocument.querySelector('li:last-child');     // Último li de su padre\ndocument.querySelector('p:nth-child(2)');    // Segundo p de su padre\n\n// Combinaciones complejas\ndocument.querySelector('.menu li a.activo'); // Link activo en un menú</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li>Los selectores funcionan <strong>exactamente igual que en CSS</strong></li>\n<li><strong>Espacio</strong> = descendiente (en cualquier nivel)</li>\n<li><strong>&gt;</strong> = hijo directo (un nivel abajo)</li>\n<li><strong>[atributo]</strong> = selecciona por atributos HTML</li>\n<li><strong>:pseudo-clase</strong> = estados o posiciones especiales</li>\n<li><strong>Combina</strong> selectores para ser más específico</li>\n</ul>\n\n<h2><i class='fas fa-project-diagram'></i> Ejemplo 6: Navegando el DOM - Padres e Hijos</h2>\n<p>Una vez que seleccionas un elemento, puedes navegar a sus padres, hijos o hermanos:</p>\n\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"tab-button\" onclick=\"switchTab(this, 'preview')\">\n      <i class=\"fas fa-terminal\"></i> Resultado\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// HTML imaginario:\n// &lt;div class=\"padre\"&gt;\n//   &lt;p class=\"hijo\"&gt;Soy un párrafo&lt;/p&gt;\n//   &lt;span&gt;Soy un span&lt;/span&gt;\n// &lt;/div&gt;\n\n// Seleccionar el párrafo\nlet parrafo = document.querySelector('.hijo');\n\n// Navegar hacia arriba (padre)\nlet padre = parrafo.parentElement;\nconsole.log('Padre:', padre);  // &lt;div class=\"padre\"&gt;\n\n// Navegar hacia abajo (hijos del padre)\nlet hijos = padre.children;\nconsole.log('Cantidad de hijos:', hijos.length);  // 2\n\n// Primer y último hijo\nconsole.log('Primer hijo:', padre.firstElementChild);  // &lt;p&gt;\nconsole.log('Último hijo:', padre.lastElementChild);   // &lt;span&gt;\n\n// Hermanos (siblings)\nlet hermanoSiguiente = parrafo.nextElementSibling;\nconsole.log('Hermano siguiente:', hermanoSiguiente);  // &lt;span&gt;\n\n// Verificar si tiene hijos\nconsole.log('¿Tiene hijos?', padre.hasChildNodes());  // true</code></pre>\n  </div>\n  \n  <div class=\"tab-content preview-tab\">\n    <div class=\"console-output\">\n      <span class=\"console-line\">Padre: <span class=\"console-comment\">&lt;div class=\"padre\"&gt;</span></span>\n      <span class=\"console-line\">Cantidad de hijos: <span class=\"console-number\">2</span></span>\n      <span class=\"console-line\">Primer hijo: <span class=\"console-comment\">&lt;p class=\"hijo\"&gt;</span></span>\n      <span class=\"console-line\">Último hijo: <span class=\"console-comment\">&lt;span&gt;</span></span>\n      <span class=\"console-line\">Hermano siguiente: <span class=\"console-comment\">&lt;span&gt;</span></span>\n      <span class=\"console-line\">¿Tiene hijos? <span class=\"console-boolean\">true</span></span>\n    </div>\n  </div>\n</div>\n\n<h3><i class='fas fa-search'></i> ¿Qué está pasando aquí?</h3>\n<ul>\n<li><strong>.parentElement</strong> - Sube un nivel al elemento padre</li>\n<li><strong>.children</strong> - Lista de todos los hijos directos</li>\n<li><strong>.firstElementChild / .lastElementChild</strong> - Primer/último hijo</li>\n<li><strong>.nextElementSibling / .previousElementSibling</strong> - Hermano siguiente/anterior</li>\n<li><strong>.hasChildNodes()</strong> - Verifica si tiene hijos</li>\n<li><strong>Útil para:</strong> Navegar estructuras sin conocer exactamente los IDs o clases</li>\n</ul>\n\n<h2><i class='fas fa-exclamation-triangle'></i> Errores Comunes</h2>\n\n<h3>❌ Error 1: Intentar Usar un Elemento que No Existe (null)</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ INCORRECTO - No verificar si existe\nlet elemento = document.getElementById('no-existe');\nelemento.textContent = 'Nuevo texto';  // ⚠️ ERROR: Cannot read property 'textContent' of null\n\n// ✓ CORRECTO - Siempre verificar primero\nlet elementoSeguro = document.getElementById('no-existe');\n\nif (elementoSeguro) {\n    elementoSeguro.textContent = 'Nuevo texto';\n} else {\n    console.log('Elemento no encontrado');\n}\n\n// ✓ También puedes usar el operador opcional (?.)\nlet elemento2 = document.getElementById('otro-id');\nelemento2?.textContent = 'Texto';  // Solo se ejecuta si existe</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>Si un elemento no existe, los métodos de selección devuelven <strong>null</strong>. Intentar usar null como si fuera un elemento causa errores. <strong>Siempre verifica</strong> que el elemento existe antes de usarlo.</p>\n\n<h3>❌ Error 2: Confundir querySelector con querySelectorAll</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ INCORRECTO - querySelector solo devuelve el primero\nlet items = document.querySelector('.item');\nitems.forEach(function(item) {  // ⚠️ ERROR: forEach no existe en un solo elemento\n    console.log(item);\n});\n\n// ✓ CORRECTO - querySelectorAll para múltiples elementos\nlet todosLosItems = document.querySelectorAll('.item');\ntodosLosItems.forEach(function(item) {  // ✓ Ahora sí funciona\n    console.log(item);\n});\n\n// ✓ O si solo quieres modificar el primero\nlet primerItem = document.querySelector('.item');\nprimerItem.textContent = 'Modificado';</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p><strong>querySelector</strong> devuelve UN elemento. <strong>querySelectorAll</strong> devuelve una lista (NodeList). No puedes usar .forEach en un solo elemento. Si necesitas múltiples elementos, usa querySelectorAll.</p>\n\n<h3>❌ Error 3: Olvidar el Punto o Numeral en Selectores</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-javascript\">// ❌ INCORRECTO - Sin punto busca ETIQUETA, no CLASE\nlet elemento = document.querySelector('titulo');  // Busca &lt;titulo&gt; (no existe)\n\n// ✓ CORRECTO - Con punto busca CLASE\nlet elementoCorrecto = document.querySelector('.titulo');  // Busca class=\"titulo\"\n\n// ❌ INCORRECTO - Sin # busca etiqueta\nlet boton = document.querySelector('miBoton');  // Busca &lt;miBoton&gt;\n\n// ✓ CORRECTO - Con # busca ID\nlet botonCorrecto = document.querySelector('#miBoton');  // Busca id=\"miBoton\"\n\n// Nota: getElementById NO necesita #\nlet conGetElement = document.getElementById('miBoton');  // ✓ Sin #</code></pre>\n  </div>\n</div>\n\n<h3><i class='fas fa-info-circle'></i> Explicación del error</h3>\n<p>En querySelector: <strong>clases necesitan punto (.)</strong>, <strong>IDs necesitan numeral (#)</strong>. Sin ellos, busca etiquetas HTML. getElementById NO usa #, solo el nombre del ID.</p>\n\n<h3>❌ Error 4: Ejecutar JavaScript Antes de Que Cargue el HTML</h3>\n<div class=\"code-example\">\n  <div class=\"tabs\">\n    <button class=\"tab-button active\" onclick=\"switchTab(this, 'code')\">\n      <i class=\"fas fa-code\"></i> Código\n    </button>\n    <button class=\"copy-btn\" onclick=\"copyCode(this)\" title=\"Copiar código\">\n      <i class=\"fas fa-copy\"></i>\n    </button>\n  </div>\n\n  <div class=\"tab-content code-tab active\">\n    <pre><code class=\"language-markup\">&lt;!-- ❌ INCORRECTO - Script ANTES del HTML --&gt;\n&lt;script&gt;\n  let boton = document.getElementById('miBoton');\n  console.log(boton);  // null - el botón aún no existe\n&lt;/script&gt;\n\n&lt;button id=\"miBoton\"&gt;Click&lt;/button&gt;\n\n&lt;!-- ✓ CORRECTO - Script DESPUÉS del HTML --&gt;\n&lt;button id=\"miBoton\"&gt;Click&lt;/button&gt;\n\n&lt;script&gt;\n  let boton = document.getElementById('miBoton');\n  console.log(boton);  // ✓ Funciona - el botón ya existe\n&lt;/script&gt;\n\n&lt;!-- ✓ TAMBIÉN CORRECTO - Esperar a que cargue todo --&gt;\n&lt;script&gt;\n  document.addEventListener('DOMContentLoaded', function() {\n    let boton = document.getElementById('miBoton');\n    console.log(boton);  // ✓ Funciona\n  });\n&lt;/script&gt;",
    "lastUpdated": "2025-10-26T16:44:04.241649"
  }
}